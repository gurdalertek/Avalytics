{"version":3,"sources":["services/tokenService.ts","components/styles/color_palette.ts","components/genericComponents/Title.tsx","components/Tokens.tsx","utils/generalUtil.ts","components/charts/candlestick/CrossHairs.js","components/charts/utils/mouseUtils.ts","components/charts/utils/plotUtils.ts","components/charts/BasicChart.tsx","components/charts/candlestick/Candle.js","components/charts/candlestick/Chart.js","components/charts/candlestick/CandleStickTemplate.js","components/genericComponents/AvadaSpinner.tsx","components/genericComponents/MultipleSelection.tsx","components/TokenView.tsx","utils/dateUtils.ts","services/dashboardService.ts","components/genericComponents/ExportIcon.tsx","components/genericComponents/List.tsx","components/dashboard/Gainers.tsx","components/dashboard/Losers.tsx","components/charts/pieChart/PieChart.tsx","components/dashboard/MarketCap.tsx","components/charts/miniChart/MiniChart.tsx","components/charts/miniChart/MiniChartContainer.tsx","components/dashboard/Dashboard.tsx","components/sidebar/NavItem.tsx","images/tokens.png","images/coins.png","images/pools.png","images/charts.png","images/whales.png","images/mempools.png","images/bridges.png","images/logo_2.png","components/sidebar/Sidebar.tsx","components/charts/heatmap/HeatMap.js","components/charts/barRaceChart/BarRaceChart.tsx","components/MultipleTokens.tsx","components/charts/steamChart/SteamGraph.js","services/dexService.ts","components/genericComponents/DateSlider.tsx","components/PoolView.tsx","components/genericComponents/UnderConstruction.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTokenList","a","TOKEN","Moralis","Object","extend","query","Query","select","find","results","tokenList","map","r","name","get","address","symbol","logoUrl","getTokenByAddress","equalTo","tokenInfo","getTokenPriceFromDB","TokenPrice","descending","limit","result","price","toFixed","marketCap","getTokenPriceHistoryDB","interval","since","upTo","candle","console","log","priceKey","fetchFromAverage","Error","greaterThan","lessThan","ascending","tokenPrices","obj","timestamp","exchange","candlePrices","closePrice","openPrice","maximumPrice","minimumPrice","assign","pctChange","fetchTokensForHeatMap","intervalStep","filterTokens","tokens","length","filter","t","includes","tokenPricesForHeat","Promise","all","prices","freshRecord","reverse","p","push","ColorPalette","Title","props","useState","popupActivated","setPopupActivated","popupCoords","setPopupCoords","style","margin","fontSize","title","hasInfo","onMouseEnter","e","target","getBoundingClientRect","rect","x","y","onMouseLeave","padding","icon","faInfoCircle","float","color","position","left","top","backgroundColor","opacity","zIndex","borderColor","borderWidth","borderRadius","width","height","TokenList","navigate","useNavigate","selected","setSelected","renderTokenPrice","token","renderMarketCap","variant","faSort","onClick","sort","idx","cursor","handleHover","src","Tokens","setTokenList","isAscending","setIsAscending","useEffect","then","filteredTokens","fetchTokenProps","updatedTokens","index","findIndex","prop","arr","b","parseFloat","CrossHairs","chart_dims","x1","y1","x2","pixel_width","y2","className","classNames","cross_hair","horz","pixel_height","vert","dollarAt","pixel","dollar","Math","abs","dollar_delta","dollar_low","addGrid","svg","xScale","yScale","xAxisGrid","axisBottom","tickSize","tickFormat","ticks","yAxisGrid","axisLeft","append","attr","call","updateGrid","selectAll","addAxis","xTicks","yTicks","xLabel","yLabel","d3","yAxis","xAxis","text","BasicChart","data","dates","undefined","mouseCoords","setMouseCoords","round","reduce","min","dollar_high","ceil","max","svgRef","useRef","current","domain","Date","range","yMin","yMax","line","d","i","curve","options","datum","strokeColor","setupData","setupLinearGraph","transition","duration","lineGenerator","updateChart","onMouseMove","nativeEvent","currentTarget","onMouseMoveInside","marginLeft","ref","fill","stroke","strokeWidth","Candle","candle_width","pixelFor","up","bar_top","bar_bottom","bar_height","wick_top","wick_bottom","down","wick","bottom","Chart","chart_width","chart_height","bar","floor","highs","lows","drawGraph","offsetX","offsetY","candle_x","CandleStickTemplate","buildCandles","time","setData","NFTicketSpinner","justifyItems","SpinnerCircularSplit","size","spinnerSize","message","MultipleSelection","direction","buttons","id","selectionHandler","value","buttonColor","textAlign","label","CHART_TYPES_ENUM","dateFromTimeStamp","date","month","parseInt","getMonth","toString","getDate","getFullYear","getTopGainers","currentDate","getTime","greaterThanOrEqualTo","gainers","slice","getTopLosers","getTopMCap","getHours","top5","get24HourPercentageChange","ExportIcon","justifyContent","faFileDownload","INTERVALS","LINE","CANDLESTICK","TokenView","intervalUnit","setIntervalUnit","radioOptions","setRadioOptions","getIntervalStep","setTokenInfo","setTokenPrices","setDates","chartType","setChartType","setSourceExchange","isLoading","setIsLoading","setNoDataAvailable","useParams","setIntervalStep","now","initialOffset","setInitialOffset","endOffset","setEndOffset","startDate","setStartDate","endDate","setEndDate","setPctChange","pct","h","sources","onChangeInterval","onChangeDate","fetchChartData","fontWeight","alignItems","paddingTop","AvadaSpinner","marginTop","xDomain","spacing","borderStyle","onChange","onChangeEnd","defaultValue","step","minStepsBetweenThumbs","bg","boxSize","ro","EntityList","tableStyle","noHead","entityProps","ep","entityList","entity","imageProp","postProcess","List","setEntityList","getter","entities","Gainers","Losers","PieChart","buildPieChart2","radius","node","arc","outerRadius","innerRadius","pie","percentage","feMerge","enter","on","this","midAngle","endAngle","startAngle","sin","cos","html","remove","tooltip","MarketCap","pieChartData","setPieChartData","allTokens","percentages","totalMCap","MiniChart","MiniChartContainer","setBorderColor","plotColor","setPlotColor","getPercentage","border","marginRight","Dashboard","NavItem","navSize","route","active","setActiveMenu","status","mt","flexDir","w","placement","as","ReactLink","to","_hover","ml","display","Menus","charts","coins","pools","whales","mempools","bridges","Sidebar","setNavSize","activeMenu","paddingRight","logo_2","m","mb","HeatMap","tokensList","setSvg","s","buildHeatMap","myGroups","Array","from","Set","myVars","pctgColor","interpolator","join","bandwidth","event","clientX","clientY","BarRaceChart","frameBorder","scrolling","sandbox","MultipleTokens","sliderStep","activeTokens","fetchPctChanges","tp","tl","checkActiveTokens","overflowY","listStyleType","marginBottom","iconColor","colorScheme","defaultChecked","checked","idxToRemove","indexOf","splice","handleCheckBoxChange","SteamGraph","setMaxKey","buildChart","chartData","keys","maxArray","maxKey","forEach","key","absMax","getMax","stackedData","offset","Tooltip","area","y0","grp","__data__","split","getPoolList","POOL","poolList","token0","token1","pairAddress","getInfoForPoolsForPair","PoolInfo","poolInfo","dexName","symbol0","symbol1","reserve0","reserve1","tvl0","tvl1","DateSlider","addressesToInclude","PoolView","setPoolList","activePools","setActivePools","setKeys","lastRequestLength","setLastRequestLength","newArr","newKey","nd","addressArray","ap","k","addressToRemove","newKeys","checkIsActive","UnderConstruction","CoreManager","set","App","initialize","appId","serverURL","serverUrl","useMoralis","authenticate","isAuthenticating","isAuthenticated","logout","authError","user","fontStyle","templateColumns","clsSpan","colSpan","overflow","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","initialColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c8f859.chunk.js","sourcesContent":["import Moralis from \"moralis\";\nimport {getBlockFromDate} from \"./miscService\";\n\nexport const getTokenList = async () : Promise<any[]> => {\n\n    const TOKEN = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TOKEN);\n    query.select(\"name\", \"id\",\"address\",\"symbol\",\"logoUrl\");\n    const results = await query.find();\n    const tokenList = results.map((r)=>{\n        return {name:r.get(\"name\"),address: r.get(\"address\"),symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\")}\n    });\n    return tokenList;\n}\n\nexport const getTokenByAddress = async (address: any) => {\n    const TOKEN = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TOKEN);\n    query.select(\"name\", \"id\",\"address\",\"symbol\",\"logoUrl\");\n    query.equalTo(\"address\", address);\n    const results = await query.find();\n    const tokenInfo = results.map((r)=>{\n        return {name:r.get(\"name\"),address: r.get(\"address\"),symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\")}\n    });\n    return tokenInfo[0];\n}\n\n\nexport const getTokenPrice = async (address : any , chain?: any, to_date?: any) => {\n\n    const options  = {\n        address: address,\n        chain: chain?chain:\"avalanche\"\n    };\n\n    if (to_date) {\n        const blockInfo = await getBlockFromDate(to_date);\n        Object.assign(options,{to_block: blockInfo.block});\n    }\n\n    const tokenPrice = await Moralis.Web3API.token.getTokenPrice(options);\n    console.log(`Price for token with address ${address} is ${tokenPrice.usdPrice}`);\n    return tokenPrice;\n}\n\n\nexport const getTokenPriceFromDB = async (address : any) => {\n    const TokenPrice = Moralis.Object.extend(\"Token15Min\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"timeStamp\",\"price\", \"address\", \"marketCap\");\n\n    query.equalTo(\"address\", address);\n    query.descending(\"timeStamp\");\n    query.limit(1);\n    const result = await query.find();\n    return {price: result[0]?.get(\"price\").toFixed(2), address: result[0]?.get(\"address\"), marketCap: result[0]?.get(\"marketCap\")};\n}\n\n\n\n\n\n\nexport const getTokenMetadata = async (address : any , chain?: any) => {\n    const options : any  = {\n        addresses: address,\n        chain: chain?chain:\"avalanche\"\n    };\n    const metadata = await Moralis.Web3API.token.getTokenMetadata(options);\n    return metadata;\n}\n\n\n\n\nexport const getTokenPriceHistory = async (address:any, dateInterval: string[]) => {\n    const priceHistory = [];\n    for(let date of dateInterval) {\n        console.log(\"Date is: \", date);\n        try {\n            const price : any = await getTokenPrice(address, \"avalanche\", date);\n            console.log(\"Timestamp date : \", date);\n            price[\"date\"] = new Date(date);\n            price[\"address\"] = address;\n            priceHistory.push(price);\n        } catch (e) {\n            console.log(\"Error getting price\")\n        }\n\n    }\n    console.log(\"Price history is: \", priceHistory);\n    return priceHistory;\n}\n\nexport const getTokenPriceHistoryDB = async (address : any, interval: string, since? : any, upTo? : any, candle? : boolean) : Promise<any>=> {\n    console.log(\"Received class name: \", interval);\n    // console.log(\"Asking prices previous to: \", since);\n    let TokenPrice = Moralis.Object.extend(interval);\n    const query = new Moralis.Query(TokenPrice);\n    const fetchFromAverage = (interval==\"Token1Day\" || interval==\"Token4Hour\" || interval==\"Token1Hour\");\n    const priceKey = fetchFromAverage?\"averagePrice\":\"price\";\n\n    if(candle) {\n        if(!fetchFromAverage)\n            throw new Error(\"Interval not supported for candle data\")\n\n        query.select(priceKey, \"closePrice\",\"openPrice\", \"maximumPrice\",\"minimumPrice\",\"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    } else {\n        query.select(priceKey, \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    }\n\n\n    query.equalTo(\"address\", address);\n    if(since) {\n        query.greaterThan(\"timeStamp\", since)\n    }\n    if (upTo) {\n        query.lessThan(\"timeStamp\", upTo);\n    }\n    query.ascending(\"timeStamp\");\n    query.limit(5000);\n    const results = await query.find();\n    const tokenPrices = results.map((r)=>{\n        const obj : any = {price:fetchFromAverage?r.get(\"averagePrice\"):r.get(\"price\"),timestamp: r.get(\"timeStamp\"), exchange:r.get(\"exchange\"), symbol: r.get(\"symbol\")};\n        if (candle) {\n            const candlePrices = {\n                closePrice: r.get(\"closePrice\"),\n                openPrice: r.get(\"openPrice\"),\n                maximumPrice:r.get(\"maximumPrice\"),\n                minimumPrice:r.get(\"minimumPrice\")\n            }\n            Object.assign(obj, {...candlePrices})\n        }\n\n        if(interval!=='Token15Min')\n            Object.assign(obj,{pctChange: r.get(\"pctChange\")})\n\n        return obj;\n    });\n    return tokenPrices;\n\n}\n\n\nexport const getTokenLogoUrls = async () : Promise<any[]>  => {\n    const TokenLogo = Moralis.Object.extend(\"TokenLogos\")\n    const query = new Moralis.Query(TokenLogo);\n    query.select(\"address\", \"logoUrl\");\n    // query.equalTo(\"address\", address);\n    const tokenUrls = await query.find();\n    const urls = tokenUrls.map(tu=>{\n        return{'logoUrl': tu.get(\"logoUrl\"), 'address': tu.get('address')}\n    })\n    return urls;\n}\n\nexport const getTokenLogoUrlForAddress = async (address: string) : Promise<any>  => {\n    const TokenLogo = Moralis.Object.extend(\"TokenLogos\")\n    const query = new Moralis.Query(TokenLogo);\n    query.select(\"address\", \"logoUrl\");\n    query.equalTo(\"address\", address);\n    const tokenUrl = await query.find();\n    return tokenUrl[0];\n}\n\n\n\n\nexport const fetchTokensForHeatMap = async (intervalStep : any, since?: any, upTo?: any, filterTokens:any[] = []) => {\n\n    let tokens = await getTokenList();\n    if(filterTokens.length > 0) {\n        tokens = tokens.filter((t:any)=>filterTokens.includes(t.symbol));\n    }\n    const tokenPricesForHeat : any[] = [];\n    await Promise.all(tokens.map(async (t) => {\n        const prices = await getTokenPriceHistoryDB(t.address, intervalStep, since, upTo)\n        const freshRecord: { timestamp: any; symbol: any; price: any; pctChange: any }[] = [];\n        prices.reverse().map((p:any)=>{\n            freshRecord.push({\"timestamp\":p.timestamp,\"symbol\":p.symbol, \"price\":p.price, \"pctChange\": p.pctChange});\n        });\n        tokenPricesForHeat.push(...freshRecord);\n    }))\n    return tokenPricesForHeat;\n\n}\n\n\n\nconst fetchCandleData = async (address : any, interval: string, since? : any, upTo? : any) : Promise<any>=> {\n    console.log(\"Received class name: \", interval);\n    // console.log(\"Asking prices previous to: \", since);\n    let TokenPrice = Moralis.Object.extend(interval);\n    const query = new Moralis.Query(TokenPrice);\n    const fetchFromAverage = (interval==\"Token1Day\" || interval==\"Token4Hour\" || interval==\"Token1Hour\");\n    const priceKey = fetchFromAverage?\"averagePrice\":\"price\";\n\n\n\n    query.select(priceKey, \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    query.equalTo(\"address\", address);\n    if(since) {\n        query.greaterThan(\"timeStamp\", since)\n    }\n    if (upTo) {\n        query.lessThan(\"timeStamp\", upTo);\n    }\n    query.ascending(\"timeStamp\");\n    query.limit(5000);\n    const results = await query.find();\n    const tokenPrices = results.map((r)=>{\n        const obj = {price:fetchFromAverage?r.get(\"averagePrice\"):r.get(\"price\"),timestamp: r.get(\"timeStamp\"), exchange:r.get(\"exchange\"), symbol: r.get(\"symbol\")};\n        if(interval!=='Token15Min')\n            Object.assign(obj,{pctChange: r.get(\"pctChange\")})\n\n        return obj;\n    });\n    return tokenPrices;\n\n}","\n\nexport const ColorPalette = {\n    mainColor: \"#056674\",\n    secondaryColor: \"#FF4B5C\",\n    thirdColor: \"#FF4B5C\",\n    highlight: \"#66BFBF\",\n    red: \"#fd4431\",\n    green: \"#09D766\",\n    backgroundColor:'white',\n    navFontColor: 'white'\n}\n\n\n\n//     {\n//     mainColor: \"#0070b5\",\n//     secondaryColor: \"#49b7e9\",\n//     thirdColor: \"#8681e8\",\n//     highlight: \"#fe89be\",\n//     red: \"#fd4431\",\n//     green: \"#09D766\"\n// }","\nimport {HStack, Text} from '@chakra-ui/react';\nimport {faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {useState} from \"react\";\nimport {ColorPalette} from \"../styles/color_palette\";\n\nexport default function Title(props: any) {\n\n    const [popupActivated, setPopupActivated] = useState(false);\n\n    const [popupCoords, setPopupCoords] = useState([0,0]);\n\n    const handleInfoHover = (e:any) => {\n        console.log(\"Event: \", e.target);\n        console.log(\"Boundingrect: \", e.target.getBoundingClientRect())\n        const rect = e.target.getBoundingClientRect()\n        setPopupCoords([rect.x, rect.y])\n        console.log(\"Activating popup\");\n        setPopupActivated(true);\n    }\n\n    const handleInfoOut = () => {\n        setPopupActivated(false);\n\n    }\n\n\n    return(<HStack style={{margin:20}}>\n        <Text fontSize='2xl'>{props.title}</Text>\n        {props.hasInfo && <div onMouseEnter={handleInfoHover} onMouseLeave={handleInfoOut} style={{padding:10}}><FontAwesomeIcon  icon={faInfoCircle}  style={{float:'right',color:ColorPalette.mainColor}}/></div>}\n        {popupActivated && (<div style={{position:'absolute', left: popupCoords[0] + 20,top: popupCoords[1] + 20, float:'left',backgroundColor:ColorPalette.mainColor, opacity:0.95, zIndex:999,borderColor:'gray', borderWidth:1,\n            borderRadius:10, width:200, height: 200, padding:20}}>Hey</div>)}\n    </HStack>)\n}","import React, {ReactNode, useEffect, useState} from 'react';\nimport {getTokenList, getTokenLogoUrls, getTokenPrice, getTokenPriceFromDB} from \"../services/tokenService\";\nimport {\n    Table,\n    Tbody,\n    Td,\n    Th,\n    Thead,\n    Tr, useDisclosure\n} from \"@chakra-ui/react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Title from \"./genericComponents/Title\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport  { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faSort } from '@fortawesome/free-solid-svg-icons'\nimport {sort} from \"../utils/generalUtil\";\n// import fontawesome from '@fortawesome/fontawesome'\n\n// fontawesome.library.add(faSort as any);\n\nfunction Drawer(props: { isFullHeight: boolean, placement: string, onClose: any, isOpen: any, children: ReactNode }) {\n    return null;\n}\n\nfunction Tokens(props:any)  {\n\n    const [tokenList, setTokenList] = useState<any[]>([])\n    const [isAscending, setIsAscending] = useState(false);\n\n    useEffect (()=> {\n        getTokenList()\n\n            .then((tokens)=>{\n                const filteredTokens = tokens.filter((t:any)=>t.symbol!='ANY' && t.symbol!='SUSHI.e');\n                console.log(\"FIltered tokens: \", filteredTokens);\n                setTokenList(filteredTokens);\n\n                // fetchTokenProps(tokenList);\n\n            });\n    },[])\n\n    useEffect(()=> {\n        fetchTokenProps(tokenList);\n    },[tokenList])\n\n\n    const fetchTokenProps = (tokens: any[]) => {\n        console.log(\"Will start props fetching!!\");\n        tokens.map((token)=> {\n            console.log(\"Fetching for: \", token.address);\n            getTokenPriceFromDB(token.address)\n                .then((t)=>{\n                    console.log(\"Received that...\");\n                    const updatedTokens = tokenList;\n                    const index = updatedTokens.findIndex((obj:any) => obj.address == t.address);\n                    if(updatedTokens[index]) {\n                        updatedTokens[index].price = t.price?t.price:0;\n                        updatedTokens[index].marketCap = t.marketCap?t.marketCap:0;\n                        console.log(\"Updated: \", t.address);\n                        setTokenList(updatedTokens);\n                    }\n                })\n        })\n    }\n\n\n\n\n\n    const sortTokens = (prop : string) => {\n        setTokenList(sort(tokenList, prop, isAscending));\n        setIsAscending(!isAscending);\n    }\n\n\n    return (\n        <div style={{...props.style}}>\n            <Title title=\"Tokens\" hasInfo/>\n            {tokenList.length>0 &&\n                <TokenList tokenList={tokenList} sort={sortTokens}/>}\n        </div>\n    );\n}\n\n\nfunction TokenList(props: any) {\n\n\n    const navigate = useNavigate();\n\n    const [selected, setSelected] = useState<number | null>(null);\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n    const handleLeave = () => {\n        setSelected(null);\n    }\n\n    const renderTokenPrice = (token : any) => {\n        if(token.price > -1) {\n            return (<span>{'$ ' + token.price}</span>)\n        } else {\n            // return (<AvadaSpinner spinnerSize={40} style={{alignItems:'center', justifyContent: 'center'}}/>)\n            return(<span>-</span>)\n        }\n    }\n\n    const renderMarketCap = (token:any) => {\n        if(token.marketCap > -1) {\n            return (<span>{'M$ ' + (token.marketCap / 10**6).toFixed(2)}</span>)\n        } else {\n            // return (<AvadaSpinner spinnerSize={40} style={{alignItems:'center', justifyContent: 'center'}}/>)\n            return(<span>-</span>)\n        }\n    }\n\n\n\n\n\n\n\n    return(<Table variant='simple'>\n        <Thead>\n            <Tr>\n                <Th>Name</Th>\n                <Th>Symbol <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('symbol')}/></Th>\n                <Th>Current Price <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('price')}/></Th>\n                <Th>Market Cap <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('marketCap')}/></Th>\n            </Tr>\n        </Thead>\n            <Tbody>\n                {props.tokenList.map((token: any, idx: number)=> {\n                    return(<Tr key={idx} style={selected==idx?{backgroundColor:ColorPalette.highlight, borderRadius:10, cursor:'pointer'}:{}}\n                               onMouseEnter={(e)=> handleHover(e, idx)}\n                               onMouseLeave={()=>handleLeave()}\n                               onClick={()=>navigate(`/token/${token.address}`)}>\n                        <Td><img style={{width:64, height:64}} src={token.logoUrl}/></Td>\n                        <Td>{token.symbol}</Td>\n                        <Td>{renderTokenPrice(token)}</Td>\n                        <Td>{renderMarketCap(token)}</Td>\n                    </Tr>)\n                })}\n            </Tbody>\n\n    </Table>)\n}\n\n\n\n\nexport default Tokens;","\n\nexport const sort = (arr: any[],prop: string, isAscending: boolean) => {\n\n    if(isAscending) {\n        arr.sort( function( a:any , b:any){\n            if(parseFloat(a[prop]) > parseFloat(b[prop])) return 1;\n            if(parseFloat(a[prop]) < parseFloat(b[prop])) return -1;\n            return 0;\n        });\n    } else {\n        arr.sort( function( a:any , b:any){\n            if(parseFloat(a[prop]) > parseFloat(b[prop])) return -1;\n            if(parseFloat(a[prop]) < parseFloat(b[prop])) return 1;\n            return 0;\n        });\n    }\n\n    console.log(\"Sorted: \", arr);\n    return arr;\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst CrossHairs = props => {\n    const { x, y, chart_dims,style } = props;\n\n    if (x + y === 0) {\n        return <></>;\n    }\n\n    return (\n        <>\n            <line\n                x1={0}\n                y1={y}\n                x2={chart_dims.pixel_width}\n                y2={y}\n                style={style}\n                className={classNames({\n                    cross_hair: true,\n                    horz: true\n                })}\n            />\n            <line\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={chart_dims.pixel_height}\n                style={style}\n                className={classNames({\n                    cross_hair: true,\n                    vert: true\n                })}\n            />\n        </>\n    );\n};\n\nexport default CrossHairs;\n","export const onMouseLeave = (setMouseCoords: any) => {\n    setMouseCoords({\n        x: 0,\n        y: 0\n    });\n};\n\nexport const onMouseMoveInside = (e:any, setMouseCoords: any) => {\n    setMouseCoords({\n        x:\n            e.nativeEvent.x -\n            Math.round(e.currentTarget.getBoundingClientRect().left),\n        y:\n            e.nativeEvent.y -\n            Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n};\n\nexport const dollarAt = (pixel:any, chart_dims: any) => {\n    const dollar =\n        (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n        chart_dims.dollar_delta +\n        chart_dims.dollar_low;\n\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n};","import {axisBottom, axisLeft} from \"d3\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport * as d3 from \"d3\";\n\nexport const addGrid = (svg: any, xScale : any, yScale : any, height : any, width : any) => {\n    const tickFormat : any = \"\";\n\n    const xAxisGrid : any = axisBottom(xScale).tickSize(-height).tickFormat(tickFormat).ticks(10);\n    const yAxisGrid : any = axisLeft(yScale).tickSize(-width).tickFormat(tickFormat).ticks(10);\n    svg.append('g')\n        .attr('class', 'x axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxisGrid);\n    svg.append('g')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(yAxisGrid);\n}\n\n\nexport const updateGrid = (svg: any, xScale : any, yScale : any, height : any, width : any) => {\n    const tickFormat : any = \"\";\n\n    const xAxisGrid : any = axisBottom(xScale).tickSize(-height).tickFormat(tickFormat).ticks(10);\n    const yAxisGrid : any = axisLeft(yScale).tickSize(-width).tickFormat(tickFormat).ticks(10);\n    svg.selectAll('g.y.axis-grid')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(xAxisGrid)\n\n    svg.selectAll('g.y.axis-grid')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(yAxisGrid);\n}\n\n\n\nexport const addAxis = (svg: any, xScale: any, yScale: any, width:number, height: number, xTicks:number, yTicks:number , xLabel: string, yLabel: string) => {\n    const dateFormat : any = d3.timeFormat('%b')\n    // Setup the axes\n\n    const yAxis = d3.axisLeft(yScale)\n        .ticks(5);\n\n    const xAxis = d3.axisBottom(xScale)\n        .ticks(5);\n\n    svg.append('g')\n        .attr('class', 'x axis')\n        .attr('color', ColorPalette.mainColor)\n        .attr(\"transform\",\"translate(0,\" + height + \")\")\n        .call(xAxis)\n\n    svg.append('g')\n        .attr('color', ColorPalette.mainColor)\n        .attr('class', 'y axis')\n        .call(yAxis)\n\n\n    svg.append(\"text\")\n        .attr(\"class\", \"y label\")\n        .attr('color', ColorPalette.mainColor)\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", -50 - 10)\n        .attr(\"x\",  - height/2 + 10)\n        .attr(\"dy\", \".75em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .text(yLabel);\n}\n\n\n","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {transition} from \"d3-transition\";\nimport {select, selectAll} from \"d3-selection\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport CrossHairs from \"./candlestick/CrossHairs\";\nimport {dollarAt, onMouseLeave, onMouseMoveInside} from \"./utils/mouseUtils\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {addAxis, addGrid, updateGrid} from \"./utils/plotUtils\";\n\n\nconst BasicChart = (props: any) => {\n\n    const {data,width, height, dates} = props;\n\n    const [lineGenerator, setLineGenerator] = useState<any>(undefined);\n\n\n    const [mouseCoords, setMouseCoords] = useState({\n        x: 0,\n        y: 0\n    });\n\n    const dollar_low = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n    const dollar_high = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n\n\n    const chart_dims = {\n        pixel_width: width,\n        pixel_height: height,\n        dollar_high,\n        dollar_low,\n        dollar_delta: dollar_high - dollar_low\n    };\n\n\n    // console.log(\"Domain is: \", xDomain);\n\n    const svgRef = useRef<any>();\n\n    function updateChart() {\n        const {\n             data,\n        } = props;\n\n\n        const t : any = transition().duration(1000);\n\n        const line = select('#line');\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', ColorPalette.backgroundColor)\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n\n        const xScale: any = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, width]) // x width\n\n        const yMin = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n\n        const xAxis: any = d3.axisBottom(xScale)\n            .ticks(5);\n\n        svg.selectAll('g.x.axis')\n            .attr(\"transform\",\"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n        const yAxis: any = d3.axisLeft(yScale)\n            .ticks(5);\n\n        svg.selectAll('g.y.axis')\n            .call(yAxis);\n\n\n        updateGrid(svg,xScale,yScale,height,width);\n\n\n        const lineGenerator = d3.line()\n            .x((d, i)=> xScale(new Date(dates[i]*1000)))\n            .y(yScale)\n            .curve(d3.curveLinear)\n\n        line\n            .datum(data)\n            .transition(t)\n            .attr('d', lineGenerator);\n    }\n\n\n    const setupData = (svg:any, data:any, line:any, options: any) => {\n        // Setup data\n        svg\n            .append('path')\n            .datum(data)\n            .attr('id', 'line')\n            .attr('stroke', options.strokeColor?options.strokeColor:'black')\n            .attr('stroke-width', 2)\n            .attr('fill', 'none')\n            .attr('d', line);\n    }\n\n\n\n    const setupLinearGraph = (prices: any[]) => {\n\n        // Setup svg\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', ColorPalette.backgroundColor)\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        // Setup scaling\n\n        const xScale: any = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, width]) // x width\n\n\n        const yMin = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n        console.log(\"Y max is: \", yMax);\n        console.log(\"Y min is: \", yMin);\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n        // Setting up line\n        const line = d3.line()\n            .x((d, i)=> xScale(i))\n            .y(yScale)\n            .curve(d3.curveLinear)\n        // setLineGenerator(line);\n\n        addAxis(svg,xScale,yScale, width,height,5,5,'Date', 'USD Price');\n\n        addGrid(svg,xScale,yScale,height,width);\n\n        const dataOptions = {strokeColor: ColorPalette.secondaryColor}\n        setupData(svg, data,line, dataOptions);\n        return line;\n    }\n\n\n    useEffect(()=>{\n\n        setupLinearGraph(data);\n    },[])\n\n\n    useEffect(() => {\n        updateChart()\n        }, [data])\n\n\n        return (\n            <div>\n                <svg onMouseMove={(e)=>onMouseMoveInside(e, setMouseCoords)}\n                     onMouseLeave={()=>onMouseLeave(setMouseCoords)}\n                     style={{marginLeft: \"100px\", zIndex:-1}} ref={svgRef}>\n                    <text x=\"10\" y=\"16\" fill={ColorPalette.mainColor} fontSize=\"25\">\n                        <tspan x=\"10\" y=\"30\" color={ColorPalette.red}>\n                            Dollars: ${dollarAt(mouseCoords.y, chart_dims)}\n                        </tspan>\n                    </text>\n                    <CrossHairs style={{stroke:\"#892CDC\",strokeWidth:2}} x={mouseCoords.x} y={mouseCoords.y} chart_dims={{pixel_width: width, pixel_height: height}} />\n                </svg>\n\n            </div>\n        )\n\n};\n\nexport default BasicChart;","import React from \"react\";\nimport classNames from \"classnames\";\nimport * as d3 from \"d3\";\n\nconst Candle = props => {\n    const { data, x, candle_width, pixelFor } = props;\n\n    const up = data.closePrice > data.openPrice;\n    const bar_top = pixelFor(up ? data.closePrice : data.openPrice);\n    const bar_bottom = pixelFor(up ? data.openPrice : data.closePrice);\n    const bar_height = bar_bottom - bar_top;\n    const wick_top = pixelFor(data.maximumPrice);\n    const wick_bottom = pixelFor(data.minimumPrice);\n\n    return (\n        <>\n            <rect\n                x={x - candle_width / 2}\n                y={bar_top}\n                width={candle_width}\n                height={bar_height}\n                className={classNames({\n                    candle: true,\n                    up: up,\n                    down: !up\n                })}\n            />\n            <line\n                className={classNames({\n                    wick: true,\n                    top: true,\n                    up: up,\n                    down: !up\n                })}\n                x1={x}\n                y1={bar_top}\n                x2={x}\n                y2={wick_top}\n            />\n            <line\n                className={classNames({\n                    wick: true,\n                    bottom: true,\n                    up: up,\n                    down: !up\n                })}\n                x1={x}\n                y1={bar_bottom}\n                x2={x}\n                y2={wick_bottom}\n            />\n        </>\n    );\n};\n\nexport default Candle;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport classNames from \"classnames\";\nimport * as d3 from \"d3\";\n\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport {dollarAt, onMouseLeave, onMouseMoveInside} from \"../utils/mouseUtils\";\nimport {transition} from \"d3-transition\";\nimport {select} from \"d3-selection\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {addAxis, addGrid, updateGrid} from \"../utils/plotUtils\";\n\nconst Chart = props => {\n    const { data, width: chart_width, height: chart_height, dates } = props;\n\n    // console.log(\"Received data: \", data);\n    const svgRef = useRef();\n    // let { last_bar_idx = 0, bars_wide = 40 } = props;\n\n    // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n    // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n    const [mouseCoords, setMouseCoords] = useState({\n        x: 0,\n        y: 0\n    });\n\n    console.log(\"Data is: \", data);\n    // find the high and low bounds of all the bars being sidplayed\n    const dollar_high = d3.max(data.map(bar => bar.maximumPrice)) * 1.05;\n    const dollar_low = d3.min(data.map(bar => bar.minimumPrice)) * 0.95;\n\n    console.log(`Highs are: high ${dollar_high} and low ${dollar_low}`);\n\n    const chart_dims = {\n        pixel_width: chart_width,\n        pixel_height: chart_height,\n        dollar_high,\n        dollar_low,\n        dollar_delta: dollar_high - dollar_low\n    };\n\n    const dollarAt = pixel => {\n        const dollar =\n            (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n            chart_dims.dollar_delta +\n            chart_dims.dollar_low;\n\n        return pixel > 0 ? dollar.toFixed(2) : \"-\";\n    };\n\n    const pixelFor = dollar => {\n        return Math.abs(\n            ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"]) *\n            chart_dims[\"pixel_height\"] -\n            chart_dims[\"pixel_height\"]\n        );\n    };\n\n    const onMouseLeave = () => {\n        setMouseCoords({\n            x: 0,\n            y: 0\n        });\n    };\n\n    const onMouseMoveInside = e => {\n        setMouseCoords({\n            x:\n                e.nativeEvent.x -\n                Math.round(e.currentTarget.getBoundingClientRect().left),\n            y:\n                e.nativeEvent.y -\n                Math.round(e.currentTarget.getBoundingClientRect().top)\n        });\n    };\n\n    const onMouseClickInside = e => {\n        console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n    };\n\n    // calculate the candle width\n    const candle_width = Math.floor((chart_width / data.length) * 0.7);\n\n\n    function updateChart() {\n        const {\n            data,\n        } = props;\n\n        const svg = d3.select(svgRef.current);\n\n        const xScale = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, props.width]) // x width\n        const highs = data.map(d=>d.maximumPrice);\n        const lows = data.map(d=>d.minimumPrice);\n        const yMin = Math.round(lows.reduce((a,b) => Math.min(a,b)));\n        const yMax = Math.ceil(highs.reduce((a,b)=> Math.max(a,b)));\n        const yScale = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([props.height, 0])\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .ticks(5);\n\n        svg.selectAll('g.x.axis')\n            .attr(\"transform\",\"translate(0,\" + props.height + \")\")\n            .call(xAxis);\n\n        const yAxis = d3.axisLeft(yScale)\n            .ticks(5);\n\n        svg.selectAll('g.y.axis')\n            .call(yAxis);\n\n\n\n        updateGrid(svg,xScale,yScale,props.height,props.width);\n\n    }\n\n\n\n\n    const drawGraph = (data) => {\n\n        const xScale = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, props.width]) // x width\n\n        const highs = data.map(d=>d.maximumPrice);\n        const lows = data.map(d=>d.minimumPrice);\n        const yMin = Math.round(lows.reduce((a,b) => Math.min(a,b)));\n        const yMax = Math.ceil(highs.reduce((a,b)=> Math.max(a,b)));\n\n        const yScale = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([props.height, 0])\n\n        const ticksNumber = 10;\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', props.width)\n            .attr('height', props.height)\n            .style('background', 'white')\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        console.log(\"Before adding axis xScale is: \", xScale);\n        console.log(\"Before adding axis yScale is: \", yScale);\n\n\n        addAxis(svg,xScale,yScale, props.width,props.height,5,5,'Date', 'USD Price');\n\n\n        addGrid(svg,xScale,yScale,props.height,props.width);\n\n    }\n\n    useEffect(() => {\n        console.log(\"Setting up with prices: \", data);\n        drawGraph(data);\n    }, [])\n\n\n    useEffect(() => {\n        updateChart();\n    },[data])\n\n\n\n    return (\n        <svg\n            ref={svgRef}\n            width={chart_width}\n            height={chart_height}\n            // onMouseMove={onMouseMoveInside}\n            onClick={onMouseClickInside}\n            // onMouseLeave={onMouseLeave}\n\n            onMouseMove={(e)=>onMouseMoveInside(e, setMouseCoords)}\n            onMouseLeave={()=>onMouseLeave(setMouseCoords)}\n            style={{marginLeft: \"100px\", zIndex:-1}} ref={svgRef}>\n            <text x=\"10\" y=\"16\" fill=\"black\" fontSize=\"20\">\n                <tspan x=\"10\" y=\"30\" color=\"black\">\n                    Dollars: ${dollarAt(mouseCoords.y, chart_dims)}\n                </tspan>\n            </text>\n            {data.map((bar, i) => {\n                const candle_x = (chart_width / (data.length + 1)) * (i + 1);\n                return (\n                    <Candle\n                        key={i}\n                        data={bar}\n                        x={candle_x}\n                        candle_width={candle_width}\n                        pixelFor={pixelFor}\n                    />\n                );\n            })}\n            <text x=\"10\" y=\"16\" fill=\"white\" fontSize=\"10\">\n                <tspan x=\"10\" y=\"30\">\n                    Dollars: ${dollarAt(mouseCoords.y)}\n                </tspan>\n            </text>\n            <CrossHairs style={{stroke:\"black\",strokeWidth:2}} x={mouseCoords.x} y={mouseCoords.y} chart_dims={chart_dims} />\n        </svg>\n    );\n};\n\nexport default Chart;\n","import React, {useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport \"./styles.css\";\nimport Chart from \"./Chart\";\nimport {getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport BasicChart from \"../BasicChart\";\n\n\nexport default function CandleStickTemplate(props) {\n\n    let bars_displayed = 40;\n    let last_bar_displayed = 0;\n\n    const randomOne = (weight = 1) => {\n        return (Math.random() + Math.random() - 1) * weight;\n    };\n\n\n\n\n    const buildCandles = (d) => {\n        if(!props.data.map(r=>r.minimumPrice)[0])\n            return;\n\n        console.log(\"Candles: \", props.data);\n        return props.data.map((prices, i) => {\n            const openPrice =prices.openPrice;\n            const closePrice = prices.closePrice\n            const maximumPrice = prices.maximumPrice\n            const minimumPrice = prices.minimumPrice;\n            const t = prices.timestamp;\n            return {\n                time: new Date(t*1000),\n                openPrice,\n                maximumPrice,\n                minimumPrice,\n                closePrice\n            };\n        })\n\n    }\n\n\n    // buildCandles();\n\n    const [data, setData] = useState(buildCandles());\n\n    useEffect(()=> {\n        setData(buildCandles());\n    },[])\n\n\n    useEffect(()=>{\n        console.log(\"Building candles\");\n        setData(buildCandles());\n    },props.data)\n\n\n\n    return (\n        <div>\n\n                <div>\n                    {data && <Chart data={data} dates={props.dates} width={props.width} height={props.height} />}\n                </div>\n\n        </div>\n    );\n}\n","import {SpinnerCircularSplit} from \"spinners-react\";\nimport React from \"react\";\nimport {ColorPalette} from \"../styles/color_palette\";\n\n\nconst NFTicketSpinner = (props:any) => {\n\n    return(\n        <div  style={{...props.style, justifyItems:'center'}}>\n            <SpinnerCircularSplit size={props.spinnerSize?props.spinnerSize:\"60\"} color={ColorPalette.secondaryColor}/>\n            <span style={{color:ColorPalette.secondaryColor,  marginLeft:\"20px\"}}>{props.message}</span>\n        </div>\n    )\n\n\n}\n\nexport default NFTicketSpinner;","import {Stack} from \"@chakra-ui/react\";\nimport {useState} from \"react\";\n\n\nexport default function MultipleSelection(props: any) {\n\n    const [selected, setSelected] = useState<number>(-1);\n\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n    const handleLeave = () => {\n        setSelected(-1);\n    }\n\n\n    return (\n        <div >\n\n            <Stack direction='row'>\n                {\n                    props.buttons.map((b:any, idx: number)=>{\n                        return (<div id={`select-${idx}`} onClick={()=>props.selectionHandler(b.value)}\n                                     style={{backgroundColor:selected==idx?'grey':props.style.buttonColor,\n                            margin:10,\n                            padding:10,\n                            textAlign:\"center\",\n                             // height:20,\n                            borderRadius: 10,\n                            cursor: 'pointer',\n                            }}\n                                     onMouseEnter={(e)=> handleHover(e, idx)}\n                                     onMouseLeave={(e)=>handleLeave()}\n                        >\n                            <span>{b.label}</span>\n                        </div>)\n                    })\n                }\n            </Stack>\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {\n    getTokenByAddress,\n    getTokenMetadata,\n    getTokenPriceHistory,\n    getTokenPriceHistoryDB\n} from \"../services/tokenService\";\nimport {useParams} from \"react-router-dom\";\nimport {\n    Button, Flex,\n    Grid,\n    GridItem, HStack,\n    Radio,\n    RadioGroup,\n    RangeSlider, RangeSliderFilledTrack, RangeSliderThumb,\n    RangeSliderTrack,\n    Select,\n    Stack, VStack\n} from \"@chakra-ui/react\";\n\nimport BasicChart from \"./charts/BasicChart\";\nimport RadioSelection from \"./genericComponents/RadioSelection\";\nimport CandleStickTemplate from \"./charts/candlestick/CandleStickTemplate\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport MultipleSelection from \"./genericComponents/MultipleSelection\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport {get24HourPercentageChange} from \"../services/dashboardService\";\nimport {FaFontAwesome} from \"react-icons/all\";\nimport {faFileExport, faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\n\nenum CHART_TYPES_ENUM {\n    LINE,\n    CANDLESTICK\n}\n\n\nconst INTERVALS = [\n    { value: \"Token1Day\", label: '1 Day' },\n    { value: \"Token4Hour\", label: '4 Hours' },\n    { value: \"Token1Hour\", label: '1 Hour' },\n    {value: \"Token15Min\", label: '15 Mins'}\n]\n\nconst CHART_TYPES = [{ value: CHART_TYPES_ENUM.LINE, label: 'Line Chart' },\n    {value: CHART_TYPES_ENUM.CANDLESTICK, label: 'Candlestick chart'}]\n\n\n\nfunction TokenView(props:any)  {\n\n    const [intervalUnit, setIntervalUnit] = useState(INTERVALS[0].value);\n    const [radioOptions, setRadioOptions] = useState(INTERVALS);\n\n    const getIntervalStep = () => {\n        switch (intervalUnit) {\n            case \"Token1Day\":\n                return 24 * 60 * 60;\n            case \"Token4Hour\":\n                return 4 * 60 * 60;\n            case \"Token1Hour\":\n                return 60 * 60;\n            case \"Token15Min\":\n                return 15 * 60;\n            default:\n                return 1;\n        }\n    }\n\n    const [tokenInfo, setTokenInfo] = useState<any>(null);\n    const [tokenPrices, setTokenPrices] = useState <any[]>([]);\n    const [dates, setDates] = useState<any[]>([]);\n    const [chartType, setChartType] = useState(CHART_TYPES_ENUM.LINE);\n    const [sourceExchange, setSourceExchange] = useState<any[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [noDataAvailable, setNoDataAvailable] = useState(false);\n    const {address} = useParams<string>();\n    // const [intervalUnit, setIntervalUnit] = useState<any>(INTERVALS[0].value); // Gives us used interval (1day, 4hour, 1hour, ...)\n    const [intervalStep, setIntervalStep] = useState<any>(getIntervalStep()) // Step for slider\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 30*24*60*60*1000)/1000); // 30 days in the past in seconds\n    const [endOffset, setEndOffset] = useState(Date.now()/1000);\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState<any>(dateFromTimeStamp(Date.now()/1000));\n    const [pctChange, setPctChange] = useState(0);\n\n\n    useEffect(()=>{\n        setIsLoading(true);\n        getTokenByAddress(address)\n            .then((t)=> {\n                console.log(\"Received: \", t);\n                setTokenInfo(t);\n            })\n\n        get24HourPercentageChange(address)\n            .then((pct)=> {\n                setPctChange(pct)\n                // setPlotColor(pct>0?ColorPalette.green:ColorPalette.red)\n            });\n\n        getTokenPriceHistoryDB(address, intervalUnit, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                console.log(\"Got price history: \", tokenPrices)\n                setIsLoading(false);\n                const sources : any[] = [];\n                h.map((p)=>{\n                    if(!sources.includes(p.exchange)) {\n                        sources.push(p.exchange);\n                    }\n                })\n                setSourceExchange(sources);\n                console.log(\"Sources: \", sources);\n            })\n\n    },[])\n\n\n    useEffect(()=> {\n        setTokenPrices([]);\n        setIsLoading(true);\n        getTokenPriceHistoryDB(address, intervalUnit, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n\n    },[chartType])\n\n\n\n    const onChangeInterval = async (interval: any) => {\n        console.log(\"Asking price due to interval change: \", interval);\n        setIntervalUnit(interval);\n        setIntervalStep(getIntervalStep());\n\n        getTokenPriceHistoryDB(address, interval, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n    }\n\n    const fetchChartData = (date: any) => {\n        getTokenPriceHistoryDB(address, intervalUnit, Math.round(date[0]),Math.round(date[1]), chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n    }\n\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date:any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n\n        fetchChartData(date);\n    }\n\n\n    const chartSelectionHandler = (e: any) => {\n        console.log(\"Triggered with vale: \", e);\n        if(chartType === CHART_TYPES_ENUM.CANDLESTICK) {\n            setRadioOptions(INTERVALS);\n        } else {\n            setRadioOptions(radioOptions.filter((ro)=>ro.value!='Token15Min'))\n        }\n        setChartType(e);\n    }\n\n    const getPercentage = () => {\n\n        // Change this to be last 24 hour percentage\n        return parseFloat((pctChange * 100).toFixed(2));\n    }\n\n\n    return (\n        <div style={{justifyContent:'center'}}>\n            {tokenInfo && (<div style={{margin:20, fontSize:'1.3em', fontWeight:'bold' , alignItems:'center'}}>\n                <HStack>\n                    <img src={tokenInfo.logoUrl} style={{width:60, height:60, margin:10}}/>\n                    <h2>{tokenInfo.name} / {tokenInfo.symbol}</h2>\n                </HStack>\n            </div>)}\n\n\n\n            <div style={{margin:30, marginLeft:60, borderColor:'gray.200',top:100, borderRadius:50, borderWidth:2,paddingTop:40, width: 1400, height:550}}>\n                {isLoading && <div style={{alignItems:'center', justifyItems:\"center\"}}><AvadaSpinner style={{width:'100%', height: \"100%\", marginTop:100, marginLeft:500}} message={`Loading price history`}/></div>}\n\n                {(!isLoading && tokenPrices.length) && <div >\n                {chartType === CHART_TYPES_ENUM.LINE && <BasicChart data={tokenPrices.map(d=>d.price)} dates={dates} xDomain={dates}  width={1200} height={450} />}\n                {chartType !== CHART_TYPES_ENUM.LINE && <CandleStickTemplate data={tokenPrices} dates={dates} xDomain={dates}  width={1200} height={450}/>}\n\n\n            </div>}\n            </div>\n\n            {/* Bottom part */}\n\n\n            <div style={{width:'100%', marginLeft:70, marginTop:20}}>\n\n                <HStack  spacing={'100px'}>\n\n\n                    <div style={{borderWidth:1, borderStyle:'solid', borderRadius: 20, padding:20, width:'40%'}}>\n                        <HStack>\n\n\n                            <div>\n                                <span>Start date: </span>\n                                <span>{startDate}</span>\n                            </div>\n                            <div> / </div>\n                            <div>\n                                <span>End date: </span>\n                                <span>{endDate}</span>\n                            </div>\n\n                        </HStack>\n\n                        <RangeSlider onChange={(e)=> onDateDrag(e)}\n                                     onChangeEnd={(e)=>onChangeDate(e)}\n                                     defaultValue={[initialOffset, Math.round(Date.now() / 1000)]}\n                                     min={1629504000} max={Math.round(Date.now() / 1000)}\n                                     step={intervalStep} minStepsBetweenThumbs={10}\n\n                        >\n                            <RangeSliderTrack bg={ColorPalette.thirdColor}>\n                                <RangeSliderFilledTrack bg={ColorPalette.thirdColor} />\n                            </RangeSliderTrack>\n                            <RangeSliderThumb boxSize={6} index={0} />\n                            <RangeSliderThumb boxSize={6} index={1} />\n                        </RangeSlider>\n                    </div>\n\n\n\n                    <HStack>\n                    <RadioGroup onChange={(e)=>onChangeInterval(e)} value={intervalUnit}>\n                        <Stack direction='row'>\n                            {radioOptions.map(i=>{\n                                return (<Radio value={i.value}>{i.label}</Radio>)\n                            })}\n\n                        </Stack>\n                    </RadioGroup>\n                    <MultipleSelection title={\"Chart Type\"} selectionHandler={chartSelectionHandler} style={{buttonColor:ColorPalette.thirdColor}} buttons={[{value:CHART_TYPES_ENUM.LINE, label:'Line chart'},{value:CHART_TYPES_ENUM.CANDLESTICK, label:'Candle chart'}]}/>\n                    <ExportIcon/>\n                    </HStack>\n\n\n\n\n\n                </HStack>\n\n\n\n\n\n\n            </div>\n\n\n        </div>\n    );\n\n}\n\n\nexport default TokenView;","\n\nexport const dateFromTimeStamp = (timestamp : number) => {\n    const date = new Date(timestamp * 1000)\n    const month = parseInt(date.getMonth().toString()) + 1;\n    return date.getDate() + '-' + month + '-' + date.getFullYear()\n}","import {getTokenPrice} from \"./tokenService\";\nimport Moralis from \"moralis\";\n\n\nexport const getTopGainers = async () => {\n    const TokenPrice = Moralis.Object.extend(\"Token1Day\")\n    const query = new Moralis.Query(TokenPrice);\n    query.select(\"pctChange\", \"id\", \"timeStamp\",\"exchange\", \"symbol\");\n    const currentDate = new Date();\n    const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() -2, 22, 0,0,0).getTime() / 1000;\n    // console.log(\"Checking prices greater than \",date);\n    query.greaterThanOrEqualTo(\"timeStamp\", date);\n    query.descending(\"pctChange\");\n    const results = await query.find();\n    const gainers = results.map((r)=>{\n        return {pctChange: r.get(\"pctChange\"), symbol: r.get(\"symbol\")}\n    })\n\n    return gainers.slice(0,5);\n}\n\n\nexport const getTopLosers = async () => {\n    const TokenPrice = Moralis.Object.extend(\"Token1Day\")\n    const query = new Moralis.Query(TokenPrice);\n    query.select(\"pctChange\", \"id\", \"timeStamp\",\"exchange\", \"symbol\");\n    const currentDate = new Date();\n    const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() -2, 22, 0,0,0).getTime() / 1000;\n    // console.log(\"Checking prices greater than \",date);\n    query.greaterThanOrEqualTo(\"timeStamp\", date);\n    query.ascending(\"pctChange\");\n    const results = await query.find();\n    const gainers = results.map((r)=>{\n        return {pctChange: r.get(\"pctChange\"), symbol: r.get(\"symbol\")}\n    })\n\n    return gainers.slice(0,5);\n}\n\n\nexport const getTopMCap = async () => {\n    const TokenPrice = Moralis.Object.extend(\"Token1Hour\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"marketCap\", \"id\", \"timeStamp\",\"exchange\", \"symbol\");\n    const currentDate = new Date();\n    const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), currentDate.getHours() -4, 0,0,0).getTime() / 1000;\n    // console.log(\"Checking prices greater than \",date);\n    query.greaterThanOrEqualTo(\"timeStamp\", date);\n    query.descending(\"marketCap\");\n    const results = await query.find();\n    const gainers = results.map((r)=>{\n        return {marketCap: r.get(\"marketCap\"), symbol: r.get(\"symbol\")}\n    })\n    const top5 = gainers.slice(0,5);\n    return top5.map((t:any)=> {\n        return{'marketCap':(t.marketCap/(10**9)).toFixed(3), symbol: t.symbol\n    }\n    });\n}\n\n\nexport const get24HourPercentageChange =  async (address:string | undefined) => {\n\n    const TokenPrice = Moralis.Object.extend(\"Token1Day\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"createdAt\",\"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n\n    query.equalTo(\"address\", address);\n    query.descending(\"timeStamp\");\n    query.limit(5000);\n    const result = await query.find();\n    console.log(\"Result has timestamp: \", result[0]?.get(\"timeStamp\"));\n    return result[0]?.get(\"pctChange\").toFixed(2);\n\n}","import {VStack} from \"@chakra-ui/react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport React from \"react\";\n\n\nconst ExportIcon = (props: any) => {\n\n    return ( <VStack style={{justifyContent:'center'}}>\n        <FontAwesomeIcon icon={faFileDownload} size=\"lg\" style={{float:'right', color:ColorPalette.highlight}}/>\n        <span style={{fontSize:'0.6em'}}>Export data</span>\n    </VStack>)\n\n}\n\n\nexport default ExportIcon;","import React, {useEffect, useState} from 'react';\nimport {getTokenList, getTokenPrice} from \"../../services/tokenService\";\nimport {background, Table, Tbody, Td, Th, Thead, Tr} from \"@chakra-ui/react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Title from \"./Title\";\n\nfunction List(props: any)  {\n\n    const [entityList, setEntityList] = useState<any>(0)\n\n    useEffect (()=> {\n        props.getter()\n            .then((entities : any)=>{\n                console.log(\"Entities: \", entities);\n                setEntityList(entities)\n            });\n    },[])\n\n\n    return (\n        <div>\n            {props.title && (<Title title={props.title}/>)}\n            {entityList.length>0 &&\n            <EntityList tableStyle={props.tableStyle} entityList={entityList} entityProps={props.entityProps} noHead={props.noHead}/>\n            }\n        </div>\n    );\n}\n\n\nfunction EntityList(props: any) {\n\n\n    const navigate = useNavigate();\n\n    const [selected, setSelected] = useState<number | null>(null);\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n\n    return(<Table style={{...props.tableStyle}} variant='simple'>\n        {!props.noHead && (\n            <Thead>\n                <Tr>\n                    {props.entityProps.map((ep:any, idx:number)=> {\n                        return(<Th key={idx}>{ep.name}</Th>)\n                    })}\n                </Tr>\n            </Thead>\n        )}\n        <Tbody>\n            {props.entityList.map((entity: any, idx: number)=> {\n                return(<Tr key={idx} style={selected==idx?{backgroundColor:'#FFB6C1', borderRadius:\"10px\", cursor:'pointer'}:{}}\n                           onMouseEnter={(e)=> handleHover(e, idx)} onMouseLeave={()=> setSelected(null)} >\n                    {props.imageProp && <img src={entity[props.imageProp]}/>}\n\n                    {props.entityProps.map((ep:any,i:number)=> {\n                        return(<Th key={i}>{ep.postProcess?ep.postProcess(entity[ep.value]):entity[ep.value]}</Th>)\n                    })}\n                </Tr>)\n            })}\n        </Tbody>\n\n    </Table>)\n}\n\n\nexport default List;","import List from \"../genericComponents/List\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {getTopGainers} from \"../../services/dashboardService\";\n\n\nexport function Gainers(props:any) {\n// ,borderWidth:1, borderStyle:'solid',borderColor:'grey', borderRadius:20\n    return(<div style={{...props.style}}>\n        <div style={{width:'100%', backgroundColor:ColorPalette.secondaryColor}}>\n        {/*<h3 style={{margin:10}}>Gainers</h3>*/}\n        </div>\n            <List title=\"Gainers\" getter={getTopGainers} entityProps={[{name:\"Symbol\",value:\"symbol\"},{name:\"% Change\", value: \"pctChange\", postProcess:(a:any)=>(a*100).toFixed(2)+'%'}]}/>\n\n\n    </div>)\n\n}","import {ColorPalette} from \"../styles/color_palette\";\nimport List from \"../genericComponents/List\";\nimport {getTopGainers, getTopLosers} from \"../../services/dashboardService\";\n\nexport function Losers(props:any) {\n\n    return(<div style={{...props.style}}>\n\n    <List title=\"Losers\" getter={getTopLosers} entityProps={[{name:\"Symbol\",value:\"symbol\"},{name:\"% Change\", value: \"pctChange\", postProcess:(a:any)=>(a*100).toFixed(2)+'%'}]}/>\n\n\n    </div>)\n\n}","\nimport React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport './pieChartStyles.css';\n\n\n\nconst PieChart = ({data}:any)=> {\n\n\n    useEffect(()=>{\n        buildPieChart2();\n\n    },[data])\n\n    const buildPieChart2 = () => {\n        var width = 250,\n            height = 250,\n            radius = Math.min(width, height) / 2;\n        var divNode = d3.select(\"body\").node();\n        var outerRadius = radius - 10,\n            innerRadius = radius - 80;\n\n        var color : any = d3.scaleOrdinal().range([ColorPalette.mainColor, ColorPalette.red, ColorPalette.secondaryColor, ColorPalette.highlight, ColorPalette.green]);//Constructs a new ordinal scale with an empty domain and the specified range. If a range is not specified, it defaults to the empty array; an ordinal scale always returns undefined until a non-empty range is defined.\n\n\n        //add svg with margin !important\n        //this is svg is actually group\n        var svg = d3.select(\"#diagram\").append(\"svg\")\n            .attr(\"width\",width)\n            .attr(\"height\",height)\n            .append(\"g\")  //add group to leave margin for axis\n            .attr(\"transform\",\"translate(\"+width/2+\",\"+height/2+\")\");\n\n\n        //the code above should be same\n        if(data === undefined)\n            return;\n        var dataset : any = data;\n\n        // //arc to draw the chart. pie to generate the data for chart from the input\n        // var donutWidth = 40;\n        // var arc : any = d3.arc().outerRadius(radius).innerRadius(radius-donutWidth);//to generate the chart\n        // var pie = d3.pie()\n        //     .value(function(d:any){return d.percentage;});//sort the value to show from the 12 0'clcok\n        //\n\n        var arc:any = d3.arc()\n            .outerRadius(radius - 10)\n            .innerRadius(radius - 60);\n\n        console.log(\"Arc: \", arc);\n\n        var pie = d3.pie()\n            .sort(null)\n            .value(function(d:any) { return d.percentage; });\n\n        d3.select(\"#chart\").append(\"div\")\n            .attr(\"id\",\"mainPie\")\n            .attr(\"class\",\"pieBox\");\n\n        var svg = d3.select(\"#mainPie\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\n\n        var defs = svg.append(\"defs\");\n        var filter = defs.append(\"filter\")\n            .attr(\"id\", \"drop-shadow\")\n            .attr(\"height\",\"130%\");\n\n        filter.append(\"feGaussianBlur\")\n            .attr(\"in\",\"SourceAlpha\")\n            .attr(\"stdDeviation\", 3)\n            .attr(\"result\", \"blur\");\n\n        filter.append(\"feOffset\")\n            .attr(\"in\", \"blur\")\n            .attr(\"dx\", 3)\n            .attr(\"dy\", 3)\n            .attr(\"result\", \"offsetBlur\");\n        var feMerge = filter.append(\"feMerge\");\n\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"offsetBlur\")\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"SourceGraphic\");\n\n        var g = svg.selectAll(\".arc\")\n            .data(pie(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"arc\");\n\n\n        // Handling hovers\n        var paths = g.append(\"path\")\n            .attr(\"d\",arc)\n            // @ts-ignore\n            .style(\"fill\",function(d:any){return color(d.data);})\n            .on(\"mouseover\", function(d:any, i:any) {\n                console.log(\"Data is: \", d);\n                console.log(\"Index is: \", i);\n                d3.select(this)\n                    .attr(\"stroke\",\"#fff\")\n                    .attr(\"stroke-width\",\"2px\")\n                    .style(\"filter\", \"url(#drop-shadow)\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('elastic')\n                    .attr('transform',function(d:any){\n                        var dist = 1;\n                        d.midAngle = ((d.endAngle - d.startAngle)/2) + d.startAngle;\n                        var x = Math.sin(d.midAngle) * dist;\n                        var y = Math.cos(d.midAngle) * dist;\n                        return 'translate(' + x + ',' + y + ')';\n                    });\n\n\n                svg.append('circle')\n                    .attr('id','circle')\n                    .attr('fill','#42A5F5')\n                    .attr('r','62')\n\n                svg.append('text')\n                    .attr('id', 'circle-text')\n                    .style('fill', '#F2F2F2')\n                    .style(\"font-size\", \"20px\")\n                    .style(\"font-weight\", \"bold\")\n                    .attr(\"transform\", \"translate(0,\" + 20 + \")\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .html(`${i.data.symbol} <br/> ${i.data.percentage}%`);\n\n\n            })\n            .on(\"mouseout\", function(d){\n                d3.select(this)\n                    .attr(\"stroke\",\"none\")\n                    .style(\"filter\",\"none\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('bounce')\n                    .attr('transform','translate(0,0)');\n\n                // d3.select(\"#mainTooltip\").style(\"display\", 'none');\n                d3.select('circle').remove();\n                d3.select('#circle-text').remove();\n                // d3.select('#circle').style(\"display\",\"hidden\");\n\n            });\n\n\n        //add legend to the donut chart\n\n        // var legendSize = 15;\n        // var legendSpacing = 2;\n        // var legend = svg.selectAll(\".legend\")\n        //     .data(color.domain())\n        //     .enter()\n        //     .append(\"g\")\n        //     .attr(\"transform\",function(d,i){\n        //         var legendH = color.domain().length*(legendSize+legendSpacing);//total height of legends\n        //         var legendY = i*(legendSize+legendSpacing) - legendH/2;//\n        //         var legendX = -legendSize;\n        //         return \"translate(\"+legendX+\",\"+legendY+\")\";\n        //     });\n        // legend.append(\"rect\")\n        //     .attr(\"width\",legendSize)\n        //     .attr(\"height\",legendSize)\n        //     .attr(\"fill\",color)\n        //     .attr(\"stroke\",color);\n        // legend.append(\"text\")\n        //     .text(function(d:any){return d[0];})\n        //     .attr('x', legendSize + legendSpacing)\n        //     .attr('y', legendSize - legendSpacing);\n\n        //add  tooltip to paths\n        var tooltip = d3.select(\"#diagram\").append(\"div\").attr(\"class\",\"tooltip\");\n        tooltip.append(\"div\").attr(\"class\",\"name\");\n        tooltip.append(\"div\").attr(\"class\",\"count\");\n        tooltip.append(\"div\").attr(\"class\",\"percentage\");\n\n\n        // svg.on(\"mouseover\",function(d:any){\n        //     var total = d3.sum(dataset,function(dd:any){return dd[1];});\n        //     console.log(\"d is: \", d);\n        //     var percent = Math.round(1000 * d.data[1] / total) / 10;\n        //     tooltip.select(\".name\").html(d.data[0]);\n        //     tooltip.select(\".count\").html(d.data[1]);\n        //     tooltip.select(\".percentage\").html(percent + '%');\n        //     tooltip.style(\"display\", \"block\");\n        // });\n        // paths.on(\"mouseout\",function(d){\n        //     tooltip.style(\"display\", \"none\");\n        // });\n\n\n    }\n\n\n    const buildPieChart = () => {\n        var data :any = [\n            {\n                \"str_lab\": \"Jon\",\n                \"num\": 100\n            },\n            {\n                \"str_lab\": \"Shaggydog\",\n                \"num\": 44\n            },\n            {\n                \"str_lab\": \"Ghost\",\n                \"num\": 215\n            },\n            {\n                \"str_lab\": \"Nymeria\",\n                \"num\": 385\n            },\n            {\n                \"str_lab\": \"Summer\",\n                \"num\": 141\n            },\n            {\n                \"str_lab\": \"Grey wind\",\n                \"num\": 340\n            }\n        ];\n\n        var width = 300,\n            height = 300,\n            radius = Math.min(width, height) / 2;\n        var divNode = d3.select(\"body\").node();\n        var outerRadius = radius - 10,\n            innerRadius = radius - 80;\n        var color = d3.scaleOrdinal()\n            .range([\"#2E7D32\",\"#53856D\",\"#FF7043\", \"#1FDA9A\", \"#28ABE3\", \"#DF514C\", \"#DAE9F7\"]);\n\n        var arc:any = d3.arc()\n            .outerRadius(radius - 10)\n            .innerRadius(radius - 80);\n\n        console.log(\"Arc: \", arc);\n\n        var pie = d3.pie()\n            .sort(null)\n            .value(function(d:any) { return d.num; });\n\n        d3.select(\"#chart\").append(\"div\")\n            .attr(\"id\",\"mainPie\")\n            .attr(\"class\",\"pieBox\");\n\n        var svg = d3.select(\"#mainPie\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        var defs = svg.append(\"defs\");\n        var filter = defs.append(\"filter\")\n            .attr(\"id\", \"drop-shadow\")\n            .attr(\"height\",\"130%\");\n\n        filter.append(\"feGaussianBlur\")\n            .attr(\"in\",\"SourceAlpha\")\n            .attr(\"stdDeviation\", 3)\n            .attr(\"result\", \"blur\");\n\n        filter.append(\"feOffset\")\n            .attr(\"in\", \"blur\")\n            .attr(\"dx\", 3)\n            .attr(\"dy\", 3)\n            .attr(\"result\", \"offsetBlur\");\n        var feMerge = filter.append(\"feMerge\");\n\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"offsetBlur\")\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"SourceGraphic\");\n\n        var g = svg.selectAll(\".arc\")\n            .data(pie(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"arc\");\n\n        g.append(\"path\")\n            .attr(\"d\", arc)\n            .style(\"fill\", \"blue\")\n            .on(\"mousemove\", function(d) {\n                d3.select(this)\n                    .attr(\"stroke\",\"#fff\")\n                    .attr(\"stroke-width\",\"2px\")\n                    .style(\"filter\", \"url(#drop-shadow)\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('elastic')\n                    .attr('transform',function(d:any){\n                        var dist = 1;\n                        d.midAngle = ((d.endAngle - d.startAngle)/2) + d.startAngle;\n                        var x = Math.sin(d.midAngle) * dist;\n                        var y = Math.cos(d.midAngle) * dist;\n                        return 'translate(' + x + ',' + y + ')';\n                    });\n                var mousePos = d3.pointer(divNode);\n                d3.select(\"#mainTooltip\")\n                    .style(\"left\", mousePos[0] - 40 + \"px\")\n                    .style(\"top\", mousePos[1] - 70 + \"px\")\n                    .select(\"#value\")\n                    .attr(\"text-anchor\", \"middle\")\n                    // .html(d.data.str_lab + \"<br />\" + d.data.num);\n                console.log(\"d is: \", d);\n                d3.select(\"#mainTooltip\").classed(\"hidden\", false);\n            })\n            .on(\"mouseout\", function(d){\n                d3.select(this)\n                    .attr(\"stroke\",\"none\")\n                    .style(\"filter\",\"none\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('bounce')\n                    .attr('transform','translate(0,0)');\n\n                d3.select(\"#mainTooltip\").classed(\"hidden\", true);\n            });\n        var centerSvg = svg.append('circle')\n            .attr('fill','#42A5F5')\n            .attr('r','62');\n\n        svg.append('text')\n            .style('fill', '#F2F2F2')\n            .style(\"font-size\", \"64px\")\n            .style(\"font-weight\", \"bold\")\n            .attr(\"transform\", \"translate(0,\" + 20 + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .html(data.length.toString());\n\n\n    }\n\n    return(<>\n        <div id=\"chart\"></div>\n        <div id=\"mainTooltip\" className=\"hidden\">\n            <p><span id=\"value\"></span></p>\n        </div>\n\n\n    </>)\n\n}\n\nexport default PieChart;","import List from \"../genericComponents/List\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {getTopMCap} from \"../../services/dashboardService\";\nimport {SetStateAction, useEffect, useState} from \"react\";\nimport PieChart from \"../charts/pieChart/PieChart\";\nimport {Grid, GridItem, HStack} from \"@chakra-ui/react\";\nimport Title from \"../genericComponents/Title\";\nimport BarRaceChart from \"../charts/barRaceChart/BarRaceChart\";\n\n\nexport function MarketCap(props: any) {\n\n    const [pieChartData, setPieChartData] = useState<any[]>([]);\n\n    useEffect(() => {\n\n        getTopMCap()\n            .then((allTokens) => {\n                const percentages: any = [];\n                console.log(\"All tokens: \", allTokens);\n                const totalMCap = allTokens.map(i=>parseFloat(i.marketCap)).reduce((a,b : any) => a + b,0)\n                console.log(\"Total marketcap = \", totalMCap);\n                allTokens.map((token)=>{\n                    percentages.push({\"symbol\": token.symbol, \"percentage\":(parseFloat(token.marketCap)/totalMCap*100).toFixed(0)})\n                })\n                setPieChartData(percentages);\n            })\n    },[])\n\n\n    return(<div style={{...props.style}}>\n        <Title title=\"Market Cap (Top 5)\"/>\n\n            <HStack spacing={\"5%\"}>\n                {pieChartData.length > 0 && (<PieChart data={pieChartData}/>)}\n                <List getter={getTopMCap} tableStyle={{width:300}}  entityProps={[{name:\"Symbol\",value:\"symbol\"},{name:\"M Cap (B$)\", value: \"marketCap\"}]}/>\n            </HStack>\n    </div>)\n\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {transition} from \"d3-transition\";\nimport {select, selectAll} from \"d3-selection\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport {getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport {ColorPalette} from \"../../styles/color_palette\";\n\n\nconst MiniChart = ({data, width, height,color}:any) => {\n\n    const svgRef = useRef<any>();\n\n    const setupData = (svg:any, line:any, options: any) => {\n        // Setup data\n        svg\n            .append('path')\n            .datum(data.map((r:any)=>r.price))\n            .attr('id', 'line')\n            .attr('stroke', options.strokeColor?options.strokeColor:'black')\n            .attr('stroke-width', 2)\n            .attr('fill', 'none')\n            .attr('d', line);\n    }\n\n    const setupLinearGraph = () => {\n\n        // Setup svg\n        if(data == undefined) {\n            return;\n        }\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', 'white')\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        // Setup scaling\n        const xScale: any = d3.scaleLinear()\n            .domain([0, data.length]) // x ticks\n            .range([0, width]) // x width\n\n\n\n        const yMin = Math.round(data.map((r:any)=>r.price).reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.map((r:any)=>r.price).reduce((a:number,b: number)=> Math.max(a,b)));\n        console.log(\"Y max is: \", yMax);\n        console.log(\"Y min is: \", yMin);\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n        // Setting up line\n        const line = d3.line()\n            .x((d, i)=> xScale(i))\n            .y(yScale)\n            .curve(d3.curveLinear)\n\n\n        const dataOptions = {strokeColor: color}\n        setupData(svg,line, dataOptions);\n        return line;\n    }\n\n\n    useEffect(()=>{\n        console.log(\"COLOR is: \", color);\n\n                setupLinearGraph();\n    },[])\n\n\n    return (\n            <svg style={{zIndex:-1}} ref={svgRef}>\n            </svg>\n\n    )\n\n};\n\nexport default MiniChart;","import MiniChart from \"./MiniChart\";\nimport {useEffect, useState} from \"react\";\nimport {getTokenByAddress, getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport {Box, HStack} from \"@chakra-ui/react\";\nimport AvadaSpinner from \"../../genericComponents/AvadaSpinner\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {useNavigate} from \"react-router-dom\";\nimport {get24HourPercentageChange} from \"../../../services/dashboardService\";\n\n\nexport default function     MiniChartContainer ({address, width, height}:any) {\n\n    const navigate = useNavigate();\n\n\n    const [data, setData] = useState<any>(null);\n\n    const [tokenInfo, setTokenInfo] = useState<any>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const [borderColor, setBorderColor] = useState('gray.200')\n\n    const [pctChange, setPctChange] = useState(0);\n\n    const [plotColor, setPlotColor] = useState(\"\");\n\n    useEffect(()=>{\n        setIsLoading(true);\n        // get24HourPercentageChange(address)\n        //     .then((pct)=> {\n        //         setPctChange(pct)\n        //         setPlotColor(pct>0?ColorPalette.green:ColorPalette.red)\n        //     });\n\n\n        getTokenByAddress(address)\n            .then((t:any)=>setTokenInfo(t));\n\n        getTokenPriceHistoryDB(address, \"Token1Hour\", 1)\n            .then((d)=> {\n                setData(d.slice(d.length -24, d.length -1));\n                setIsLoading(false);\n            })\n\n    },[])\n\n\n    useEffect(()=>{\n        if(data) {\n\n            setPctChange((( data[data.length -1].price - data[0].price) / data[0].price))\n        }\n    },[data])\n\n    useEffect(()=>{\n        console.log(\"Pctgchange is: \", pctChange);\n        console.log(\"Setting color: \", pctChange>0?ColorPalette.green:ColorPalette.red);\n        setPlotColor(pctChange>0?ColorPalette.green:ColorPalette.red)\n\n\n    },[pctChange])\n\n\n    const getPercentage = () => {\n\n        // Change this to be last 24 hour percentage\n        return parseFloat((pctChange * 100).toFixed(2));\n    }\n\n    return (<div onMouseEnter={()=>setBorderColor(pctChange > 0 ? ColorPalette.green : ColorPalette.red)} onMouseLeave={()=>setBorderColor('gray.200')}>\n\n            {isLoading && (<Box border=\"1px\" borderColor={borderColor}  borderRadius={30} padding={5} >\n                <AvadaSpinner/>\n            </Box>)}\n\n        {(data && plotColor) && (\n            <Box border=\"2px\" borderColor={borderColor} borderRadius={30} padding={5} onClick={()=>navigate(`/token/${address}`)}>\n                {tokenInfo && (<><HStack>\n                        <img style={{width:30, height:30}} src={tokenInfo.logoUrl}/>\n                        <span>{tokenInfo.symbol}</span>\n                        {pctChange!==0 && (<span style={{marginRight: 30, color: (getPercentage() < 0)? ColorPalette.red: ColorPalette.green}}>{getPercentage() + '% (24h)'}</span>)}\n                    </HStack>\n                        {data[data.length-1] && <span style={{margin:40}}>{'$ ' + data[data.length-1].price.toFixed(2)}</span>}\n\n                    </>\n                )}\n                {(data.length >0 && pctChange) && <div style={{width:width, height:height}}><MiniChart data={data}  width={width} height={height} color={pctChange > 0 ? ColorPalette.green : ColorPalette.red}/></div>}\n\n\n            </Box>\n        )}\n        </div>\n    )\n\n}","import {Gainers} from \"./Gainers\";\nimport Title from \"../genericComponents/Title\";\nimport {Losers} from \"./Losers\";\nimport {useEffect, useState} from \"react\";\nimport {MarketCap} from \"./MarketCap\";\nimport {Box, Grid, HStack, VStack} from \"@chakra-ui/react\";\nimport MiniChart from \"../charts/miniChart/MiniChart\";\nimport MiniChartContainer from \"../charts/miniChart/MiniChartContainer\";\nimport PieChart from \"../charts/pieChart/PieChart\";\nimport {getTopMCap} from \"../../services/dashboardService\";\nimport BarRaceChart from \"../charts/barRaceChart/BarRaceChart\"\n\n\nexport function Dashboard(props:any) {\n\n\n    return(<div style={{...props.style}}>\n        <Title title=\"Dashboard\" hasInfo/>\n\n        <HStack style={{marginTop:40}}  spacing={10}>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0x50b7545627a5162f82a992c33b87adc75187b218\"   width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab\"   width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7\"  width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0xb54f16fb19478766a268f172c9480f8da1a7c9c3\"  width={300} height={150}/>\n            </div>\n        </HStack>\n\n        <HStack style={{marginTop:50}}>\n            <MarketCap style={{alignItems:'center', marginRight:50}}/>\n            <Gainers style={{width:400,  alignItems:'center', marginLeft:50}}/>\n            <Losers style={{width:400,  alignItems:'center', margin:20}}/>\n        </HStack>\n    </div>)\n}","import {Flex, Icon, Link, Menu, MenuButton, MenuList, Text} from \"@chakra-ui/react\";\nimport {Link as ReactLink} from 'react-router-dom';\nimport dashboard from \"../../images/dashboard.png\";\nimport {NavHoverBox} from \"./NavHoverBox\";\nimport React, {useState} from \"react\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {deletePopupMessage, renderPopupMessage} from \"./PopupMessage\";\nimport  { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport function NavItem({navSize, icon, title, route, active, style,setActiveMenu, idx, status}:any) {\n\n    const [hoverOject, setHoverObject] = useState<any>(null);\n    const [popupTimerOn, setPopupTimerOn] = useState<boolean>(true);\n    const [popupActivated, setPopupActivated] = useState(false);\n    const [showInfo, setShowInfo] = useState<boolean>(false);\n\n\n\n    // @ts-ignore\n    // @ts-ignore\n    return(\n        <Flex\n            mt={30}\n            flexDir=\"column\"\n            w=\"100%\"\n            alignItems={navSize==\"small\"? \"center\" : \"flex-start\"}\n            backgroundColor={style.backgroundColor}\n            borderColor={style.borderColor}\n            borderWidth={style.borderColor?1:0}\n            borderRadius={8}\n            opacity={status =='active'? 1: 0.6}\n        >\n            <Menu placement =\"right\">\n                <Link\n                    as={ReactLink}\n                    to={route}\n                    p={3}\n                    borderRadius={8}\n                    _hover={status == 'active' ? {backgroundColor:ColorPalette.highlight}:{backgroundColor:ColorPalette.mainColor}}\n                    w={navSize == 'large'?'100%':''}\n                    onClick={()=>{setActiveMenu(idx)}}\n\n                >\n\n                    <MenuButton w=\"100%\" ml={3}>\n                        <Flex style={{alignItems:'center'}}>\n                            {/*<Icon as={icon} fontSize=\"xl\" color={active ? '#FFB6C1' : \"gray.500\"}/>*/}\n                            <img style={{width:40, height:40}} src={icon}/>\n                            <Text color={ColorPalette.navFontColor} fontWeight={style.fontWeight} fontSize='xl' ml={5} display={navSize=='small'?'none':'flex'}>{title}</Text>\n                        </Flex>\n                    </MenuButton>\n\n\n                </Link>\n\n            </Menu>\n\n\n\n        </Flex>\n    )\n\n\n}","export default __webpack_public_path__ + \"static/media/tokens.01297ec6.png\";","export default __webpack_public_path__ + \"static/media/coins.985572b0.png\";","export default __webpack_public_path__ + \"static/media/pools.ebbbad37.png\";","export default __webpack_public_path__ + \"static/media/charts.4404929f.png\";","export default __webpack_public_path__ + \"static/media/whales.26c92c8d.png\";","export default __webpack_public_path__ + \"static/media/mempools.6a0f1fd6.png\";","export default __webpack_public_path__ + \"static/media/bridges.58d7d2cb.png\";","export default __webpack_public_path__ + \"static/media/logo_2.fe60bd52.png\";","import {Avatar, Divider, Flex, Grid, GridItem, Heading, HStack, IconButton, Text} from \"@chakra-ui/react\";\nimport {FiMenu} from \"react-icons/all\";\nimport React, {useEffect, useState} from \"react\";\nimport {NavItem} from \"./NavItem\";\nimport dashboard from '../../images/dashboard.png';\nimport tokens from '../../images/tokens.png';\nimport coins from '../../images/coins.png';\nimport pools from '../../images/pools.png';\nimport charts from '../../images/charts.png';\nimport whales from '../../images/whales.png';\nimport mempools from '../../images/mempools.png';\nimport bridges from '../../images/bridges.png';\nimport logo_1 from '../../images/logo_1.png';\nimport logo_2 from '../../images/logo_2.png';\n\nimport {ColorPalette} from \"../styles/color_palette\";\n\n\nconst Menus = [\n    {title:\"Dashboard\" ,route:\"/\", icon:charts, status: 'active'},\n    {title:\"Tokens\" ,route:\"/tokens\", icon:tokens, status: 'active'},\n    {title:\"Multiple Tokens\" ,route:\"/multiTokens\", icon:coins, status: 'active'},\n    {title:\"Pools\" ,route:\"/pools\", icon:pools, status: 'active'},\n    {title:\"Whales\", route:\"/whales\", icon:whales, status: 'inactive'},\n    {title:\"MemPools\", route:\"/mempools\", icon:mempools, status: 'inactive'},\n    {title:\"Bridges\", route:\"/bridges\", icon:bridges, status: 'inactive'},\n]\n\n\nexport function Sidebar({navSize, setNavSize}:any) {\n\n    const [activeMenu, setActiveMenu] = useState(0);\n\n\n    useEffect(()=>{\n        console.log(\"Active menu is: \", activeMenu);\n    }, [activeMenu])\n\n\n    return(\n        <Flex\n            // pos=\"absolute\"\n            display=\"flex\"\n            h=\"100%\"\n            marginTop=\"0\"\n            // boxShadow=\"0 4px 12px 0 rgba(0,0,0,0.05)\"\n            borderRadius={navSize=='small'?\"0px 5px 5px 0px\":\"0px 5px 5px 0px\"}\n            backgroundColor={ColorPalette.mainColor}\n\n            w={navSize=='small'?\"100px\":\"250px\"}\n            flexDir=\"column\"\n            justifyContent=\"space-between\"\n            zIndex={999}\n        >\n\n            <Flex\n                // p=\"5%\"\n                flexDir=\"column\"\n                alignItems=\"flex-start\"\n                as=\"nav\"\n            >\n              <HStack spacing='8px' margin={5}>\n                  {/*<Text display={ navSize=='large'?'flex':'none'} fontWeight={'bold'} fontSize='2xl' color={ColorPalette.navFontColor} ml={10} mt={5}>AVALYTICS</Text>*/}\n                  <div style={{width:220, height:60, paddingTop:20, paddingRight:20}} >\n                    <img src={logo_2}/>\n                  </div>\n              </HStack>\n\n                {Menus.map((m:any, idx: number) => {\n                    return(<NavItem idx={idx} style={activeMenu==idx?{fontWeight:'900', backgroundColor:ColorPalette.secondaryColor}:{}}\n                                    setActiveMenu={setActiveMenu}\n                                    navSize={navSize}\n                                    title={m.title}\n                                    route={m.route}\n                                    icon={m.icon}\n\n                                    status = {m.status}/>)\n                })}\n            </Flex>\n\n            <Flex\n                p=\"5%\"\n                flexDir=\"column\"\n                w=\"100%\"\n                alignItems=\"flex-start\"\n                mb={4}\n            >\n                {/*<Divider display={navSize=='small'? \"none\":\"flex\"}/>*/}\n                {/*<Flex mt={4} align=\"center\">*/}\n                {/*    <Avatar size=\"sm\"/>*/}\n                {/*    <Flex flexDir=\"column\" ml={4} display={navSize=='small'? \"none\":\"flex\"}>*/}\n                {/*        <Heading as=\"h3\" size=\"sm\">Renato</Heading>*/}\n                {/*        <Text color=\"gray\">Admin</Text>*/}\n                {/*    </Flex>*/}\n                {/*</Flex>*/}\n\n            </Flex>\n\n        </Flex>\n    )\n\n}","import * as d3 from \"d3\";\nimport {useEffect, useState} from \"react\";\nimport {Checkbox, HStack, Stack} from \"@chakra-ui/react\";\nimport {dateFromTimeStamp} from \"../../../utils/dateUtils\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {transition} from \"d3-transition\";\nimport {select} from \"d3-selection\";\n\n\nexport function HeatMap(props) {\n\n    const {data, tokensList} = props;\n\n\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const [svg, setSvg] = useState();\n\n    // useEffect(()=>{\n    //     buildHeatMap();\n    // },[])\n\n\n    useEffect(()=>{\n        console.log(\"Updating with data points: \", data.length);\n\n        if(d3.selectAll(\"svg\")) {\n            d3.selectAll(\"svg\").remove();\n            d3.selectAll(\".tooltip\").remove();\n        }\n\n        const s = buildHeatMap();\n        setSvg(s);\n\n    },[data])\n\n\n    const buildHeatMap = () => {\n        const margin = {top: 20, right: 25, bottom: 20, left: 40},\n            width = 1200 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n        const svg = d3.select(\"#my_dataviz\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n//Read the data\n\n\n        // Labels of row and columns -> unique identifier of the column called 'group' and 'variable'\n        const myGroups = Array.from(new Set(data.map(d => d.timestamp)))\n        const myVars = Array.from(new Set(data.map(d => d.symbol)))\n\n        // Build X scales and axis:\n        const x = d3.scaleBand()\n            .range([ 0, width ])\n            .domain(myGroups)\n            .padding(0.05);\n\n        // Build Y scales and axis:\n        const y = d3.scaleBand()\n            .range([ height, 0 ])\n            .domain(myVars)\n            .padding(0.05);\n\n        svg.append(\"g\")\n            .style(\"font-size\", 15)\n            .call(d3.axisLeft(y).tickSize(0))\n            .select(\".domain\").remove()\n\n        // Build color scale\n        const pctgColor = d3.scaleSequential()\n            .interpolator(d3.interpolate(ColorPalette.red,ColorPalette.green))\n            .domain([-0.1,0.1])\n\n        // create a tooltip\n        const tooltip = d3.select(\"#my_dataviz\")\n            .append(\"div\")\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            .style(\"background-color\", \"white\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"2px\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"5px\")\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        const mouseover = function(event,d) {\n            tooltip\n                .style(\"opacity\", 1)\n            d3.select(this)\n                .style(\"stroke\", \"black\")\n                .style(\"opacity\", 1)\n        }\n        const mousemove = function(event,d) {\n            tooltip\n                .html(d.symbol + ' changed ' +(d.pctChange * 100).toFixed(2)  + '% @ ' + dateFromTimeStamp(d.timestamp))\n                .style(\"position\", \"absolute\")\n                .style(\"left\", (event.clientX + 10) + \"px\")\n                .style(\"top\", (event.clientY - 60) + \"px\")\n\n        }\n        const mouseleave = function(event,d) {\n\n            tooltip\n                .style(\"opacity\", 0)\n            d3.select(this)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8)\n        }\n\n        // add the squares\n        svg.selectAll()\n            .data(data, function(d) {return d.timestamp+':'+d.symbol;})\n            .join(\"rect\")\n            .attr(\"x\", function(d) { return x(d.timestamp) })\n            .attr(\"y\", function(d) { return y(d.symbol) })\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n            .attr(\"width\", x.bandwidth() )\n            .attr(\"height\", y.bandwidth() )\n            .style(\"fill\", function(d) {\n                return pctgColor(d.pctChange);\n            })\n\n            .style(\"stroke-width\", 4)\n            .style(\"stroke\", \"none\")\n            .style(\"opacity\", 0.8)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n\n        return svg;\n\n    }\n\n\n\n\n\n    return (<>\n\n        <div id=\"my_dataviz\" style={{width: 1000, height: 800}}/>\n\n    </>)\n\n\n}","import React from 'react';\nimport './BarRaceChart.css';\n\nfunction BarRaceChart() {\n\n\treturn (\n\t\t<div className='barRaceChart'>\n\t\t<iframe id='iframeId' src='https://flo.uri.sh/visualisation/8380876/embed' title='Interactive or visual content' className='flourish-embed-iframe' frameBorder='0' scrolling='no' sandbox='allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation'></iframe>\n\t\t<div id='divId'>\n\t\t\t{/*<a id='aId' className='flourish-credit' href='https://public.flourish.studio/visualisation/8380876/?utm_source=embed&utm_campaign=visualisation/8380876' target='_top'>*/}\n\t\t\t{/*\t<img alt='Made with Flourish' src='https://public.flourish.studio/resources/made_with_flourish.svg' /> */}\n\t\t\t{/*</a>*/}\n\t\t</div>\n\t\t</div>\n\n\t)\n}\n\nexport default BarRaceChart;\n","import {HeatMap} from \"./charts/heatmap/HeatMap\";\nimport React, {useEffect, useState} from \"react\";\nimport {fetchTokensForHeatMap, getTokenList, getTokenPriceHistoryDB} from \"../services/tokenService\";\nimport {\n    Avatar,\n    Flex,\n    HStack,\n    RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack,\n    Select,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    VStack\n} from \"@chakra-ui/react\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport Title from \"./genericComponents/Title\";\nimport {Checkbox, CheckboxGroup} from '@chakra-ui/react'\nimport BarRaceChart from \"./charts/barRaceChart/BarRaceChart\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\n\nexport function MultipleTokens(props: any) {\n\n    const [tokenList, setTokenList] = useState<any[]>([]);\n    const [sliderStep, setSliderStep] = useState<number>(24 * 60 * 60);\n\n    const [tokenPrices, setTokenPrices] = useState<any[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 30 * 24 * 60 * 60 * 1000) / 1000); // 30 days in the past in seconds\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState<any>(dateFromTimeStamp(Date.now() / 1000));\n    const [endOffset, setEndOffset] = useState(Math.round(Date.now() / 1000));\n\n    const [activeTokens, setActiveTokens] = useState<any>([\"WBTC.e\", \"WETH.e\", \"WAVAX.e\", \"LINK.e\", \"TIME\", \"JOE\", \"AAVE.e\"]);\n\n\n    const fetchPctChanges = () => {\n        setIsLoading(true);\n        fetchTokensForHeatMap(\"Token1Day\", initialOffset, endOffset, activeTokens)\n            .then((tp) => {\n                setTokenPrices(tp.filter((t) => t.symbol != \"SUSHI.e\").sort((a, b) => {\n                    return (a.symbol > b.symbol ? -1 : 1)\n                }))\n                setIsLoading(false);\n                console.log(\"Token prices: \", tokenPrices);\n            });\n    }\n\n\n    useEffect(() => {\n        getTokenList()\n            .then(tl => setTokenList(tl))\n        setIsLoading(true);\n        fetchPctChanges();\n    }, [])\n\n\n    const handleCheckBoxChange = (e: any, idx: number) => {\n        const toAdd = e.target.checked;\n        if (toAdd) {\n            activeTokens.push(tokenList[idx].symbol);\n            setIsLoading(true);\n            fetchPctChanges();\n        } else {\n            const idxToRemove = activeTokens.indexOf(tokenList[idx].symbol);\n            activeTokens.splice(idxToRemove, 1);\n            const currentPrices = tokenPrices;\n            setTokenPrices(currentPrices.filter((tp) => tp.symbol != tokenList[idx].symbol));\n            // tokenPrices;\n        }\n    }\n\n    const handleSelectAll = (e: any) => {\n        console.log(\"After handleSelect: \", e.target.checked);\n        if (e.target.checked) {\n            setActiveTokens(tokenList.map((t) => t.symbol));\n            fetchPctChanges();\n        } else {\n            setActiveTokens([\"WBTC.e\", \"WETH.e\", \"WAVAX.e\", \"LINK.e\", \"TIME\", \"JOE\", \"AAVE.e\"])\n            fetchPctChanges();\n        }\n    }\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date: any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n        console.log(\"Fetch data again\");\n\n    }\n\n    useEffect(() => {\n        fetchPctChanges();\n    }, [initialOffset, endOffset])\n\n\n    const checkActiveTokens = (t: any) => {\n        return activeTokens.includes(t.symbol)\n    }\n\n\n    return (\n        <div>\n\n            <div style={{...props.style}}>\n                <Title title=\"Multiple Tokens\" hasInfo></Title>\n\n                <Tabs variant='enclosed'>\n                    <TabList>\n                        <Tab>Percentage Change</Tab>\n                        <Tab>Correlation</Tab>\n                        <Tab>Market Cap</Tab>\n                    </TabList>\n                    <TabPanels>\n                        <TabPanel style={{height: '100%'}}>\n\n                            {tokenPrices.length && (<div><HStack style={{height: '100%'}}>\n\n                                {tokenList && <div style={{\n                                    marginTop: -200,\n                                }}>\n                                    <div style={{fontSize: '1.4em'}}>Tokens</div>\n                                    <div style={{\n                                        height: 500,\n\n                                        overflowY: 'scroll',\n                                        width: 250,\n                                        borderColor: ColorPalette.thirdColor,\n                                        borderWidth: 1,\n                                        borderRadius: 20,\n                                        padding: 20\n                                    }}>\n\n                                        <ul style={{listStyleType: 'none'}}>\n                                            {tokenList.map((t: any, idx: number) => <li style={{marginBottom: 5}}>\n                                                <Checkbox size='lg' iconColor='red'\n                                                          style={{margin: 15}}\n                                                          colorScheme='red'\n                                                          defaultChecked={checkActiveTokens(t)}\n                                                          onChange={(e) => handleCheckBoxChange(e, idx)}>\n                                                    <HStack style={{marginLeft:20}}>\n                                                        <img width={30} src={t.logoUrl}/>\n                                                        <div>{t.symbol}</div>\n                                                    </HStack>\n                                                </Checkbox></li>)}\n                                        </ul>\n                                        {/*<Checkbox style={{margin: 5}} defaultChecked={false}*/}\n                                        {/*          onChange={(e) => handleSelectAll(e)}>Select All</Checkbox>*/}\n\n\n                                    </div>\n                                </div>}\n\n\n                                {tokenList.length > 0 && (<div style={{marginLeft: 60}}>\n                                    {isLoading && (<div style={{position: 'absolute', marginLeft: 550, marginTop: 300}}>\n                                        <AvadaSpinner/></div>)}\n                                    <HeatMap tokensList={tokenList} data={tokenPrices}/>\n                                </div>)}\n\n\n                            </HStack>\n                            <HStack>\n                                <div style={{\n                                    borderWidth: 1,\n                                    borderStyle: 'solid',\n                                    marginTop: -180,\n                                    borderRadius: 20,\n                                    padding: 20,\n                                    width: '80%'\n                                }}>\n                                    <HStack>\n                                        <div>\n                                            <span>Start date: </span>\n                                            <span>{startDate}</span>\n                                        </div>\n                                        <div> /</div>\n                                        <div>\n                                            <span>End date: </span>\n                                            <span>{endDate}</span>\n                                        </div>\n                                    </HStack>\n                                    <RangeSlider onChange={(e) => onDateDrag(e)}\n                                                 onChangeEnd={(e) => onChangeDate(e)}\n                                                 defaultValue={[initialOffset, endOffset]}\n                                                 min={1629504000} max={Math.round(Date.now() / 1000)}\n                                                 step={sliderStep} minStepsBetweenThumbs={10}\n                                    >\n                                        <RangeSliderTrack bg={ColorPalette.thirdColor}>\n                                            <RangeSliderFilledTrack bg={ColorPalette.thirdColor}/>\n                                        </RangeSliderTrack>\n                                        <RangeSliderThumb boxSize={6} index={0}/>\n                                        <RangeSliderThumb boxSize={6} index={1}/>\n                                    </RangeSlider>\n                                </div>\n                                <ExportIcon/>\n\n                            </HStack>\n\n                            </div>)}\n\n                            {isLoading &&\n                            <AvadaSpinner style={{width: '100%', height: \"100%\", marginTop: 100, marginLeft: 500}}\n                                          message={`Loading price history`}/>}\n\n                        </TabPanel>\n                        <TabPanel>\n                            <p>Correlation!</p>\n                        </TabPanel>\n                        <TabPanel>\n                            <BarRaceChart/>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n\n            </div>\n        </div>\n\n    )\n}","import * as d3 from \"d3\";\nimport {useEffect, useState} from \"react\";\nimport {ColorPalette} from \"../../styles/color_palette\";\n\n\nexport default function SteamGraph(props) {\n\n    const [data, setData] = useState([]);\n    const [maxKey, setMaxKey] = useState(null);\n\n\n    const getMax = (d, keys) => {\n        const maxArray = [];\n        const maxKey = []\n\n        keys.forEach((key, idx) => {\n            const arr = d.map((a) => a[key]);\n            console.log(\"MAximu array: \", arr);\n            maxArray.push(Math.max(...arr));\n            maxKey.push(key);\n        })\n        const absMax = Math.max(...maxArray);\n        const index = maxArray.indexOf(absMax);\n        setMaxKey(maxKey[index]);\n        console.log(\"Max array is: \", maxArray);\n        return absMax;\n    }\n\n\n    useEffect(() => {\n\n        if (d3.selectAll(\"svg\")) {\n            d3.selectAll(\"svg\").remove();\n            d3.selectAll(\".tooltip\").remove();\n        }\n        setData(props.data);\n        buildChart(props.data);\n\n    }, [props.data])\n\n\n    const buildChart = (chartData) => {\n        var margin = {top: 20, right: 30, bottom: 0, left: 100},\n            width = 1300 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\"#steam_graph\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        // List of groups = header of the csv files\n        var keys = props.keys;\n\n        // Add X axis\n        var xScale = d3.scaleTime()\n            .domain(d3.extent(chartData, function (d) {\n                return new Date(d.timestamp * 1000);\n            }))\n            .range([0, width]);\n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height * 0.95 + \")\")\n            .call(d3.axisBottom(xScale).tickSize(-height * 0.95).ticks(5))\n            .select(\".domain\").remove()\n        // Customization\n        svg.selectAll(\".tick line\").attr(\"stroke\", \"#b8b8b8\")\n\n\n        const max = getMax(props.data, props.keys);\n\n\n        // Add Y axis\n        var y = d3.scaleLinear()\n            .domain([-max, max])\n            .range([height, 0]);\n\n        svg.append(\"g\")\n            // .attr(\"transform\", \"translate(0,\" + width*0.1 + \")\")\n            .call(d3.axisLeft(y).tickSize(-width).ticks(5))\n            .select(\".domain\").remove()\n\n        // color palette\n        var color = d3.scaleOrdinal()\n            .domain(keys)\n            .range(d3.schemeDark2);\n\n        //stack the data?\n        var stackedData = d3.stack()\n            .offset(d3.stackOffsetSilhouette)\n            .keys(keys)\n            (chartData)\n\n        // create a tooltip\n        var Tooltip = svg\n            .append(\"text\")\n            .attr(\"x\", width - 300)\n            .attr(\"y\", 50)\n            .style(\"opacity\", 0)\n            .attr(\"margin\", 100)\n            .attr(\"font-size\", 26)\n\n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr('color', ColorPalette.mainColor)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"y\", -50 - 10)\n            .attr(\"x\", -height / 2 + 10)\n            .attr(\"dy\", \".75em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text('TVL (USD)');\n\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        var mouseover = function (d) {\n            Tooltip.style(\"opacity\", 1)\n            d3.selectAll(\".myArea\").style(\"opacity\", .2)\n            d3.select(this)\n                .style(\"stroke\", \"black\")\n                .style(\"opacity\", 1)\n        }\n\n        var mousemove = function (d, i) {\n            let grp = d.target.__data__.key\n            Tooltip.text(grp.split(\"-\").join(\" / \"))\n\n        }\n        var mouseleave = function (d) {\n            Tooltip.style(\"opacity\", 0)\n            d3.selectAll(\".myArea\").style(\"opacity\", 1).style(\"stroke\", \"none\")\n        }\n\n        // Area generator\n        var area = d3.area()\n            .x(function (d) {\n                return xScale(new Date(d.data.timestamp * 1000));\n            })\n            .y0(function (d) {\n                return y(d[0]);\n            })\n            .y1(function (d) {\n                return y(d[1]);\n            })\n\n        // Show the areas\n        svg\n            .selectAll(\"steam_graph\")\n            .data(stackedData)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"myArea\")\n            .style(\"fill\", function (d) {\n                return color(d.key);\n            })\n            .attr(\"d\", area)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n    }\n\n\n\n\n\n    return (<>\n        <div id=\"steam_graph\"/>\n    </>)\n\n}","import Moralis from \"moralis\";\n\n\nexport const getDexList = async () : Promise<any[]> => {\n\n        const DEX = Moralis.Object.extend(\"Dex\")\n        const query = new Moralis.Query(DEX);\n        query.select(\"name\", \"id\");\n        const results = await query.find();\n        const dexList = results.map((r)=>{\n            // const dex = r;\n            return {label:r.get(\"name\"),address: r.get(\"address\"),erc20: r.get(\"erc20address\")}\n        });\n        console.log(\"Got results: \", dexList);\n\n        // console.log(\"Name is: \", dexes[0].get(\"name\"))\n        return dexList;\n    }\n\n\nexport const getPoolList = async () : Promise<any[]> => {\n    const POOL = Moralis.Object.extend(\"DexTokenPairControl\")\n    const query = new Moralis.Query(POOL);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"pairAddress\");\n    const results = await query.find();\n    const poolList = results.map((r)=>{\n        // const dex = r;\n        return {name:r.get(\"dexName\"),token0: r.get(\"symbol0\"),token1: r.get(\"symbol1\"), pairAddress: r.get('pairAddress')}\n    });\n    console.log(\"Got results: \", poolList);\n\n    // console.log(\"Name is: \", dexes[0].get(\"name\"))\n    return poolList;\n\n}\n\n\nexport const getInfoForPools = async (date?: any) => {\n\n    const PoolInfo = Moralis.Object.extend(\"DexTokenPairLiquidity\");\n    const query = new Moralis.Query(PoolInfo);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"reserve0\",\"reserve1\",\"tvl0\",\"tvl1\",\"timeStamp\");\n    if(date) {\n        query.greaterThan(\"timeStamp\", date);\n    }\n    query.limit(5000);\n    query.ascending(\"timeStamp\");\n    const results = await query.find();\n    const processedData = [];\n    const poolInfo = results.map((r:any)=>{\n        return {dexName: r.get(\"dexName\"), symbol0: r.get(\"symbol0\"), symbol1: r.get(\"symbol1\"), reserve0: r.get(\"reserve0\"), reserve1: r.get(\"reserve1\"), tvl0: r.get(\"tvl0\"), tvl1: r.get(\"tvl1\")}\n    })\n\n    return poolInfo;\n}\n\n\nexport const getInfoForPoolsForPair = async (address?: any, date?: any) => {\n\n    const PoolInfo = Moralis.Object.extend(\"DexTokenPairLiquidity\");\n    const query = new Moralis.Query(PoolInfo);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"reserve0\",\"reserve1\",\"tvl0\",\"tvl1\",\"timeStamp\");\n    if(date) {\n        query.greaterThan(\"timeStamp\", date);\n    }\n    query.limit(5000);\n    query.equalTo(\"pairAddress\", address);\n    query.ascending(\"timeStamp\");\n    const results = await query.find();\n    const poolInfo = results.map((r:any)=>{\n        return {dexName: r.get(\"dexName\"), symbol0: r.get(\"symbol0\"), symbol1: r.get(\"symbol1\"),\n            reserve0: Math.round(r.get(\"reserve0\")), reserve1: Math.round(r.get(\"reserve1\")), tvl0: Math.round(r.get(\"tvl0\")), tvl1: Math.round(r.get(\"tvl1\")), timestamp: r.get(\"timeStamp\")}\n    })\n\n    return poolInfo;\n}\n\n","import {HStack, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack} from \"@chakra-ui/react\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport React from \"react\";\nimport {dateFromTimeStamp} from \"../../utils/dateUtils\";\n\n\nconst DateSlider = ({startDate, setStartDate,endDate, setEndDate, initialOffset, setInitialOffset, endOffset, setEndOffset, sliderStep, style} : any) => {\n\n\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date: any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n        console.log(\"Fetch data again\");\n    }\n\n\n    return ( <div style={{\n            borderWidth: 1,\n            borderStyle: 'solid',\n            marginTop: style.marginTop,\n            width:'90%',\n            borderRadius: 20,\n            padding: 20\n        }}>\n            <HStack>\n                <div>\n                    <span>Start date: </span>\n                    <span>{startDate}</span>\n                </div>\n                <div> /</div>\n                <div>\n                    <span>End date: </span>\n                    <span>{endDate}</span>\n                </div>\n            </HStack>\n            <RangeSlider onChange={(e) => onDateDrag(e)}\n                         onChangeEnd={(e) => onChangeDate(e)}\n                         defaultValue={[initialOffset, endOffset]}\n                         min={1629504000} max={Math.round(Date.now() / 1000)}\n                         step={sliderStep} minStepsBetweenThumbs={10}\n            >\n                <RangeSliderTrack bg={ColorPalette.thirdColor}>\n                    <RangeSliderFilledTrack bg={ColorPalette.thirdColor}/>\n                </RangeSliderTrack>\n                <RangeSliderThumb boxSize={6} index={0}/>\n                <RangeSliderThumb boxSize={6} index={1}/>\n            </RangeSlider>\n        </div>\n    )\n\n\n}\n\n\nexport default DateSlider;","import SteamGraph from \"./charts/steamChart/SteamGraph\";\nimport React, {useEffect, useState} from \"react\";\nimport {getInfoForPools, getInfoForPoolsForPair, getPoolList} from \"../services/dexService\";\nimport {Checkbox, HStack} from \"@chakra-ui/react\";\nimport Title from \"./genericComponents/Title\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport DateSlider from \"./genericComponents/DateSlider\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\n\nconst addressesToInclude = [\"0x8fb5bd3ac8efd05dacae82f512dd03e14aadab73\",\"0x72c3438cf1c915ecf5d9f17a6ed346b273d5bf71\",\"0x3daf1c6268362214ebb064647555438c6f365f96\",\"0x454e67025631c065d3cfad6d71e6892f74487a15\"\n    ,\"0xfe15c2695f1f920da45c30aae47d11de51007af9\",\"0x1643de2efb8e35374d796297a9f95f64c082a8ce\",\"0x87dee1cc9ffd464b79e058ba20387c1984aed86a\",\"0xa6908c7e3be8f4cd2eb704b5cb73583ebf56ee62\"\n    ,\"0x6f3a0c89f611ef5dc9d96650324ac633d02265d3\",\"0xd5a37dc5c9a396a03dd1136fc76a1a02b1c88ffa\",\"0xb5c9e891af3063004a441ba4fab4ca3d6deb5626\",\"0xed8cbd9f0ce3c6986b22002f03c6475ceb7a6256\",\n    \"0x2774516897ac629ad3ed9dcac7e375dda78412b9\",\"0x67926d973cd8ee876ad210faaf7dffa99e414acf\",\"0x63abe32d0ee76c05a11838722a63e012008416e6\",\"0xa389f9430876455c36478deea9769b7ca4e3ddb1\",\n    \"0x781655d802670bba3c89aebaaea59d3182fd755d\",\"0x2e02539203256c83c7a9f6fa6f8608a32a2b1ca2\",\"0xf64e1c5b6e17031f5504481ac8145f4c3eab4917\",\"0xb9f425bc9af072a91c423e31e9eb7e04f226b39d\",\n    \"0x62475f52add016a06b398aa3b2c2f2e540d36859\",\"0x140cac5f0e05cbec857e65353839fddd0d8482c1\",\"0xc2ea99c031b05ae03044c857c78afb5671dee96b\",\"0xc3e6d9f7a3a5e3e223356383c7c055ee3f26a34f\",\n    \"0x113f413371fc4cc4c9d6416cf1de9dfd7bf747df\",\"0x361221991b3b6282ff3a62bc874d018bfaf1f8c8\",\"0x199fb78019a08af2cb6a078409d0c8233eba8a0c\",\"0x7b7617c7b2236d7871741783cae8bcc222c2e05d\",\n    \"0xbe4b31fce1885fcd0e3351aa8b392fbcc4ef6036\",\"0x50141c21e4e861d4b2cbeb825b9a2b5e5e09a186\"]\n\n\n\nconst PoolView = (props:any) => {\n\n    const [data, setData] = useState<any>([]);\n    const [poolList, setPoolList] = useState<any[]>([]);\n    const [activePools,setActivePools] = useState<any>([]);\n    const [graphReady, setGraphReady] = useState<boolean>(false);\n    const [keys, setKeys] = useState<string[]>([]);\n    const [lastRequestLength, setLastRequestLength] = useState<any>(0);\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 30 * 24 * 60 * 60 * 1000) / 1000); // 30 days in the past in seconds\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState(dateFromTimeStamp(Date.now() / 1000));\n    const [endOffset, setEndOffset] = useState(Math.round(Date.now() / 1000));\n\n    useEffect(()=> {\n        getPoolList()\n            .then((p)=>{\n                console.log(\"Pools: \", p);\n                const pools = p.filter(r=>addressesToInclude.includes(r.pairAddress));\n                setPoolList(pools);\n            });\n    }, [])\n\n    useEffect(()=> {\n        if(poolList.length > 0) {\n            console.log(\"Will activate: \", poolList[0]);\n            setActivePools([poolList[0]]);\n            console.log(\"Active pool is: \", activePools);\n        }\n    },[poolList])\n\n    const handleCheckBoxChange = (e:any,idx:number) => {\n        console.log(\"CheckBoxChanged to: \", e.target.checked);\n        console.log(\"With value: \", e.target.value);\n\n        if(e.target.checked) {\n            // Add new token to active pool list\n            setActivePools([...activePools, poolList[idx]]);\n        } else {\n            // Remove using value...\n            console.log(\"Filtering: \", e.target.value);\n            setActivePools(activePools.filter((ap:any)=>ap.pairAddress != e.target.value));\n        }\n\n        //Chec\n\n    }\n\n    useEffect(()=>{\n        console.log(\"Current list is: \", activePools);\n        console.log(\"Last request length: \", lastRequestLength);\n\n        if(activePools.length > 0){\n\n            if(activePools.length > lastRequestLength) {\n                getInfoForPoolsForPair(activePools[activePools.length -1].pairAddress)\n                    .then((d)=>{\n                        const newArr : any[] = [];\n                        const newKey = 'tvl'+d[0].symbol0+'-'+d[0].symbol1;\n\n                        if(data.length >0) {\n                            d.map((nd:any, idx:number) => {\n                                const obj : any = {};\n                                obj[newKey] = nd.tvl0 + nd.tvl1;\n                                Object.assign(data[idx],{...obj})\n                                // newArr.push(obj);\n                            })\n                            setData(()=>[...data]);\n\n                        } else {\n                            d.map((nd:any, idx:number) => {\n                                const obj : any = {};\n                                obj[newKey] = nd.tvl0 + nd.tvl1;\n                                obj[\"timestamp\"] = nd.timestamp;\n                                newArr.push(obj);\n                            })\n                            setData(()=>[...newArr]);\n                        }\n                        keys.push(newKey)\n                        setKeys(keys);\n                    })\n            } else {\n                // Remove from current array\n                const addressArray = activePools.map((ap:any)=>`tvl${ap.token0}-${ap.token1}`);\n                console.log(\"Address array is: \", addressArray);\n                const keys = Object.keys(data[0]).filter(k=>k!=\"timestamp\");\n                console.log(\"Keys is: \", keys);\n                const addressToRemove = keys.filter((a:any)=>!addressArray.includes(a))[0];\n                console.log(\"Address to remove: \", addressToRemove);\n                const newArr = data.map((d:any)=>{\n                    delete d[addressToRemove];\n                    return d;\n                });\n                console.log(\"New data arr: \", data);\n                const keyIndex = keys.indexOf(addressToRemove);\n                const newKeys = keys.filter((k)=>k!=addressToRemove);\n                setKeys(newKeys);\n                setData(newArr)\n            }\n\n        }\n        setLastRequestLength(activePools.length);\n\n    },[activePools])\n\n\n    useEffect(()=>{\n        console.log(\"Keys changed to: \", keys);\n    },[keys])\n\n\n    const checkIsActive = (idx:number, t:any) : boolean => {\n        return `${t.token0}/${t.token1}` == `${activePools[idx]?.token0}/${activePools[idx]?.token1}`\n    }\n\n\n    return (<div>\n        <Title title=\"Pools\" hasInfo></Title>\n\n        <HStack>\n            {activePools.length>0 && (<div style={{\n                height: 600,\n                overflowY: 'scroll',\n                width: 250,\n                borderColor: ColorPalette.thirdColor,\n                borderWidth: 1,\n                borderRadius: 20,\n                padding: 20\n            }}>\n\n                <ul style={{ listStyleType: 'none'}}>\n                    {poolList.map((t: any, idx: number) => <li style={{marginBottom:5}}><Checkbox size='lg' style={{margin: 5}}\n                                                                                                  defaultChecked={checkIsActive(idx,t)}\n                                                                                                  value={t.pairAddress}\n                                                                                                  onChange={(e) => handleCheckBoxChange(e, idx)}>{t.token0}/{t.token1}</Checkbox></li>)}\n                </ul>\n            </div>)}\n\n\n            <div style={{height:600, borderWidth:1, borderRadius:20, marginLeft: 60,marginBottom:20}}>\n                {data.length > 0 && <SteamGraph data={data} keys={keys}/>}\n            </div>\n\n        </HStack>\n        <HStack>\n        <DateSlider style={{marginTop: 50}} startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate}\n    initialOffset={initialOffset} setInitialOffset={setInitialOffset} endOffset={endOffset} setEndOffset={setEndOffset} sliderStep={24 * 60 * 60}/>\n        <ExportIcon/>\n        </HStack>\n        {/*{poolList.map((t:any, idx: number) =>*/}\n        {/*    <Checkbox style={{margin:5}} defaultChecked={false} value={t.pairAddress} onChange={(e)=>handleCheckBoxChange(e, idx)}>{t.token0}/{t.token1}</Checkbox>)}*/}\n\n\n\n\n    </div>)\n\n\n}\n\n\nexport default PoolView;","\n\nconst UnderConstruction = (props :any) => {\n\n    return (\n        <div>\n            <h1>Under construction!</h1>\n            \n        </div>\n    )\n\n\n\n}\n\nexport default UnderConstruction;","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport Moralis from \"moralis\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport {useMoralis} from \"react-moralis\";\nimport Tokens from \"./components/Tokens\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport TokenView from \"./components/TokenView\";\nimport CandleStickTemplate from \"./components/charts/candlestick/CandleStickTemplate\";\nimport {appId, serverUrl} from \"./index\";\nimport Pools from \"./components/Pools\";\nimport {Dashboard} from \"./components/dashboard/Dashboard\";\nimport set = Moralis.CoreManager.set;\nimport {Sidebar} from \"./components/sidebar/Sidebar\";\nimport {\n    Button, DrawerBody,\n    DrawerCloseButton,\n    DrawerContent, DrawerFooter,\n    DrawerHeader,\n    DrawerOverlay,\n    Grid, Drawer,\n    GridItem, Input,\n    useDisclosure, Flex\n} from \"@chakra-ui/react\";\nimport {MultipleTokens} from \"./components/MultipleTokens\";\nimport PoolView from \"./components/PoolView\";\nimport {ColorPalette} from \"./components/styles/color_palette\";\nimport UnderConstruction from \"./components/genericComponents/UnderConstruction\";\n\n\nfunction App() {\n    Moralis.initialize(appId);\n    Moralis.serverURL = serverUrl;\n\n    const {authenticate, isAuthenticating, isAuthenticated, logout, authError} =\n        useMoralis();\n\n    const authVars = {authenticate, isAuthenticating, isAuthenticated, logout, authError}\n    const [user, setUser] = useState();\n    const [navSize, setNavSize] = useState('large');\n\n    useEffect(() => console.log(\"User now is: \", user), [user])\n\n    // const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n\n    // const [dexList, setDexList] = useState<any[]>([]);\n\n    return (\n        <Flex style={{backgroundColor: ColorPalette.backgroundColor, height: '100vh', fontStyle: 'nunito'}}>\n\n            <BrowserRouter>\n\n                <Grid h=\"95vh\" w='99vw' templateColumns='repeat(10, 1fr)'>\n\n\n                    <GridItem clsSpan={2} style={{height: \"100vh\"}}>\n                        <Sidebar navSize={navSize} setNavSize={setNavSize}/>\n                    </GridItem>\n\n                    <GridItem colSpan={9} style={{marginLeft: 20, width: '100%', overflow: 'auto'}}>\n                        <Routes>\n                            <Route path=\"/\" element={<Dashboard style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/tokens\" element={<Tokens style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/multiTokens\" element={<MultipleTokens style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/token/:address\" element={<TokenView style={{marginLeft: 30}}/>}/>\n\n                            <Route path=\"/pools\" element={<PoolView style={{marginLeft: 100}}/>}/>\n                            <Route path=\"/whales\" element={<UnderConstruction/>}/>\n                            <Route path=\"/memPools\" element={<UnderConstruction/>}/>\n                            <Route path=\"/bridges\" element={<UnderConstruction/>}/>\n                            <Route path=\"/statistics\" element={<CandleStickTemplate/>}/>\n\n                        </Routes>\n                    </GridItem>\n                </Grid>\n                {/*</div>*/}\n            </BrowserRouter>\n        </Flex>\n    )\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ChakraProvider, extendTheme} from \"@chakra-ui/react\";\nimport {MoralisProvider} from \"react-moralis\";\n// import WithSubnavigation from \"./components/Navbar\";\n\n\nconst theme = extendTheme({\n    'config': {\n        initialColorMode:'light'\n    }\n});\n\n// export const appId = \"3zMC9oNElQZ4Ew0pzpmSwzve9r7JTj1tajiJwQx6\";\n// export const serverUrl = \"https://1tm9bltzoknp.usemoralis.com:2053/server\";\nexport const serverUrl = \"https://dwphjko0r4hx.usemoralis.com:2053/server\";\nexport const appId = \"Mgs7zi861Gx6HwE30jwiGuVBsP7LXybNW0x4UscU\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MoralisProvider appId={appId} serverUrl={serverUrl}>\n          <ChakraProvider theme={theme}>\n              <App />\n          </ChakraProvider>\n      </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}