{"version":3,"sources":["services/tokenService.ts","components/styles/color_palette.ts","components/genericComponents/Title.tsx","components/Tokens.tsx","utils/generalUtil.ts","components/charts/candlestick/CrossHairs.js","components/charts/utils/mouseUtils.ts","components/charts/utils/plotUtils.ts","components/charts/BasicChart.tsx","components/charts/candlestick/Candle.js","components/charts/candlestick/Chart.js","components/charts/candlestick/CandleStickTemplate.js","components/genericComponents/MultipleSelection.tsx","components/TokenView.tsx","utils/dateUtils.ts","services/dashboardService.ts","components/genericComponents/ExportIcon.tsx","images/logo.png","components/genericComponents/AvalyticsSpinner.tsx","components/genericComponents/List.tsx","components/dashboard/Gainers.tsx","components/dashboard/Losers.tsx","components/charts/pieChart/PieChart.tsx","components/dashboard/MarketCap.tsx","components/charts/miniChart/MiniChart.tsx","components/charts/miniChart/MiniChartContainer.tsx","components/dashboard/Dashboard.tsx","components/sidebar/NavItem.tsx","images/tokens.png","images/coins.png","images/pools.png","images/charts.png","images/whales.png","images/mempools.png","images/bridges.png","images/logo_2.png","components/sidebar/Sidebar.tsx","components/charts/barRaceChart/BarRaceChart.tsx","components/charts/correlationChart/CorrelationChartV2.js","components/charts/CorrelationChartWrapper.tsx","components/charts/heatmap/HeatMap.js","components/charts/HeatMapWrapper.tsx","components/MultipleTokens.tsx","components/charts/steamChart/SteamGraph.js","services/dexService.ts","components/PoolView.tsx","components/genericComponents/UnderConstruction.tsx","images/whales_bl.png","images/mempools_bl.png","images/bridges_bl.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTokenList","a","TOKEN","Moralis","Object","extend","query","Query","select","find","results","tokenList","filter","r","get","map","name","address","symbol","logoUrl","price","toFixed","marketCap","pctChange","getToken","equalTo","console","log","getTokenByAddress","tokenInfo","getTokenPriceHistoryDB","interval","since","upTo","candle","TokenPrice","priceKey","fetchFromAverage","Error","greaterThan","lessThan","ascending","limit","tokenPrices","obj","timestamp","exchange","candlePrices","closePrice","openPrice","maximumPrice","minimumPrice","assign","fetchTokensForHeatMap","intervalStep","filterTokens","tokens","length","t","includes","tokenPricesForHeat","Promise","all","prices","freshRecord","reverse","p","push","getCorrelations","Correlations","containedIn","correlation","symbol0","symbol1","keys","Set","keys2","finalKeys","finalResult","forEach","mainKey","keyCorrs","c","keyCorrs2","combinations","combination","kToAdd","key","result","ColorPalette","Title","props","useState","popupActivated","setPopupActivated","popupCoords","setPopupCoords","style","margin","fontSize","title","extraInfo","onMouseEnter","e","target","getBoundingClientRect","rect","x","y","onMouseLeave","padding","zIndex","icon","faInfoCircle","float","color","position","left","top","backgroundColor","opacity","borderColor","borderWidth","borderRadius","width","TokenList","navigate","useNavigate","selected","setSelected","renderTokenPrice","token","renderMarketCap","variant","faSort","onClick","sort","idx","cursor","handleHover","height","src","Tokens","setTokenList","isAscending","setIsAscending","useEffect","then","filteredTokens","prop","arr","b","parseFloat","CrossHairs","chart_dims","x1","y1","x2","pixel_width","y2","className","classNames","cross_hair","horz","pixel_height","vert","dollarAt","pixel","dollar","Math","abs","dollar_delta","dollar_low","addGrid","svg","xScale","yScale","xAxisGrid","axisBottom","tickSize","tickFormat","ticks","yAxisGrid","axisLeft","append","attr","call","updateGrid","selectAll","addAxis","xTicks","yTicks","xLabel","yLabel","d3","yAxis","xAxis","text","BasicChart","data","dates","undefined","mouseCoords","setMouseCoords","round","reduce","min","dollar_high","ceil","max","svgRef","useRef","current","domain","Date","range","yMin","yMax","line","d","i","curve","options","datum","strokeColor","setupData","setupLinearGraph","transition","duration","lineGenerator","updateChart","onMouseMove","nativeEvent","currentTarget","onMouseMoveInside","marginLeft","ref","fill","stroke","strokeWidth","Candle","candle_width","pixelFor","up","bar_top","bar_bottom","bar_height","wick_top","wick_bottom","down","wick","bottom","Chart","chart_width","chart_height","bar","floor","highs","lows","drawGraph","offsetX","offsetY","candle_x","CandleStickTemplate","buildCandles","time","setData","MultipleSelection","direction","buttons","id","selectionHandler","value","buttonColor","textAlign","label","CHART_TYPES_ENUM","dateFromTimeStamp","date","month","parseInt","getMonth","toString","getDate","getFullYear","getTopGainers","descending","gainers","slice","getTopLosers","getTopMCap","top5","get24HourPercentageChange","ExportIcon","justifyContent","faFileDownload","size","AvalyticsSpinner","count","setCount","intervalId","setInterval","prevCount","clearInterval","logo","document","getElementById","transform","INTERVALS","LINE","CANDLESTICK","TokenView","intervalUnit","setIntervalUnit","radioOptions","setRadioOptions","getIntervalStep","setTokenInfo","setTokenPrices","setDates","chartType","setChartType","setSourceExchange","isLoading","setIsLoading","setNoDataAvailable","useParams","setIntervalStep","now","initialOffset","setInitialOffset","endOffset","setEndOffset","startDate","setStartDate","endDate","setEndDate","setPctChange","pct","h","sources","onChangeInterval","onChangeDate","fetchChartData","fontWeight","alignItems","paddingTop","justifyItems","message","xDomain","marginTop","spacing","borderStyle","onChange","onChangeEnd","defaultValue","step","minStepsBetweenThumbs","bg","boxSize","index","ro","EntityList","tableStyle","noHead","entityProps","ep","dontDisplay","entityList","entity","type","postProcess","List","setEntityList","getter","entities","Gainers","Losers","PieChart","buildPieChart2","radius","node","arc","outerRadius","innerRadius","pie","percentage","feMerge","enter","on","this","midAngle","endAngle","startAngle","sin","cos","html","remove","tooltip","MarketCap","pieChartData","setPieChartData","allTokens","percentages","totalMCap","MiniChart","MiniChartContainer","setBorderColor","currentPrice","setCurrentPrice","plotColor","setPlotColor","border","marginRight","Dashboard","NavItem","navSize","route","active","setActiveMenu","status","mt","flexDir","w","placement","as","ReactLink","to","_hover","ml","display","Menus","charts","coins","pools","whales","mempools","bridges","Sidebar","setNavSize","activeMenu","paddingRight","logo_2","m","mb","align","BarRaceChart","frameBorder","scrolling","sandbox","CorrelationChartV2","corrData","buildCorrelationChart","Array","from","num","sqrt","xSpace","ySpace","cor","ypos","indexOf","xpos","aS","yA","scale","tickPadding","aG","iR","CorrelationChartWrapper","activeTokens","checkActiveTokens","overflowY","listStyleType","marginBottom","iconColor","colorScheme","defaultChecked","checked","idxToRemove","splice","handleCheckBoxChange","HeatMap","tokensList","setSvg","s","buildHeatMap","myGroups","myVars","pctgColor","interpolator","join","bandwidth","event","clientX","clientY","HeatMapWrapper","sliderStep","fetchPctChanges","tp","tl","MultipleTokens","isLazy","SteamGraph","setMaxKey","buildChart","chartData","maxArray","maxKey","absMax","getMax","stackedData","offset","Tooltip","area","y0","grp","__data__","split","getPoolList","POOL","poolList","token0","token1","pairAddress","getInfoForPoolsForPair","initialDate","finalDate","PoolInfo","poolInfo","dexName","reserve0","reserve1","tvl0","tvl1","addressesToInclude","PoolView","setPoolList","activePools","setActivePools","setKeys","lastRequestLength","setLastRequestLength","newArr","newKey","nd","addressArray","ap","k","addressToRemove","newKeys","checkIsActive","UnderConstruction","App","initialize","appId","serverURL","serverUrl","useMoralis","authenticate","isAuthenticating","isAuthenticated","logout","authError","user","fontStyle","templateColumns","clsSpan","colSpan","overflow","path","element","whales_bl","mempools_bl","bridges_bl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","initialColorMode","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e52143d.chunk.js","sourcesContent":["import Moralis from \"moralis\";\nimport {getBlockFromDate} from \"./miscService\";\n\nexport const getTokenList = async () : Promise<any[]> => {\n\n    const TOKEN = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TOKEN);\n    query.select(\"name\", \"id\",\"address\",\"symbol\",\"logoUrl\", \"currentPrice\", \"currentMarketCap\", \"pctPriceChange24Hr\");\n    const results = await query.find();\n    const tokenList = results.filter((r)=>r.get(\"symbol\") != 'SUSHI.e' && r.get(\"symbol\") != 'SNOB' && r.get(\"symbol\") != 'ANY').map((r)=>{\n        return {name:r.get(\"name\"),address: r.get(\"address\"),symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\"),\n            price: r.get(\"currentPrice\").toFixed(2), marketCap: r.get(\"currentMarketCap\"), pctChange: (r.get(\"pctPriceChange24Hr\")*100).toFixed(2)}\n    });\n    return tokenList;\n}\n\n\nexport const getToken = async (address : string) : Promise<any> => {\n\n    const TOKEN = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TOKEN);\n    query.select(\"name\", \"id\",\"address\",\"symbol\",\"logoUrl\", \"currentPrice\", \"currentMarketCap\", \"pctPriceChange24Hr\");\n    query.equalTo(\"address\", address);\n    const results = await query.find();\n\n    console.log(\"Token: \", results);\n    const tokenList = results.filter((r)=>r.get(\"symbol\") != 'SUSHI.e' && r.get(\"symbol\") != 'SNOB' && r.get(\"symbol\") != 'ANY').map((r)=>{\n        return {name:r.get(\"name\"),address: r.get(\"address\"),symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\"),\n            price: r.get(\"currentPrice\").toFixed(2), marketCap: r.get(\"currentMarketCap\"), pctChange: (r.get(\"pctPriceChange24Hr\")*100).toFixed(2)}\n    });\n\n    return tokenList[0];\n}\n\n\n\n\n\nexport const getTokenByAddress = async (address: any) => {\n    const TOKEN = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TOKEN);\n    query.select(\"name\", \"id\",\"address\",\"symbol\",\"logoUrl\");\n    query.equalTo(\"address\", address);\n    const results = await query.find();\n    const tokenInfo = results.map((r)=>{\n        return {name:r.get(\"name\"),address: r.get(\"address\"),symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\")}\n    });\n    return tokenInfo[0];\n}\n\n\nexport const getTokenPrice = async (address : any , chain?: any, to_date?: any) => {\n\n    const options  = {\n        address: address,\n        chain: chain?chain:\"avalanche\"\n    };\n\n    if (to_date) {\n        const blockInfo = await getBlockFromDate(to_date);\n        Object.assign(options,{to_block: blockInfo.block});\n    }\n\n    const tokenPrice = await Moralis.Web3API.token.getTokenPrice(options);\n    console.log(`Price for token with address ${address} is ${tokenPrice.usdPrice}`);\n    return tokenPrice;\n}\n\n\nexport const getTokenPriceFromDB = async (address : any) => {\n    const TokenPrice = Moralis.Object.extend(\"Token15Min\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"timeStamp\",\"price\", \"address\", \"marketCap\");\n\n    query.equalTo(\"address\", address);\n    query.descending(\"timeStamp\");\n    query.limit(1);\n    const result = await query.find();\n    return {price: result[0]?.get(\"price\").toFixed(2), address: result[0]?.get(\"address\"), marketCap: result[0]?.get(\"marketCap\")};\n}\n\n\n\n\n\n\nexport const getTokenMetadata = async (address : any , chain?: any) => {\n    const options : any  = {\n        addresses: address,\n        chain: chain?chain:\"avalanche\"\n    };\n    const metadata = await Moralis.Web3API.token.getTokenMetadata(options);\n    return metadata;\n}\n\n\n\n\nexport const getTokenPriceHistory = async (address:any, dateInterval: string[]) => {\n    const priceHistory = [];\n    for(let date of dateInterval) {\n        console.log(\"Date is: \", date);\n        try {\n            const price : any = await getTokenPrice(address, \"avalanche\", date);\n            console.log(\"Timestamp date : \", date);\n            price[\"date\"] = new Date(date);\n            price[\"address\"] = address;\n            priceHistory.push(price);\n        } catch (e) {\n            console.log(\"Error getting price\")\n        }\n\n    }\n    console.log(\"Price history is: \", priceHistory);\n    return priceHistory;\n}\n\nexport const getTokenPriceHistoryDB = async (address : any, interval: string, since? : any, upTo? : any, candle? : boolean) : Promise<any>=> {\n    console.log(\"Received class name: \", interval);\n    // console.log(\"Asking prices previous to: \", since);\n    let TokenPrice = Moralis.Object.extend(interval);\n    const query = new Moralis.Query(TokenPrice);\n    const fetchFromAverage = (interval==\"Token1Day\" || interval==\"Token4Hour\" || interval==\"Token1Hour\");\n    const priceKey = fetchFromAverage?\"averagePrice\":\"price\";\n\n    if(candle) {\n        if(!fetchFromAverage)\n            throw new Error(\"Interval not supported for candle data\")\n\n        query.select(priceKey, \"closePrice\",\"openPrice\", \"maximumPrice\",\"minimumPrice\",\"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    } else {\n        query.select(priceKey, \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    }\n\n\n    query.equalTo(\"address\", address);\n    if(since) {\n        query.greaterThan(\"timeStamp\", since)\n    }\n    if (upTo) {\n        query.lessThan(\"timeStamp\", upTo);\n    }\n    query.ascending(\"timeStamp\");\n    query.limit(5000);\n    const results = await query.find();\n    const tokenPrices = results.map((r)=>{\n        const obj : any = {price:fetchFromAverage?r.get(\"averagePrice\"):r.get(\"price\"),timestamp: r.get(\"timeStamp\"), exchange:r.get(\"exchange\"), symbol: r.get(\"symbol\")};\n        if (candle) {\n            const candlePrices = {\n                closePrice: r.get(\"closePrice\"),\n                openPrice: r.get(\"openPrice\"),\n                maximumPrice:r.get(\"maximumPrice\"),\n                minimumPrice:r.get(\"minimumPrice\")\n            }\n            Object.assign(obj, {...candlePrices})\n        }\n\n        if(interval!=='Token15Min')\n            Object.assign(obj,{pctChange: r.get(\"pctChange\")})\n\n        return obj;\n    });\n    return tokenPrices;\n\n}\n\n\nexport const getTokenLogoUrls = async () : Promise<any[]>  => {\n    const TokenLogo = Moralis.Object.extend(\"TokenLogos\")\n    const query = new Moralis.Query(TokenLogo);\n    query.select(\"address\", \"logoUrl\");\n    // query.equalTo(\"address\", address);\n    const tokenUrls = await query.find();\n    const urls = tokenUrls.map(tu=>{\n        return{'logoUrl': tu.get(\"logoUrl\"), 'address': tu.get('address')}\n    })\n    return urls;\n}\n\nexport const getTokenLogoUrlForAddress = async (address: string) : Promise<any>  => {\n    const TokenLogo = Moralis.Object.extend(\"TokenLogos\")\n    const query = new Moralis.Query(TokenLogo);\n    query.select(\"address\", \"logoUrl\");\n    query.equalTo(\"address\", address);\n    const tokenUrl = await query.find();\n    return tokenUrl[0];\n}\n\n\n\n\nexport const fetchTokensForHeatMap = async (intervalStep : any, since?: any, upTo?: any, filterTokens:any[] = []) => {\n\n    let tokens = await getTokenList();\n    if(filterTokens.length > 0) {\n        tokens = tokens.filter((t:any)=>filterTokens.includes(t.symbol));\n    }\n    const tokenPricesForHeat : any[] = [];\n    await Promise.all(tokens.map(async (t) => {\n        const prices = await getTokenPriceHistoryDB(t.address, intervalStep, since, upTo)\n        const freshRecord: { timestamp: any; symbol: any; price: any; pctChange: any }[] = [];\n        prices.reverse().map((p:any)=>{\n            freshRecord.push({\"timestamp\":p.timestamp,\"symbol\":p.symbol, \"price\":p.price, \"pctChange\": p.pctChange});\n        });\n        tokenPricesForHeat.push(...freshRecord);\n    }))\n    return tokenPricesForHeat;\n\n}\n\n\n\nconst fetchCandleData = async (address : any, interval: string, since? : any, upTo? : any) : Promise<any>=> {\n    console.log(\"Received class name: \", interval);\n    // console.log(\"Asking prices previous to: \", since);\n    let TokenPrice = Moralis.Object.extend(interval);\n    const query = new Moralis.Query(TokenPrice);\n    const fetchFromAverage = (interval==\"Token1Day\" || interval==\"Token4Hour\" || interval==\"Token1Hour\");\n    const priceKey = fetchFromAverage?\"averagePrice\":\"price\";\n\n\n\n    query.select(priceKey, \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"pctChange\");\n    query.equalTo(\"address\", address);\n    if(since) {\n        query.greaterThan(\"timeStamp\", since)\n    }\n    if (upTo) {\n        query.lessThan(\"timeStamp\", upTo);\n    }\n    query.ascending(\"timeStamp\");\n    query.limit(5000);\n    const results = await query.find();\n    const tokenPrices = results.map((r)=>{\n        const obj = {price:fetchFromAverage?r.get(\"averagePrice\"):r.get(\"price\"),timestamp: r.get(\"timeStamp\"), exchange:r.get(\"exchange\"), symbol: r.get(\"symbol\")};\n        if(interval!=='Token15Min')\n            Object.assign(obj,{pctChange: r.get(\"pctChange\")})\n\n        return obj;\n    });\n    return tokenPrices;\n\n}\n\n\nexport const getCorrelationsOld = async (tokens: any[]) => {\n\n    let Correlations = Moralis.Object.extend(\"TokenPriceCorelation\");\n    const query = new Moralis.Query(Correlations);\n    query.ascending(\"symbol0\");\n    query.containedIn(\"symbol0\", tokens );\n    query.containedIn(\"symbol1\", tokens );\n\n    query.limit(500);\n    const results = await query.find();\n    const correlation = results.map((r)=>{\n        const obj = {correlation: r.get(\"correlation\")?r.get(\"correlation\"):0, symbol0:r.get(\"symbol0\"), symbol1: r.get(\"symbol1\")};\n        return obj;\n    });\n\n    const finalData = [...correlation];\n\n\n    console.log(\"Data received: \", finalData);\n\n    const keys = [...new Set(correlation.map((r)=>r.symbol0))];\n    const keys2 = [...new Set(correlation.map((r)=>r.symbol1))];\n    const finalResult: any[] = [];\n    keys.forEach((key)=> {\n        const obj : any = {};\n        const keyCorrs = correlation.filter((c)=>c.symbol0 === key && tokens.includes(c.symbol1));\n        obj[key] = 1;\n        keyCorrs.forEach((kc)=>{\n            obj[kc.symbol1] = kc.correlation;\n        })\n        finalResult.push(obj);\n    })\n    const finalResult2: any[] = [];\n\n    keys2.forEach((key, idx) => {\n        const obj : any = {};\n        const keyCorrs = correlation.filter((c)=>c.symbol1 === key && tokens.includes(c.symbol0));\n        obj[key] = 1;\n        keyCorrs.forEach((kc)=>{\n            obj[kc.symbol0] = kc.correlation;\n        })\n        finalResult2.push(obj);\n    })\n\n    const finalResults3 = [...finalResult, ...finalResult2];\n    const idxToMerge : any[] = [];\n    finalResults3.forEach((fr, idx)=>{\n        if(Object.keys(fr).length < tokens.length) {\n            // Someting is wrong here\n            const key : any = Object.keys(fr).find(key => fr[key] === 1)\n            const idxsToMerge : any[] = finalResults3.map((f,idx)=>{\n                if(f[key]==1){\n                    return idx;\n                }\n            }).filter(r=>r!=undefined);\n\n\n            const newObj = {};\n            idxsToMerge.forEach((i:any)=>{\n                Object.assign(newObj, finalResults3[i]);\n            })\n\n\n            idxToMerge.push([idxsToMerge]);\n            finalResults3[idx] = newObj;\n\n            idxsToMerge.forEach((i:any)=>{\n                if(i != idx) {\n                    finalResults3.splice(i);\n                }\n            })\n            console.log(\"idx to merge: \", idxsToMerge);\n            console.log(\"Key is: \", key);\n        }\n    })\n\n    const result = finalResults3\n        // .splice(idxToMerge[0][0]);\n\n    console.log(\"Indexes to merge: \", idxToMerge);\n    console.log(\"___________- Final result\");\n    console.log(finalResults3.map((fr)=>Object.keys));\n\n    return result;\n}\n\n\n\n\nexport const getCorrelations= async (tokens: any[]) => {\n\n    let Correlations = Moralis.Object.extend(\"TokenPriceCorelation\");\n    const query = new Moralis.Query(Correlations);\n    query.ascending(\"symbol0\");\n    query.containedIn(\"symbol0\", tokens );\n    query.containedIn(\"symbol1\", tokens );\n\n    query.limit(500);\n    const results = await query.find();\n    const correlation = results.map((r)=>{\n        const obj = {correlation: r.get(\"correlation\")?r.get(\"correlation\"):0, symbol0:r.get(\"symbol0\"), symbol1: r.get(\"symbol1\")};\n        return obj;\n    });\n\n\n\n\n\n    const keys = [...new Set(correlation.map((r)=>r.symbol0))];\n    const keys2 = [...new Set(correlation.map((r)=>r.symbol1))];\n\n    const finalKeys = [...new Set([...keys, ...keys2])];\n\n\n    console.log(\"Final keys: \", finalKeys);\n    const finalResult: any[] = [];\n    finalKeys.forEach((mainKey)=> {\n        const obj : any = {};\n        const keyCorrs = correlation.filter((c)=>c.symbol0 === mainKey && tokens.includes(c.symbol1));\n        const keyCorrs2 = correlation.filter((c)=>c.symbol1 === mainKey && tokens.includes(c.symbol0));\n        const combinations = [...keyCorrs, ...keyCorrs2];\n        console.log(\"Combinations: \", combinations);\n        obj[mainKey] = 1;\n        combinations.forEach((combination : any)=>{\n            // kToAdd must be a token symbol (symbol0 or symbol1)\n            const kToAdd = Object.keys(combination).filter((key)=>{\n               if( combination[key] != mainKey && key != 'correlation') {\n                    return combination[key];\n               }\n            })[0];\n\n            obj[combination[kToAdd]] = combination.correlation;\n        })\n        console.log(\"Will push object: \", obj);\n        finalResult.push(obj);\n    })\n\n\n    const result = finalResult\n    // .splice(idxToMerge[0][0]);\n\n    console.log(\"___________- Final result\");\n    console.log(finalResult);\n\n    return result;\n}","\n\nexport const ColorPalette = {\n    mainColor: \"#056674\",\n    secondaryColor: \"#FF4B5C\",\n    thirdColor: \"#FF4B5C\",\n    highlight: \"#66BFBF\",\n    red: \"#fd4431\",\n    green: \"#09D766\",\n    fontGreen: \"#378805\",\n    backgroundColor:'white',\n    navFontColor: 'white',\n    gray: '#a0a0a0'\n}\n\n\n\n//     {\n//     mainColor: \"#0070b5\",\n//     secondaryColor: \"#49b7e9\",\n//     thirdColor: \"#8681e8\",\n//     highlight: \"#fe89be\",\n//     red: \"#fd4431\",\n//     green: \"#09D766\"\n// }","\nimport {HStack, Text} from '@chakra-ui/react';\nimport {faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React, {useState} from \"react\";\nimport {ColorPalette} from \"../styles/color_palette\";\n\nexport default function Title(props: any) {\n\n    const [popupActivated, setPopupActivated] = useState(false);\n\n    const [popupCoords, setPopupCoords] = useState([0,0]);\n\n    const handleInfoHover = (e:any) => {\n        console.log(\"Event: \", e.target);\n        console.log(\"Boundingrect: \", e.target.getBoundingClientRect())\n        const rect = e.target.getBoundingClientRect()\n        setPopupCoords([rect.x, rect.y])\n        console.log(\"Activating popup\");\n        setPopupActivated(true);\n    }\n\n    const handleInfoOut = () => {\n        setPopupActivated(false);\n\n    }\n\n\n    return(<HStack style={{margin:20}}>\n        <Text fontSize='2xl'>{props.title}</Text>\n        {props.extraInfo && <div onMouseEnter={handleInfoHover} onMouseLeave={handleInfoOut} style={{padding:10, zIndex:999}}><FontAwesomeIcon  icon={faInfoCircle}  style={{float:'right',color:ColorPalette.mainColor}}/></div>}\n        {popupActivated && (<div style={{color:'white', position:'absolute', left: popupCoords[0] + 20,top: popupCoords[1] + 20, float:'left',backgroundColor:ColorPalette.mainColor, opacity:0.95, zIndex:999,borderColor:'gray', borderWidth:1,\n            borderRadius:10, width:200,  padding:20}}>{props.extraInfo}</div>)}\n    </HStack>)\n}","import React, {ReactNode, useEffect, useState} from 'react';\nimport {getTokenList, getTokenLogoUrls, getTokenPrice, getTokenPriceFromDB} from \"../services/tokenService\";\nimport {\n    Table,\n    Tbody,\n    Td,\n    Th,\n    Thead,\n    Tr, useDisclosure\n} from \"@chakra-ui/react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Title from \"./genericComponents/Title\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport  { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faSort } from '@fortawesome/free-solid-svg-icons'\nimport {sort} from \"../utils/generalUtil\";\n// import fontawesome from '@fortawesome/fontawesome'\n\n// fontawesome.library.add(faSort as any);\n\nfunction Drawer(props: { isFullHeight: boolean, placement: string, onClose: any, isOpen: any, children: ReactNode }) {\n    return null;\n}\n\nfunction Tokens(props:any)  {\n\n    const [tokenList, setTokenList] = useState<any[]>([])\n    const [isAscending, setIsAscending] = useState(false);\n\n    useEffect (()=> {\n        getTokenList()\n            .then((tokens)=>{\n                const filteredTokens = tokens.filter((t:any)=>t.symbol!='ANY' && t.symbol!='SUSHI.e');\n                setTokenList(filteredTokens);\n\n            });\n    },[])\n\n\n\n    const sortTokens = (prop : string) => {\n        setTokenList(sort(tokenList, prop, isAscending));\n        setIsAscending(!isAscending);\n    }\n\n\n    return (\n        <div style={{...props.style}}>\n            <Title title=\"Tokens on  Avalanche C-Chain\" extraInfo={\"Listing of several tokens currently circulating on the Avalanche C-chain\"}/>\n            {tokenList.length>0 &&\n                <TokenList tokenList={tokenList} sort={sortTokens}/>}\n        </div>\n    );\n}\n\n\nfunction TokenList(props: any) {\n\n\n    const navigate = useNavigate();\n\n    const [selected, setSelected] = useState<number | null>(null);\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n    const handleLeave = () => {\n        setSelected(null);\n    }\n\n    const renderTokenPrice = (token : any) => {\n        if(token.price > -1) {\n            return (<span>{'$ ' + token.price}</span>)\n        } else {\n            return(<span>-</span>)\n        }\n    }\n\n    const renderMarketCap = (token:any) => {\n        if(token.marketCap > -1) {\n            return (<span>{'M$ ' + (token.marketCap / 10**6).toFixed(2)}</span>)\n        } else {\n            return(<span>-</span>)\n        }\n    }\n\n    return(<Table variant='simple'>\n        <Thead>\n            <Tr>\n                <Th>Name</Th>\n                <Th>Symbol <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('symbol')}/></Th>\n                <Th>Current Price <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('price')}/></Th>\n                <Th>Market Cap <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('marketCap')}/></Th>\n                <Th>% change (24h) <FontAwesomeIcon icon={faSort} onClick={()=>props.sort('pctChange')}/></Th>\n\n            </Tr>\n        </Thead>\n            <Tbody>\n                {props.tokenList.map((token: any, idx: number)=> {\n                    return(<Tr key={idx} style={selected==idx?{backgroundColor:ColorPalette.highlight, borderRadius:10, cursor:'pointer'}:{}}\n                               onMouseEnter={(e)=> handleHover(e, idx)}\n                               onMouseLeave={()=>handleLeave()}\n                               onClick={()=>navigate(`/token/${token.address}`)}>\n                        <Td><img style={{width:64, height:64}} src={token.logoUrl}/></Td>\n                        <Td>{token.symbol}</Td>\n                        <Td>{renderTokenPrice(token)}</Td>\n                        <Td>{renderMarketCap(token)}</Td>\n                        <Td style={{color: token.pctChange>0?ColorPalette.fontGreen:ColorPalette.red}}>\n                                    {token.pctChange + '%'}\n                            </Td>\n                    </Tr>)\n                })}\n            </Tbody>\n\n    </Table>)\n}\n\n\n\n\nexport default Tokens;","\n\nexport const sort = (arr: any[],prop: string, isAscending: boolean) => {\n\n    if(isAscending) {\n        arr.sort( function( a:any , b:any){\n            if(parseFloat(a[prop]) > parseFloat(b[prop])) return 1;\n            if(parseFloat(a[prop]) < parseFloat(b[prop])) return -1;\n            return 0;\n        });\n    } else {\n        arr.sort( function( a:any , b:any){\n            if(parseFloat(a[prop]) > parseFloat(b[prop])) return -1;\n            if(parseFloat(a[prop]) < parseFloat(b[prop])) return 1;\n            return 0;\n        });\n    }\n\n    console.log(\"Sorted: \", arr);\n    return arr;\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst CrossHairs = props => {\n    const { x, y, chart_dims,style } = props;\n\n    if (x + y === 0) {\n        return <></>;\n    }\n\n    return (\n        <>\n            <line\n                x1={0}\n                y1={y}\n                x2={chart_dims.pixel_width}\n                y2={y}\n                style={style}\n                className={classNames({\n                    cross_hair: true,\n                    horz: true\n                })}\n            />\n            <line\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={chart_dims.pixel_height}\n                style={style}\n                className={classNames({\n                    cross_hair: true,\n                    vert: true\n                })}\n            />\n        </>\n    );\n};\n\nexport default CrossHairs;\n","export const onMouseLeave = (setMouseCoords: any) => {\n    setMouseCoords({\n        x: 0,\n        y: 0\n    });\n};\n\nexport const onMouseMoveInside = (e:any, setMouseCoords: any) => {\n    setMouseCoords({\n        x:\n            e.nativeEvent.x -\n            Math.round(e.currentTarget.getBoundingClientRect().left),\n        y:\n            e.nativeEvent.y -\n            Math.round(e.currentTarget.getBoundingClientRect().top)\n    });\n};\n\nexport const dollarAt = (pixel:any, chart_dims: any) => {\n    const dollar =\n        (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n        chart_dims.dollar_delta +\n        chart_dims.dollar_low;\n\n    return pixel > 0 ? dollar.toFixed(2) : \"-\";\n};","import {axisBottom, axisLeft} from \"d3\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport * as d3 from \"d3\";\n\nexport const addGrid = (svg: any, xScale : any, yScale : any, height : any, width : any) => {\n    const tickFormat : any = \"\";\n\n    const xAxisGrid : any = axisBottom(xScale).tickSize(-height).tickFormat(tickFormat).ticks(10);\n    const yAxisGrid : any = axisLeft(yScale).tickSize(-width).tickFormat(tickFormat).ticks(10);\n    svg.append('g')\n        .attr('class', 'x axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxisGrid);\n    svg.append('g')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(yAxisGrid);\n}\n\n\nexport const updateGrid = (svg: any, xScale : any, yScale : any, height : any, width : any) => {\n    const tickFormat : any = \"\";\n\n    const xAxisGrid : any = axisBottom(xScale).tickSize(-height).tickFormat(tickFormat).ticks(10);\n    const yAxisGrid : any = axisLeft(yScale).tickSize(-width).tickFormat(tickFormat).ticks(10);\n    svg.selectAll('g.y.axis-grid')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(xAxisGrid)\n\n    svg.selectAll('g.y.axis-grid')\n        .attr('class', 'y axis-grid')\n        .attr('color', ColorPalette.highlight)\n        .call(yAxisGrid);\n}\n\n\n\nexport const addAxis = (svg: any, xScale: any, yScale: any, width:number, height: number, xTicks:number, yTicks:number , xLabel: string, yLabel: string) => {\n    const dateFormat : any = d3.timeFormat('%b')\n    // Setup the axes\n\n    const yAxis = d3.axisLeft(yScale)\n        .ticks(5);\n\n    const xAxis = d3.axisBottom(xScale)\n        .ticks(5);\n\n    svg.append('g')\n        .attr('class', 'x axis')\n        .attr('color', ColorPalette.mainColor)\n        .attr(\"transform\",\"translate(0,\" + height + \")\")\n        .call(xAxis)\n\n    svg.append('g')\n        .attr('color', ColorPalette.mainColor)\n        .attr('class', 'y axis')\n        .call(yAxis)\n\n\n    svg.append(\"text\")\n        .attr(\"class\", \"y label\")\n        .attr('color', ColorPalette.mainColor)\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", -50 - 10)\n        .attr(\"x\",  - height/2 + 10)\n        .attr(\"dy\", \".75em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .text(yLabel);\n}\n\n\n","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {transition} from \"d3-transition\";\nimport {select, selectAll} from \"d3-selection\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport CrossHairs from \"./candlestick/CrossHairs\";\nimport {dollarAt, onMouseLeave, onMouseMoveInside} from \"./utils/mouseUtils\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {addAxis, addGrid, updateGrid} from \"./utils/plotUtils\";\n\n\nconst BasicChart = (props: any) => {\n\n    const {data,width, height, dates} = props;\n\n    const [lineGenerator, setLineGenerator] = useState<any>(undefined);\n\n\n    const [mouseCoords, setMouseCoords] = useState({\n        x: 0,\n        y: 0\n    });\n\n    const dollar_low = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n    const dollar_high = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n\n\n    const chart_dims = {\n        pixel_width: width,\n        pixel_height: height,\n        dollar_high,\n        dollar_low,\n        dollar_delta: dollar_high - dollar_low\n    };\n\n\n    // console.log(\"Domain is: \", xDomain);\n\n    const svgRef = useRef<any>();\n\n    function updateChart() {\n        const {\n             data,\n        } = props;\n\n\n        const t : any = transition().duration(1000);\n\n        const line = select('#line');\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', ColorPalette.backgroundColor)\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n\n        const xScale: any = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, width]) // x width\n\n        const yMin = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n\n        const xAxis: any = d3.axisBottom(xScale)\n            .ticks(5);\n\n        svg.selectAll('g.x.axis')\n            .attr(\"transform\",\"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n        const yAxis: any = d3.axisLeft(yScale)\n            .ticks(5);\n\n        svg.selectAll('g.y.axis')\n            .call(yAxis);\n\n\n        updateGrid(svg,xScale,yScale,height,width);\n\n\n        const lineGenerator = d3.line()\n            .x((d, i)=> xScale(new Date(dates[i]*1000)))\n            .y(yScale)\n            .curve(d3.curveLinear)\n\n        line\n            .datum(data)\n            .transition(t)\n            .attr('d', lineGenerator);\n    }\n\n\n    const setupData = (svg:any, data:any, line:any, options: any) => {\n        // Setup data\n        svg\n            .append('path')\n            .datum(data)\n            .attr('id', 'line')\n            .attr('stroke', options.strokeColor?options.strokeColor:'black')\n            .attr('stroke-width', 2)\n            .attr('fill', 'none')\n            .attr('d', line);\n    }\n\n\n\n    const setupLinearGraph = (prices: any[]) => {\n\n        // Setup svg\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', ColorPalette.backgroundColor)\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        // Setup scaling\n\n        const xScale: any = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, width]) // x width\n\n\n        const yMin = Math.round(data.reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.reduce((a:number,b: number)=> Math.max(a,b)));\n        console.log(\"Y max is: \", yMax);\n        console.log(\"Y min is: \", yMin);\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n        // Setting up line\n        const line = d3.line()\n            .x((d, i)=> xScale(i))\n            .y(yScale)\n            .curve(d3.curveLinear)\n        // setLineGenerator(line);\n\n        addAxis(svg,xScale,yScale, width,height,5,5,'Date', 'USD Price');\n\n        addGrid(svg,xScale,yScale,height,width);\n\n        const dataOptions = {strokeColor: ColorPalette.secondaryColor}\n        setupData(svg, data,line, dataOptions);\n        return line;\n    }\n\n\n    useEffect(()=>{\n\n        setupLinearGraph(data);\n    },[])\n\n\n    useEffect(() => {\n        updateChart()\n        }, [data])\n\n\n        return (\n            <div>\n                <svg onMouseMove={(e)=>onMouseMoveInside(e, setMouseCoords)}\n                     onMouseLeave={()=>onMouseLeave(setMouseCoords)}\n                     style={{marginLeft: \"100px\", zIndex:-1}} ref={svgRef}>\n                    <text x=\"10\" y=\"16\" fill={ColorPalette.mainColor} fontSize=\"25\">\n                        <tspan x=\"10\" y=\"30\" color={ColorPalette.red}>\n                            Dollars: ${dollarAt(mouseCoords.y, chart_dims)}\n                        </tspan>\n                    </text>\n                    <CrossHairs style={{stroke:\"#892CDC\",strokeWidth:2}} x={mouseCoords.x} y={mouseCoords.y} chart_dims={{pixel_width: width, pixel_height: height}} />\n                </svg>\n\n            </div>\n        )\n\n};\n\nexport default BasicChart;","import React from \"react\";\nimport classNames from \"classnames\";\nimport * as d3 from \"d3\";\n\nconst Candle = props => {\n    const { data, x, candle_width, pixelFor } = props;\n\n    const up = data.closePrice > data.openPrice;\n    const bar_top = pixelFor(up ? data.closePrice : data.openPrice);\n    const bar_bottom = pixelFor(up ? data.openPrice : data.closePrice);\n    const bar_height = bar_bottom - bar_top;\n    const wick_top = pixelFor(data.maximumPrice);\n    const wick_bottom = pixelFor(data.minimumPrice);\n\n    return (\n        <>\n            <rect\n                x={x - candle_width / 2}\n                y={bar_top}\n                width={candle_width}\n                height={bar_height}\n                className={classNames({\n                    candle: true,\n                    up: up,\n                    down: !up\n                })}\n            />\n            <line\n                className={classNames({\n                    wick: true,\n                    top: true,\n                    up: up,\n                    down: !up\n                })}\n                x1={x}\n                y1={bar_top}\n                x2={x}\n                y2={wick_top}\n            />\n            <line\n                className={classNames({\n                    wick: true,\n                    bottom: true,\n                    up: up,\n                    down: !up\n                })}\n                x1={x}\n                y1={bar_bottom}\n                x2={x}\n                y2={wick_bottom}\n            />\n        </>\n    );\n};\n\nexport default Candle;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport classNames from \"classnames\";\nimport * as d3 from \"d3\";\n\nimport Candle from \"./Candle\";\nimport CrossHairs from \"./CrossHairs\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport {dollarAt, onMouseLeave, onMouseMoveInside} from \"../utils/mouseUtils\";\nimport {transition} from \"d3-transition\";\nimport {select} from \"d3-selection\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {addAxis, addGrid, updateGrid} from \"../utils/plotUtils\";\n\nconst Chart = props => {\n    const { data, width: chart_width, height: chart_height, dates } = props;\n\n    // console.log(\"Received data: \", data);\n    const svgRef = useRef();\n    // let { last_bar_idx = 0, bars_wide = 40 } = props;\n\n    // last_bar_idx should default to the last bar in the data, or else be sure passed-in value doesn't exceed the last bar\n    // last_bar_idx = last_bar_idx > 0 ? Math.min(last_bar_idx, data.length - 1) : data.length - 1;\n\n    const [mouseCoords, setMouseCoords] = useState({\n        x: 0,\n        y: 0\n    });\n\n    console.log(\"Data is: \", data);\n    // find the high and low bounds of all the bars being sidplayed\n    const dollar_high = d3.max(data.map(bar => bar.maximumPrice)) * 1.05;\n    const dollar_low = d3.min(data.map(bar => bar.minimumPrice)) * 0.95;\n\n    console.log(`Highs are: high ${dollar_high} and low ${dollar_low}`);\n\n    const chart_dims = {\n        pixel_width: chart_width,\n        pixel_height: chart_height,\n        dollar_high,\n        dollar_low,\n        dollar_delta: dollar_high - dollar_low\n    };\n\n    const dollarAt = pixel => {\n        const dollar =\n            (Math.abs(pixel - chart_dims.pixel_height) / chart_dims.pixel_height) *\n            chart_dims.dollar_delta +\n            chart_dims.dollar_low;\n\n        return pixel > 0 ? dollar.toFixed(2) : \"-\";\n    };\n\n    const pixelFor = dollar => {\n        return Math.abs(\n            ((dollar - chart_dims[\"dollar_low\"]) / chart_dims[\"dollar_delta\"]) *\n            chart_dims[\"pixel_height\"] -\n            chart_dims[\"pixel_height\"]\n        );\n    };\n\n    const onMouseLeave = () => {\n        setMouseCoords({\n            x: 0,\n            y: 0\n        });\n    };\n\n    const onMouseMoveInside = e => {\n        setMouseCoords({\n            x:\n                e.nativeEvent.x -\n                Math.round(e.currentTarget.getBoundingClientRect().left),\n            y:\n                e.nativeEvent.y -\n                Math.round(e.currentTarget.getBoundingClientRect().top)\n        });\n    };\n\n    const onMouseClickInside = e => {\n        console.log(`Click at ${e.nativeEvent.offsetX}, ${e.nativeEvent.offsetY}`);\n    };\n\n    // calculate the candle width\n    const candle_width = Math.floor((chart_width / data.length) * 0.7);\n\n\n    function updateChart() {\n        const {\n            data,\n        } = props;\n\n        const svg = d3.select(svgRef.current);\n\n        const xScale = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, props.width]) // x width\n        const highs = data.map(d=>d.maximumPrice);\n        const lows = data.map(d=>d.minimumPrice);\n        const yMin = Math.round(lows.reduce((a,b) => Math.min(a,b)));\n        const yMax = Math.ceil(highs.reduce((a,b)=> Math.max(a,b)));\n        const yScale = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([props.height, 0])\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .ticks(5);\n\n        svg.selectAll('g.x.axis')\n            .attr(\"transform\",\"translate(0,\" + props.height + \")\")\n            .call(xAxis);\n\n        const yAxis = d3.axisLeft(yScale)\n            .ticks(5);\n\n        svg.selectAll('g.y.axis')\n            .call(yAxis);\n\n\n\n        updateGrid(svg,xScale,yScale,props.height,props.width);\n\n    }\n\n\n\n\n    const drawGraph = (data) => {\n\n        const xScale = d3.scaleTime()\n            .domain([new Date(dates[0]*1000),new Date(dates[dates.length -1] * 1000)]) // x ticks\n            .range([0, props.width]) // x width\n\n        const highs = data.map(d=>d.maximumPrice);\n        const lows = data.map(d=>d.minimumPrice);\n        const yMin = Math.round(lows.reduce((a,b) => Math.min(a,b)));\n        const yMax = Math.ceil(highs.reduce((a,b)=> Math.max(a,b)));\n\n        const yScale = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([props.height, 0])\n\n        const ticksNumber = 10;\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', props.width)\n            .attr('height', props.height)\n            .style('background', 'white')\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        console.log(\"Before adding axis xScale is: \", xScale);\n        console.log(\"Before adding axis yScale is: \", yScale);\n\n\n        addAxis(svg,xScale,yScale, props.width,props.height,5,5,'Date', 'USD Price');\n\n\n        addGrid(svg,xScale,yScale,props.height,props.width);\n\n    }\n\n    useEffect(() => {\n        console.log(\"Setting up with prices: \", data);\n        drawGraph(data);\n    }, [])\n\n\n    useEffect(() => {\n        updateChart();\n    },[data])\n\n\n\n    return (\n        <svg\n            ref={svgRef}\n            width={chart_width}\n            height={chart_height}\n            // onMouseMove={onMouseMoveInside}\n            onClick={onMouseClickInside}\n            // onMouseLeave={onMouseLeave}\n\n            onMouseMove={(e)=>onMouseMoveInside(e, setMouseCoords)}\n            onMouseLeave={()=>onMouseLeave(setMouseCoords)}\n            style={{marginLeft: \"100px\", zIndex:-1}} ref={svgRef}>\n            <text x=\"10\" y=\"16\" fill=\"black\" fontSize=\"20\">\n                <tspan x=\"10\" y=\"30\" color=\"black\">\n                    Dollars: ${dollarAt(mouseCoords.y, chart_dims)}\n                </tspan>\n            </text>\n            {data.map((bar, i) => {\n                const candle_x = (chart_width / (data.length + 1)) * (i + 1);\n                return (\n                    <Candle\n                        key={i}\n                        data={bar}\n                        x={candle_x}\n                        candle_width={candle_width}\n                        pixelFor={pixelFor}\n                    />\n                );\n            })}\n            <text x=\"10\" y=\"16\" fill=\"white\" fontSize=\"10\">\n                <tspan x=\"10\" y=\"30\">\n                    Dollars: ${dollarAt(mouseCoords.y)}\n                </tspan>\n            </text>\n            <CrossHairs style={{stroke:\"black\",strokeWidth:2}} x={mouseCoords.x} y={mouseCoords.y} chart_dims={chart_dims} />\n        </svg>\n    );\n};\n\nexport default Chart;\n","import React, {useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport \"./styles.css\";\nimport Chart from \"./Chart\";\nimport {getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport BasicChart from \"../BasicChart\";\n\n\nexport default function CandleStickTemplate(props) {\n\n    let bars_displayed = 40;\n    let last_bar_displayed = 0;\n\n    const randomOne = (weight = 1) => {\n        return (Math.random() + Math.random() - 1) * weight;\n    };\n\n\n\n\n    const buildCandles = (d) => {\n        if(!props.data.map(r=>r.minimumPrice)[0])\n            return;\n\n        console.log(\"Candles: \", props.data);\n        return props.data.map((prices, i) => {\n            const openPrice =prices.openPrice;\n            const closePrice = prices.closePrice\n            const maximumPrice = prices.maximumPrice\n            const minimumPrice = prices.minimumPrice;\n            const t = prices.timestamp;\n            return {\n                time: new Date(t*1000),\n                openPrice,\n                maximumPrice,\n                minimumPrice,\n                closePrice\n            };\n        })\n\n    }\n\n\n    // buildCandles();\n\n    const [data, setData] = useState(buildCandles());\n\n    useEffect(()=> {\n        setData(buildCandles());\n    },[])\n\n\n    useEffect(()=>{\n        console.log(\"Building candles\");\n        setData(buildCandles());\n    },props.data)\n\n\n\n    return (\n        <div>\n\n                <div>\n                    {data && <Chart data={data} dates={props.dates} width={props.width} height={props.height} />}\n                </div>\n\n        </div>\n    );\n}\n","import {Stack} from \"@chakra-ui/react\";\nimport {useState} from \"react\";\n\n\nexport default function MultipleSelection(props: any) {\n\n    const [selected, setSelected] = useState<number>(-1);\n\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n    const handleLeave = () => {\n        setSelected(-1);\n    }\n\n\n    return (\n        <div >\n\n            <Stack direction='row'>\n                {\n                    props.buttons.map((b:any, idx: number)=>{\n                        return (<div id={`select-${idx}`} onClick={()=>props.selectionHandler(b.value)}\n                                     style={{backgroundColor:selected==idx?'grey':props.style.buttonColor,\n                            margin:10,\n                            padding:10,\n                            textAlign:\"center\",\n                             // height:20,\n                            borderRadius: 10,\n                            cursor: 'pointer',\n                            }}\n                                     onMouseEnter={(e)=> handleHover(e, idx)}\n                                     onMouseLeave={(e)=>handleLeave()}\n                        >\n                            <span>{b.label}</span>\n                        </div>)\n                    })\n                }\n            </Stack>\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {\n    getTokenByAddress,\n    getTokenMetadata,\n    getTokenPriceHistory,\n    getTokenPriceHistoryDB\n} from \"../services/tokenService\";\nimport {useParams} from \"react-router-dom\";\nimport {\n    Button, Flex,\n    Grid,\n    GridItem, HStack,\n    Radio,\n    RadioGroup,\n    RangeSlider, RangeSliderFilledTrack, RangeSliderThumb,\n    RangeSliderTrack,\n    Select,\n    Stack, VStack\n} from \"@chakra-ui/react\";\n\nimport BasicChart from \"./charts/BasicChart\";\nimport RadioSelection from \"./genericComponents/RadioSelection\";\nimport CandleStickTemplate from \"./charts/candlestick/CandleStickTemplate\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport MultipleSelection from \"./genericComponents/MultipleSelection\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport {get24HourPercentageChange} from \"../services/dashboardService\";\nimport {FaFontAwesome} from \"react-icons/all\";\nimport {faFileExport, faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\nimport AvalyticsSpinner from \"./genericComponents/AvalyticsSpinner\";\n\nenum CHART_TYPES_ENUM {\n    LINE,\n    CANDLESTICK\n}\n\n\nconst INTERVALS = [\n    { value: \"Token1Day\", label: '1 Day' },\n    { value: \"Token4Hour\", label: '4 Hours' },\n    { value: \"Token1Hour\", label: '1 Hour' },\n    {value: \"Token15Min\", label: '15 Mins'}\n]\n\nconst CHART_TYPES = [{ value: CHART_TYPES_ENUM.LINE, label: 'Line Chart' },\n    {value: CHART_TYPES_ENUM.CANDLESTICK, label: 'Candlestick chart'}]\n\n\n\nfunction TokenView(props:any)  {\n\n    const [intervalUnit, setIntervalUnit] = useState(INTERVALS[0].value);\n    const [radioOptions, setRadioOptions] = useState(INTERVALS);\n\n    const getIntervalStep = () => {\n        switch (intervalUnit) {\n            case \"Token1Day\":\n                return 24 * 60 * 60;\n            case \"Token4Hour\":\n                return 4 * 60 * 60;\n            case \"Token1Hour\":\n                return 60 * 60;\n            case \"Token15Min\":\n                return 15 * 60;\n            default:\n                return 1;\n        }\n    }\n\n    const [tokenInfo, setTokenInfo] = useState<any>(null);\n    const [tokenPrices, setTokenPrices] = useState <any[]>([]);\n    const [dates, setDates] = useState<any[]>([]);\n    const [chartType, setChartType] = useState(CHART_TYPES_ENUM.LINE);\n    const [sourceExchange, setSourceExchange] = useState<any[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [noDataAvailable, setNoDataAvailable] = useState(false);\n    const {address} = useParams<string>();\n    // const [intervalUnit, setIntervalUnit] = useState<any>(INTERVALS[0].value); // Gives us used interval (1day, 4hour, 1hour, ...)\n    const [intervalStep, setIntervalStep] = useState<any>(getIntervalStep()) // Step for slider\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 30*24*60*60*1000)/1000); // 30 days in the past in seconds\n    const [endOffset, setEndOffset] = useState(Date.now()/1000);\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState<any>(dateFromTimeStamp(Date.now()/1000));\n    const [pctChange, setPctChange] = useState(0);\n\n\n    useEffect(()=>{\n        setIsLoading(true);\n        getTokenByAddress(address)\n            .then((t)=> {\n                console.log(\"Received: \", t);\n                setTokenInfo(t);\n            })\n\n        get24HourPercentageChange(address)\n            .then((pct)=> {\n                setPctChange(pct)\n                // setPlotColor(pct>0?ColorPalette.green:ColorPalette.red)\n            });\n\n        getTokenPriceHistoryDB(address, intervalUnit, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                console.log(\"Got price history: \", tokenPrices)\n                setIsLoading(false);\n                const sources : any[] = [];\n                h.map((p)=>{\n                    if(!sources.includes(p.exchange)) {\n                        sources.push(p.exchange);\n                    }\n                })\n                setSourceExchange(sources);\n                console.log(\"Sources: \", sources);\n            })\n\n    },[])\n\n\n    useEffect(()=> {\n        setTokenPrices([]);\n        setIsLoading(true);\n        getTokenPriceHistoryDB(address, intervalUnit, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n\n    },[chartType])\n\n\n\n    const onChangeInterval = async (interval: any) => {\n        console.log(\"Asking price due to interval change: \", interval);\n        setIntervalUnit(interval);\n        setIntervalStep(getIntervalStep());\n\n        getTokenPriceHistoryDB(address, interval, initialOffset, endOffset, chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n    }\n\n    const fetchChartData = (date: any) => {\n        getTokenPriceHistoryDB(address, intervalUnit, Math.round(date[0]),Math.round(date[1]), chartType!==CHART_TYPES_ENUM.LINE)\n            .then((h:any[])=> {\n                setTokenPrices([...h.map(r=>r)]);\n                if(tokenPrices.length==0) {\n                    setNoDataAvailable(true);\n                }\n                setDates([...h.map(h=>h.timestamp)]);\n                setIsLoading(false);\n            })\n    }\n\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date:any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n\n        fetchChartData(date);\n    }\n\n\n    const chartSelectionHandler = (e: any) => {\n        console.log(\"Triggered with vale: \", e);\n        if(chartType === CHART_TYPES_ENUM.CANDLESTICK) {\n            setRadioOptions(INTERVALS);\n        } else {\n            setRadioOptions(radioOptions.filter((ro)=>ro.value!='Token15Min'))\n        }\n        setChartType(e);\n    }\n\n    const getPercentage = () => {\n\n        // Change this to be last 24 hour percentage\n        return parseFloat((pctChange * 100).toFixed(2));\n    }\n\n\n    return (\n        <div style={{justifyContent:'center'}}>\n            {tokenInfo && (<div style={{margin:20, fontSize:'1.3em', fontWeight:'bold' , alignItems:'center'}}>\n                <HStack>\n                    <img src={tokenInfo.logoUrl} style={{width:60, height:60, margin:10}}/>\n                    <h2>{tokenInfo.name} / {tokenInfo.symbol}</h2>\n                </HStack>\n            </div>)}\n\n\n\n            <div style={{margin:30, marginLeft:60, borderColor:'gray.200',top:100, borderRadius:50, borderWidth:2,paddingTop:40, width: 1400, height:550}}>\n                {isLoading && <div style={{height:'100%', alignItems:'center', justifyItems:\"center\"}}><AvalyticsSpinner style={{width:80, height: 80}} message={`Loading price history`}/></div>}\n\n                {(!isLoading && tokenPrices.length) && <div >\n                {chartType === CHART_TYPES_ENUM.LINE && <BasicChart data={tokenPrices.map(d=>d.price)} dates={dates} xDomain={dates}  width={1200} height={450} />}\n                {chartType !== CHART_TYPES_ENUM.LINE && <CandleStickTemplate data={tokenPrices} dates={dates} xDomain={dates}  width={1200} height={450}/>}\n\n\n            </div>}\n            </div>\n\n            {/* Bottom part */}\n\n\n            <div style={{width:'100%', marginLeft:70, marginTop:20}}>\n\n                <HStack  spacing={'100px'}>\n\n\n                    <div style={{borderWidth:1, borderStyle:'solid', borderRadius: 20, padding:20, width:'40%'}}>\n                        <HStack>\n\n\n                            <div>\n                                <span>Start date: </span>\n                                <span>{startDate}</span>\n                            </div>\n                            <div> / </div>\n                            <div>\n                                <span>End date: </span>\n                                <span>{endDate}</span>\n                            </div>\n\n                        </HStack>\n\n                        <RangeSlider onChange={(e)=> onDateDrag(e)}\n                                     onChangeEnd={(e)=>onChangeDate(e)}\n                                     defaultValue={[initialOffset, Math.round(Date.now() / 1000)]}\n                                     min={1629504000} max={Math.round(Date.now() / 1000)}\n                                     step={intervalStep} minStepsBetweenThumbs={10}\n\n                        >\n                            <RangeSliderTrack bg={ColorPalette.thirdColor}>\n                                <RangeSliderFilledTrack bg={ColorPalette.thirdColor} />\n                            </RangeSliderTrack>\n                            <RangeSliderThumb boxSize={6} index={0} />\n                            <RangeSliderThumb boxSize={6} index={1} />\n                        </RangeSlider>\n                    </div>\n\n\n\n                    <HStack>\n                    <RadioGroup onChange={(e)=>onChangeInterval(e)} value={intervalUnit}>\n                        <Stack direction='row'>\n                            {radioOptions.map(i=>{\n                                return (<Radio value={i.value}>{i.label}</Radio>)\n                            })}\n\n                        </Stack>\n                    </RadioGroup>\n                    <MultipleSelection title={\"Chart Type\"} selectionHandler={chartSelectionHandler} style={{buttonColor:ColorPalette.thirdColor}} buttons={[{value:CHART_TYPES_ENUM.LINE, label:'Line chart'},{value:CHART_TYPES_ENUM.CANDLESTICK, label:'Candle chart'}]}/>\n                    <ExportIcon/>\n                    </HStack>\n\n\n\n\n\n                </HStack>\n\n\n\n\n\n\n            </div>\n\n\n        </div>\n    );\n\n}\n\n\nexport default TokenView;","\n\nexport const dateFromTimeStamp = (timestamp : number) => {\n    const date = new Date(timestamp * 1000)\n    const month = parseInt(date.getMonth().toString()) + 1;\n    return date.getDate() + '-' + month + '-' + date.getFullYear()\n}","import {getTokenPrice} from \"./tokenService\";\nimport Moralis from \"moralis\";\n\n\n\n\n\nexport const getTopGainers = async () => {\n    const TokenPrice = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TokenPrice);\n    query.select(\"pctPriceChange24Hr\", \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"logoUrl\", \"address\");\n    query.descending(\"pctPriceChange24Hr\");\n    const results = await query.find();\n    const gainers = results.filter((r)=>r.get(\"symbol\") != 'SUSHI.e' && r.get(\"symbol\") != 'SNOB' && r.get(\"symbol\") != 'ANY').map((r)=>{\n        return {pctChange: r.get(\"pctPriceChange24Hr\"), symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\"), address: r.get(\"address\")}\n    })\n    return gainers.slice(0,5).filter((r)=>r.pctChange>0);\n}\n\n\n\nexport const getTopLosers = async () => {\n    const TokenPrice = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TokenPrice);\n    query.select(\"pctPriceChange24Hr\", \"id\", \"timeStamp\",\"exchange\", \"symbol\", \"logoUrl\", \"address\");\n    query.ascending(\"pctPriceChange24Hr\");\n    const results = await query.find();\n    const gainers = results.filter((r)=>r.get(\"symbol\") != 'SUSHI.e' && r.get(\"symbol\") != 'SNOB' && r.get(\"symbol\") != 'ANY').map((r)=>{\n        return {pctChange: r.get(\"pctPriceChange24Hr\"), symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\"), address: r.get(\"address\")}\n    })\n    return gainers.slice(0,5).filter((r)=>r.pctChange<0);;\n}\n\n\nexport const getTopMCap = async () => {\n    const TokenPrice = Moralis.Object.extend(\"TokenDetails\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"currentMarketCap\", \"id\", \"symbol\", \"logoUrl\", \"address\");\n    query.descending(\"currentMarketCap\");\n    const results = await query.find();\n    const gainers = results.filter((r)=>r.get(\"symbol\") != 'SUSHI.e' && r.get(\"symbol\") != 'SNOB' && r.get(\"symbol\") != 'ANY').map((r)=>{\n        return {marketCap: r.get(\"currentMarketCap\"), symbol: r.get(\"symbol\"), logoUrl: r.get(\"logoUrl\"), address: r.get(\"address\")}\n    })\n    const top5 = gainers.slice(0,5);\n\n    const result = top5.map((t:any)=> {\n        return{'marketCap':(t.marketCap/(10**9)).toFixed(3), symbol: t.symbol, logoUrl: t.logoUrl, address: t.address\n    }\n    });\n    return result;\n}\n\n\nexport const get24HourPercentageChange =  async (address:string | undefined) => {\n\n    const TokenPrice = Moralis.Object.extend(\"Token1Day\")\n    const query = new Moralis.Query(TokenPrice);\n\n    query.select(\"createdAt\",\"timeStamp\",\"exchange\", \"symbol\", \"pctChange\", \"address\");\n\n    query.equalTo(\"address\", address);\n    query.descending(\"timeStamp\");\n    query.limit(5000);\n    const result = await query.find();\n    console.log(\"Result has timestamp: \", result[0]?.get(\"timeStamp\"));\n    return result[0]?.get(\"pctChange\").toFixed(2);\n\n}","import {VStack} from \"@chakra-ui/react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport React from \"react\";\n\n\nconst ExportIcon = (props: any) => {\n\n    return ( <VStack style={{justifyContent:'center'}}>\n        <FontAwesomeIcon icon={faFileDownload} size=\"lg\" style={{float:'right', color:ColorPalette.highlight}}/>\n        <span style={{fontSize:'0.6em'}}>Export data</span>\n    </VStack>)\n\n}\n\n\nexport default ExportIcon;","export default __webpack_public_path__ + \"static/media/logo.29996366.png\";","import React, {useEffect, useState} from \"react\";\nimport logo from \"../../images/logo.png\";\n\n\nconst AvalyticsSpinner = (props : any) => {\n\n    const [count, setCount] = useState(0);\n\n    useEffect(()=>{\n        const intervalId = setInterval(() => {\n            setCount((prevCount: number) => prevCount + 30);\n        }, 100);\n        return () => clearInterval(intervalId);\n    },[])\n\n\n    useEffect(()=>{\n        const logo = document.getElementById('logo');\n        if(logo) {\n                logo.style.transform       = 'rotate('+count+'deg)';\n                logo.style.transition= \"all 0.5s ease-in-out\";\n            }\n        },[count])\n\n\n\n    return (\n        <div>\n            <div id=\"logo\" style={{margin: 'auto', position:'relative', top:'50%', ...props.style}}>\n                <img  style={{width:props.style.width, height:props.style.width }} src={logo}/>\n            </div>\n\n        </div>\n    )\n\n\n}\n\nexport default AvalyticsSpinner;","import React, {useEffect, useState} from 'react';\nimport {getTokenList, getTokenPrice} from \"../../services/tokenService\";\nimport {background, Table, Tbody, Td, Th, Thead, Tr} from \"@chakra-ui/react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Title from \"./Title\";\nimport {ColorPalette} from \"../styles/color_palette\";\n\nfunction List(props: any)  {\n\n    const [entityList, setEntityList] = useState<any>(0)\n\n    useEffect (()=> {\n        props.getter()\n            .then((entities : any)=>{\n                console.log(\"Entities: \", entities);\n                setEntityList(entities)\n            });\n    },[])\n\n\n    return (\n        <div>\n            {props.title && (<Title title={props.title}/>)}\n            {entityList.length>0 &&\n            <EntityList tableStyle={props.tableStyle} entityList={entityList} entityProps={props.entityProps} noHead={props.noHead}/>\n            }\n        </div>\n    );\n}\n\n\nfunction EntityList(props: any) {\n\n\n    const navigate = useNavigate();\n\n    const [selected, setSelected] = useState<number | null>(null);\n\n    const handleHover = (e: any, idx: number) => {\n        setSelected(idx);\n    }\n\n\n    return(<Table style={{...props.tableStyle}} variant='simple'>\n        {!props.noHead && (\n            <Thead>\n                <Tr>\n                    {props.entityProps.filter((ep:any)=>!ep.dontDisplay).map((ep:any, idx:number)=> {\n                        return(<Th key={idx}>{ep.name}</Th>)\n                    })}\n                </Tr>\n            </Thead>\n        )}\n        <Tbody>\n            {props.entityList.map((entity: any, idx: number)=> {\n                return(<Tr key={idx} style={selected==idx?{backgroundColor:ColorPalette.highlight, borderRadius:\"10px\", cursor:'pointer'}:{}}\n                           onMouseEnter={(e)=> handleHover(e, idx)} onMouseLeave={()=> setSelected(null)}\n                           onClick={()=>navigate(`/token/${entity.address}`)}>\n                    {/*TODO Need to fix ^^^^^ this to be generic*/}\n\n\n                    {props.entityProps.filter((ep:any)=>!ep.dontDisplay).map((ep:any,i:number)=> {\n                        return(<Th key={i}>{ep.type=='img'?<img style={{width:30, height:30}} src={entity[ep.value]}/>:ep.postProcess?ep.postProcess(entity[ep.value]):entity[ep.value]}</Th>)\n                    })}\n                </Tr>)\n            })}\n        </Tbody>\n\n    </Table>)\n}\n\n\nexport default List;","import List from \"../genericComponents/List\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {getTopGainers} from \"../../services/dashboardService\";\n\n\nexport function Gainers(props:any) {\n// ,borderWidth:1, borderStyle:'solid',borderColor:'grey', borderRadius:20\n    return(<div style={{...props.style}}>\n        <div style={{width:'100%', backgroundColor:ColorPalette.secondaryColor}}>\n        {/*<h3 style={{margin:10}}>Gainers</h3>*/}\n        </div>\n            <List title=\"Gainers (daily price)\" getter={getTopGainers} entityProps={[{name:\"\", value:'logoUrl', type:'img'},{name:\"Symbol\",value:\"symbol\"},{name:\"% Change (24h)\", value: \"pctChange\", postProcess:(a:any)=>(a*100).toFixed(2)+'%'}]}/>\n\n\n    </div>)\n\n}","import {ColorPalette} from \"../styles/color_palette\";\nimport List from \"../genericComponents/List\";\nimport {getTopGainers, getTopLosers} from \"../../services/dashboardService\";\n\nexport function Losers(props:any) {\n\n    return(<div style={{...props.style}}>\n\n    <List title=\"Losers (daily price)\" getter={getTopLosers} entityProps={[{name:\"\", value:'logoUrl', type:'img'},{name:\"Symbol\",value:\"symbol\"},{name:\"% Change (24h)\", value: \"pctChange\", postProcess:(a:any)=>(a*100).toFixed(2)+'%'}]}/>\n\n\n    </div>)\n\n}","\nimport React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport './pieChartStyles.css';\n\n\n\nconst PieChart = ({data}:any)=> {\n\n\n    useEffect(()=>{\n        buildPieChart2();\n\n    },[data])\n\n    const buildPieChart2 = () => {\n        var width = 250,\n            height = 250,\n            radius = Math.min(width, height) / 2;\n        var divNode = d3.select(\"body\").node();\n        var outerRadius = radius - 10,\n            innerRadius = radius - 80;\n\n        var color : any = d3.scaleOrdinal().range([ColorPalette.mainColor, ColorPalette.red, ColorPalette.secondaryColor, ColorPalette.highlight, ColorPalette.green]);//Constructs a new ordinal scale with an empty domain and the specified range. If a range is not specified, it defaults to the empty array; an ordinal scale always returns undefined until a non-empty range is defined.\n\n\n        //add svg with margin !important\n        //this is svg is actually group\n        var svg = d3.select(\"#diagram\").append(\"svg\")\n            .attr(\"width\",width)\n            .attr(\"height\",height)\n            .append(\"g\")  //add group to leave margin for axis\n            .attr(\"transform\",\"translate(\"+width/2+\",\"+height/2+\")\");\n\n\n        //the code above should be same\n        if(data === undefined)\n            return;\n        var dataset : any = data;\n\n        // //arc to draw the chart. pie to generate the data for chart from the input\n        // var donutWidth = 40;\n        // var arc : any = d3.arc().outerRadius(radius).innerRadius(radius-donutWidth);//to generate the chart\n        // var pie = d3.pie()\n        //     .value(function(d:any){return d.percentage;});//sort the value to show from the 12 0'clcok\n        //\n\n        var arc:any = d3.arc()\n            .outerRadius(radius - 10)\n            .innerRadius(radius - 60);\n\n        console.log(\"Arc: \", arc);\n\n        var pie = d3.pie()\n            .sort(null)\n            .value(function(d:any) { return d.percentage; });\n\n        d3.select(\"#chart\").append(\"div\")\n            .attr(\"id\",\"mainPie\")\n            .attr(\"class\",\"pieBox\");\n\n        var svg = d3.select(\"#mainPie\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\n\n        var defs = svg.append(\"defs\");\n        var filter = defs.append(\"filter\")\n            .attr(\"id\", \"drop-shadow\")\n            .attr(\"height\",\"130%\");\n\n        filter.append(\"feGaussianBlur\")\n            .attr(\"in\",\"SourceAlpha\")\n            .attr(\"stdDeviation\", 3)\n            .attr(\"result\", \"blur\");\n\n        filter.append(\"feOffset\")\n            .attr(\"in\", \"blur\")\n            .attr(\"dx\", 3)\n            .attr(\"dy\", 3)\n            .attr(\"result\", \"offsetBlur\");\n        var feMerge = filter.append(\"feMerge\");\n\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"offsetBlur\")\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"SourceGraphic\");\n\n        var g = svg.selectAll(\".arc\")\n            .data(pie(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"arc\");\n\n\n        // Handling hovers\n        var paths = g.append(\"path\")\n            .attr(\"d\",arc)\n            // @ts-ignore\n            .style(\"fill\",function(d:any){return color(d.data);})\n            .on(\"mouseover\", function(d:any, i:any) {\n                console.log(\"Data is: \", d);\n                console.log(\"Index is: \", i);\n                d3.select(this)\n                    .attr(\"stroke\",\"#fff\")\n                    .attr(\"stroke-width\",\"2px\")\n                    .style(\"filter\", \"url(#drop-shadow)\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('elastic')\n                    .attr('transform',function(d:any){\n                        var dist = 1;\n                        d.midAngle = ((d.endAngle - d.startAngle)/2) + d.startAngle;\n                        var x = Math.sin(d.midAngle) * dist;\n                        var y = Math.cos(d.midAngle) * dist;\n                        return 'translate(' + x + ',' + y + ')';\n                    });\n\n\n                svg.append('circle')\n                    .attr('id','circle')\n                    .attr('fill','#fff')\n                    .attr('r','62')\n\n                svg.append('text')\n                    .attr('id', 'circle-text')\n                    .style('fill', ColorPalette.gray)\n                    .style(\"font-size\", \"14px\")\n                    .style(\"font-weight\", \"bold\")\n                    .attr(\"transform\", \"translate(0,\" + 30 + \")\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .html(`${i.data.symbol} <br/> ${i.data.percentage}%`);\n\n\n                const logoWidth = 60;\n\n\n                svg.append(\"svg:image\")\n                    .attr('id','pie-logo')\n                    .attr('width', logoWidth)\n                    .attr('height', logoWidth)\n\n                    .attr(\"xlink:href\", i.data.logoUrl)\n                    .attr(\"transform\", \"translate(\"+  -logoWidth/2 +\",\" + (-logoWidth+10) + \")\")\n\n\n\n\n            })\n            .on(\"mouseout\", function(d){\n                d3.select(this)\n                    .attr(\"stroke\",\"none\")\n                    .style(\"filter\",\"none\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('bounce')\n                    .attr('transform','translate(0,0)');\n\n                // d3.select(\"#mainTooltip\").style(\"display\", 'none');\n                d3.select('circle').remove();\n                d3.select('#circle-text').remove();\n                d3.select('#pie-logo').remove();\n\n                // d3.select('#circle').style(\"display\",\"hidden\");\n\n            });\n\n\n        //add legend to the donut chart\n\n        // var legendSize = 15;\n        // var legendSpacing = 2;\n        // var legend = svg.selectAll(\".legend\")\n        //     .data(color.domain())\n        //     .enter()\n        //     .append(\"g\")\n        //     .attr(\"transform\",function(d,i){\n        //         var legendH = color.domain().length*(legendSize+legendSpacing);//total height of legends\n        //         var legendY = i*(legendSize+legendSpacing) - legendH/2;//\n        //         var legendX = -legendSize;\n        //         return \"translate(\"+legendX+\",\"+legendY+\")\";\n        //     });\n        // legend.append(\"rect\")\n        //     .attr(\"width\",legendSize)\n        //     .attr(\"height\",legendSize)\n        //     .attr(\"fill\",color)\n        //     .attr(\"stroke\",color);\n        // legend.append(\"text\")\n        //     .text(function(d:any){return d[0];})\n        //     .attr('x', legendSize + legendSpacing)\n        //     .attr('y', legendSize - legendSpacing);\n\n        //add  tooltip to paths\n        var tooltip = d3.select(\"#diagram\").append(\"div\").attr(\"class\",\"tooltip\");\n        tooltip.append(\"div\").attr(\"class\",\"name\");\n        tooltip.append(\"div\").attr(\"class\",\"count\");\n        tooltip.append(\"div\").attr(\"class\",\"percentage\");\n\n\n        // svg.on(\"mouseover\",function(d:any){\n        //     var total = d3.sum(dataset,function(dd:any){return dd[1];});\n        //     console.log(\"d is: \", d);\n        //     var percent = Math.round(1000 * d.data[1] / total) / 10;\n        //     tooltip.select(\".name\").html(d.data[0]);\n        //     tooltip.select(\".count\").html(d.data[1]);\n        //     tooltip.select(\".percentage\").html(percent + '%');\n        //     tooltip.style(\"display\", \"block\");\n        // });\n        // paths.on(\"mouseout\",function(d){\n        //     tooltip.style(\"display\", \"none\");\n        // });\n\n\n    }\n\n\n    const buildPieChart = () => {\n        var data :any = [\n            {\n                \"str_lab\": \"Jon\",\n                \"num\": 100\n            },\n            {\n                \"str_lab\": \"Shaggydog\",\n                \"num\": 44\n            },\n            {\n                \"str_lab\": \"Ghost\",\n                \"num\": 215\n            },\n            {\n                \"str_lab\": \"Nymeria\",\n                \"num\": 385\n            },\n            {\n                \"str_lab\": \"Summer\",\n                \"num\": 141\n            },\n            {\n                \"str_lab\": \"Grey wind\",\n                \"num\": 340\n            }\n        ];\n\n        var width = 300,\n            height = 300,\n            radius = Math.min(width, height) / 2;\n        var divNode = d3.select(\"body\").node();\n        var outerRadius = radius - 10,\n            innerRadius = radius - 80;\n        var color = d3.scaleOrdinal()\n            .range([\"#2E7D32\",\"#53856D\",\"#FF7043\", \"#1FDA9A\", \"#28ABE3\", \"#DF514C\", \"#DAE9F7\"]);\n\n        var arc:any = d3.arc()\n            .outerRadius(radius - 10)\n            .innerRadius(radius - 80);\n\n        console.log(\"Arc: \", arc);\n\n        var pie = d3.pie()\n            .sort(null)\n            .value(function(d:any) { return d.num; });\n\n        d3.select(\"#chart\").append(\"div\")\n            .attr(\"id\",\"mainPie\")\n            .attr(\"class\",\"pieBox\");\n\n        var svg = d3.select(\"#mainPie\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        var defs = svg.append(\"defs\");\n        var filter = defs.append(\"filter\")\n            .attr(\"id\", \"drop-shadow\")\n            .attr(\"height\",\"130%\");\n\n        filter.append(\"feGaussianBlur\")\n            .attr(\"in\",\"SourceAlpha\")\n            .attr(\"stdDeviation\", 3)\n            .attr(\"result\", \"blur\");\n\n        filter.append(\"feOffset\")\n            .attr(\"in\", \"blur\")\n            .attr(\"dx\", 3)\n            .attr(\"dy\", 3)\n            .attr(\"result\", \"offsetBlur\");\n        var feMerge = filter.append(\"feMerge\");\n\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"offsetBlur\")\n        feMerge.append(\"feMergeNode\")\n            .attr(\"in\", \"SourceGraphic\");\n\n        var g = svg.selectAll(\".arc\")\n            .data(pie(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"arc\");\n\n        g.append(\"path\")\n            .attr(\"d\", arc)\n            .style(\"fill\", \"blue\")\n            .on(\"mousemove\", function(d) {\n                d3.select(this)\n                    .attr(\"stroke\",\"#fff\")\n                    .attr(\"stroke-width\",\"2px\")\n                    .style(\"filter\", \"url(#drop-shadow)\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('elastic')\n                    .attr('transform',function(d:any){\n                        var dist = 1;\n                        d.midAngle = ((d.endAngle - d.startAngle)/2) + d.startAngle;\n                        var x = Math.sin(d.midAngle) * dist;\n                        var y = Math.cos(d.midAngle) * dist;\n                        return 'translate(' + x + ',' + y + ')';\n                    });\n                var mousePos = d3.pointer(divNode);\n                d3.select(\"#mainTooltip\")\n                    .style(\"left\", mousePos[0] - 40 + \"px\")\n                    .style(\"top\", mousePos[1] - 70 + \"px\")\n                    .select(\"#value\")\n                    .attr(\"text-anchor\", \"middle\")\n                    // .html(d.data.str_lab + \"<br />\" + d.data.num);\n                console.log(\"d is: \", d);\n                d3.select(\"#mainTooltip\").classed(\"hidden\", false);\n            })\n            .on(\"mouseout\", function(d){\n                d3.select(this)\n                    .attr(\"stroke\",\"none\")\n                    .style(\"filter\",\"none\");\n                d3.select(this)\n                    .transition()\n                    .duration(500)\n                    // .ease('bounce')\n                    .attr('transform','translate(0,0)');\n\n                d3.select(\"#mainTooltip\").classed(\"hidden\", true);\n            });\n        var centerSvg = svg.append('circle')\n            .attr('fill','#42A5F5')\n            .attr('r','62');\n\n        svg.append('text')\n            .style('fill', '#F2F2F2')\n            .style(\"font-size\", \"64px\")\n            .style(\"font-weight\", \"bold\")\n            .attr(\"transform\", \"translate(0,\" + 20 + \")\")\n            .attr(\"text-anchor\", \"middle\")\n            .html(data.length.toString());\n\n\n    }\n\n    return(<>\n        <div id=\"chart\"></div>\n        <div id=\"mainTooltip\" className=\"hidden\">\n            <p><span id=\"value\"></span></p>\n        </div>\n\n\n    </>)\n\n}\n\nexport default PieChart;","import List from \"../genericComponents/List\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {getTopMCap} from \"../../services/dashboardService\";\nimport {SetStateAction, useEffect, useState} from \"react\";\nimport PieChart from \"../charts/pieChart/PieChart\";\nimport {Grid, GridItem, HStack} from \"@chakra-ui/react\";\nimport Title from \"../genericComponents/Title\";\nimport BarRaceChart from \"../charts/barRaceChart/BarRaceChart\";\n\n\nexport function MarketCap(props: any) {\n\n    const [pieChartData, setPieChartData] = useState<any[]>([]);\n\n    useEffect(() => {\n\n        getTopMCap()\n            .then((allTokens) => {\n                const percentages: any = [];\n                console.log(\"All tokens: \", allTokens);\n                const totalMCap = allTokens.map(i=>parseFloat(i.marketCap)).reduce((a,b : any) => a + b,0)\n                console.log(\"Total marketcap = \", totalMCap);\n                allTokens.map((token)=>{\n                    percentages.push({\"symbol\": token.symbol, \"percentage\":(parseFloat(token.marketCap)/totalMCap*100).toFixed(0), logoUrl: token.logoUrl})\n                })\n                setPieChartData(percentages);\n            })\n    },[])\n\n\n    return(<div style={{...props.style}}>\n        <Title title=\"Market Cap (Top 5)\"/>\n\n            <HStack spacing={\"5%\"}>\n                {pieChartData.length > 0 && (<PieChart data={pieChartData}/>)}\n                <List getter={getTopMCap} tableStyle={{width:350}}  entityProps={[{name:\"\", value:'logoUrl', type:'img'},{name:\"\", value:'address', dontDisplay: true},{name:\"Symbol\",value:\"symbol\"},{name:\"M Cap (B$)\", value: \"marketCap\"}]}/>\n            </HStack>\n    </div>)\n\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {transition} from \"d3-transition\";\nimport {select, selectAll} from \"d3-selection\";\nimport {axisBottom, axisLeft} from \"d3\";\nimport {getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport {ColorPalette} from \"../../styles/color_palette\";\n\n\nconst MiniChart = ({data, width, height,color}:any) => {\n\n    const svgRef = useRef<any>();\n\n    const setupData = (svg:any, line:any, options: any) => {\n        // Setup data\n        svg\n            .append('path')\n            .datum(data.map((r:any)=>r.price))\n            .attr('id', 'line')\n            .attr('stroke', options.strokeColor?options.strokeColor:'black')\n            .attr('stroke-width', 2)\n            .attr('fill', 'none')\n            .attr('d', line);\n    }\n\n    const setupLinearGraph = () => {\n\n        // Setup svg\n        if(data == undefined) {\n            return;\n        }\n\n        const svg = d3.select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height)\n            .style('background', 'white')\n            .style('margin-left', '50')\n            .style('overflow', 'visible');\n\n        // Setup scaling\n        const xScale: any = d3.scaleLinear()\n            .domain([0, data.length]) // x ticks\n            .range([0, width]) // x width\n\n\n\n        const yMin = Math.round(data.map((r:any)=>r.price).reduce((a:number,b:number) => Math.min(a,b)));\n        const yMax = Math.ceil(data.map((r:any)=>r.price).reduce((a:number,b: number)=> Math.max(a,b)));\n        console.log(\"Y max is: \", yMax);\n        console.log(\"Y min is: \", yMin);\n        const yScale: any = d3.scaleLinear()\n            .domain([yMin, yMax])\n            .range([height, 0])\n\n        // Setting up line\n        const line = d3.line()\n            .x((d, i)=> xScale(i))\n            .y(yScale)\n            .curve(d3.curveLinear)\n\n\n        const dataOptions = {strokeColor: color}\n        setupData(svg,line, dataOptions);\n        return line;\n    }\n\n\n    useEffect(()=>{\n        console.log(\"COLOR is: \", color);\n\n                setupLinearGraph();\n    },[])\n\n\n    return (\n            <svg style={{zIndex:-1}} ref={svgRef}>\n            </svg>\n\n    )\n\n};\n\nexport default MiniChart;","import MiniChart from \"./MiniChart\";\nimport {useEffect, useState} from \"react\";\nimport {getToken, getTokenByAddress, getTokenPriceHistoryDB} from \"../../../services/tokenService\";\nimport {Box, HStack} from \"@chakra-ui/react\";\nimport AvadaSpinner from \"../../genericComponents/AvadaSpinner\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {useNavigate} from \"react-router-dom\";\nimport {get24HourPercentageChange} from \"../../../services/dashboardService\";\nimport AvalyticsSpinner from \"../../genericComponents/AvalyticsSpinner\";\n\n\nexport default function     MiniChartContainer ({address, width, height}:any) {\n\n    const navigate = useNavigate();\n\n\n    const [data, setData] = useState<any>(null);\n\n    const [tokenInfo, setTokenInfo] = useState<any>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const [borderColor, setBorderColor] = useState('gray.200')\n\n    const [pctChange, setPctChange] = useState(0);\n\n    const [currentPrice, setCurrentPrice] = useState(0);\n\n    const [plotColor, setPlotColor] = useState(\"\");\n\n    useEffect(()=>{\n        setIsLoading(true);\n\n\n        getTokenByAddress(address)\n            .then((t:any)=>setTokenInfo(t));\n\n        getTokenPriceHistoryDB(address, \"Token1Hour\", 1)\n            .then((d)=> {\n                setData(d.slice(d.length -24, d.length -1));\n                setIsLoading(false);\n            })\n\n    },[])\n\n\n    useEffect(()=>{\n        if(data) {\n            getToken(address)\n                .then((t: any)=>{\n                    console.log(\"T is: \", t);\n                    setPctChange(t.pctChange);\n                    setCurrentPrice(t.price);\n                })\n        }\n    },[data])\n\n    useEffect(()=>{\n        console.log(\"Pctgchange is: \", pctChange);\n        console.log(\"Setting color: \", pctChange>0?ColorPalette.green:ColorPalette.red);\n        setPlotColor(pctChange>0?ColorPalette.green:ColorPalette.red)\n\n\n    },[pctChange])\n\n\n\n    return (<div onMouseEnter={()=>setBorderColor(pctChange > 0 ? ColorPalette.green : ColorPalette.red)} onMouseLeave={()=>setBorderColor('gray.200')}>\n\n            {isLoading && (<Box border=\"1px\" borderColor={borderColor}  borderRadius={30} padding={5} >\n                <AvalyticsSpinner style={{width:40, height:40}}/>\n            </Box>)}\n\n        {(data && plotColor) && (\n            <Box border=\"2px\" borderColor={borderColor} borderRadius={30} padding={5} onClick={()=>navigate(`/token/${address}`)}>\n                {tokenInfo && (<><HStack>\n                        <img style={{width:30, height:30}} src={tokenInfo.logoUrl}/>\n                        <span>{tokenInfo.symbol}</span>\n                        {pctChange!==0 && (<span style={{marginRight: 30, color: (pctChange < 0)? ColorPalette.red: ColorPalette.green}}>{pctChange + '% (24h)'}</span>)}\n                    </HStack>\n                        { <span style={{margin:40}}>{'$ ' + currentPrice}</span>}\n\n                    </>\n                )}\n                {(data.length >0 && pctChange) && <div style={{width:width, height:height}}><MiniChart data={data}  width={width} height={height} color={pctChange > 0 ? ColorPalette.green : ColorPalette.red}/></div>}\n\n\n            </Box>\n        )}\n        </div>\n    )\n\n}","import {Gainers} from \"./Gainers\";\nimport Title from \"../genericComponents/Title\";\nimport {Losers} from \"./Losers\";\nimport {MarketCap} from \"./MarketCap\";\nimport {Box, Grid, HStack, VStack} from \"@chakra-ui/react\";\nimport MiniChartContainer from \"../charts/miniChart/MiniChartContainer\";\n\n\n\nexport function Dashboard(props:any) {\n\n\n    return(<div style={{...props.style}}>\n        <Title title=\"Dashboard for Avalanche C-Chain\" extraInfo={\"Summary dashboard for Avalanche C-chain\"}/>\n\n        <HStack style={{marginTop:40}}  spacing={10}>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0x50b7545627a5162f82a992c33b87adc75187b218\"   width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab\"   width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7\"  width={300} height={150}/>\n            </div>\n            <div style={{width:350,height:250}}>\n                <MiniChartContainer address=\"0xb54f16fb19478766a268f172c9480f8da1a7c9c3\"  width={300} height={150}/>\n            </div>\n        </HStack>\n\n        <HStack style={{marginTop:50}}>\n            <MarketCap style={{alignItems:'center', marginRight:50}}/>\n            <Gainers style={{width:400,  alignItems:'center', marginLeft:50}}/>\n            <Losers style={{width:400,  alignItems:'center', margin:20}}/>\n        </HStack>\n    </div>)\n}","import {Flex, Icon, Link, Menu, MenuButton, MenuList, Text} from \"@chakra-ui/react\";\nimport {Link as ReactLink} from 'react-router-dom';\nimport dashboard from \"../../images/dashboard.png\";\nimport {NavHoverBox} from \"./NavHoverBox\";\nimport React, {useState} from \"react\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {deletePopupMessage, renderPopupMessage} from \"./PopupMessage\";\nimport  { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport function NavItem({navSize, icon, title, route, active, style,setActiveMenu, idx, status}:any) {\n\n    const [hoverOject, setHoverObject] = useState<any>(null);\n    const [popupTimerOn, setPopupTimerOn] = useState<boolean>(true);\n    const [popupActivated, setPopupActivated] = useState(false);\n    const [showInfo, setShowInfo] = useState<boolean>(false);\n\n\n\n    // @ts-ignore\n    // @ts-ignore\n    return(\n        <Flex\n            mt={30}\n            flexDir=\"column\"\n            w=\"100%\"\n            alignItems={navSize==\"small\"? \"center\" : \"flex-start\"}\n            backgroundColor={style.backgroundColor}\n            borderColor={style.borderColor}\n            borderWidth={style.borderColor?1:0}\n            borderRadius={8}\n            opacity={status =='active'? 1: 0.2}\n        >\n            <Menu placement =\"right\">\n                <Link\n                    as={ReactLink}\n                    to={route}\n                    p={3}\n                    borderRadius={8}\n                    _hover={status == 'active' ? {backgroundColor:ColorPalette.highlight}:{backgroundColor:ColorPalette.mainColor}}\n                    w={navSize == 'large'?'100%':''}\n                    onClick={()=>{setActiveMenu(idx)}}\n\n                >\n\n                    <MenuButton w=\"100%\" ml={3}>\n                        <Flex style={{alignItems:'center'}}>\n                            {/*<Icon as={icon} fontSize=\"xl\" color={active ? '#FFB6C1' : \"gray.500\"}/>*/}\n                            <img style={{width:40, height:40}} src={icon}/>\n                            <Text color={ColorPalette.navFontColor} fontWeight={style.fontWeight} fontSize='xl' ml={5} display={navSize=='small'?'none':'flex'}>{title}</Text>\n                        </Flex>\n                    </MenuButton>\n\n\n                </Link>\n\n            </Menu>\n\n\n\n        </Flex>\n    )\n\n\n}","export default __webpack_public_path__ + \"static/media/tokens.01297ec6.png\";","export default __webpack_public_path__ + \"static/media/coins.985572b0.png\";","export default __webpack_public_path__ + \"static/media/pools.ebbbad37.png\";","export default __webpack_public_path__ + \"static/media/charts.4404929f.png\";","export default __webpack_public_path__ + \"static/media/whales.26c92c8d.png\";","export default __webpack_public_path__ + \"static/media/mempools.6a0f1fd6.png\";","export default __webpack_public_path__ + \"static/media/bridges.58d7d2cb.png\";","export default __webpack_public_path__ + \"static/media/logo_2.fe60bd52.png\";","import {Avatar, Divider, Flex, Grid, GridItem, Heading, HStack, IconButton, Text} from \"@chakra-ui/react\";\nimport {FiMenu} from \"react-icons/all\";\nimport React, {useEffect, useState} from \"react\";\nimport {NavItem} from \"./NavItem\";\nimport dashboard from '../../images/dashboard.png';\nimport tokens from '../../images/tokens.png';\nimport coins from '../../images/coins.png';\nimport pools from '../../images/pools.png';\nimport charts from '../../images/charts.png';\nimport whales from '../../images/whales.png';\nimport mempools from '../../images/mempools.png';\nimport bridges from '../../images/bridges.png';\nimport logo_1 from '../../images/logo_1.png';\nimport logo_2 from '../../images/logo_2.png';\nimport logo from '../../images/logo.png';\nimport {ColorPalette} from \"../styles/color_palette\";\n\n\nconst Menus = [\n    {title:\"Dashboard\" ,route:\"/\", icon:charts, status: 'active'},\n    {title:\"Tokens\" ,route:\"/tokens\", icon:tokens, status: 'active'},\n    {title:\"Multiple Tokens\" ,route:\"/multiTokens\", icon:coins, status: 'active'},\n    {title:\"Pools\" ,route:\"/pools\", icon:pools, status: 'active'},\n    {title:\"Whales\", route:\"/whales\", icon:whales, status: 'inactive'},\n    {title:\"MemPools\", route:\"/mempools\", icon:mempools, status: 'inactive'},\n    {title:\"Bridges\", route:\"/bridges\", icon:bridges, status: 'inactive'},\n]\n\n\nexport function Sidebar({navSize, setNavSize}:any) {\n\n    const [activeMenu, setActiveMenu] = useState(0);\n\n\n    useEffect(()=>{\n        console.log(\"Active menu is: \", activeMenu);\n    }, [activeMenu])\n\n\n    return(\n        <Flex\n            // pos=\"absolute\"\n            display=\"flex\"\n            h=\"100%\"\n            marginTop=\"0\"\n            // boxShadow=\"0 4px 12px 0 rgba(0,0,0,0.05)\"\n            borderRadius={navSize=='small'?\"0px 5px 5px 0px\":\"0px 5px 5px 0px\"}\n            backgroundColor={ColorPalette.mainColor}\n\n            w={navSize=='small'?\"100px\":\"250px\"}\n            flexDir=\"column\"\n            justifyContent=\"space-between\"\n            zIndex={999}\n        >\n\n            <Flex\n                // p=\"5%\"\n                flexDir=\"column\"\n                alignItems=\"flex-start\"\n                as=\"nav\"\n            >\n              <HStack spacing='8px' margin={5}>\n                  {/*<Text display={ navSize=='large'?'flex':'none'} fontWeight={'bold'} fontSize='2xl' color={ColorPalette.navFontColor} ml={10} mt={5}>AVALYTICS</Text>*/}\n                  <div style={{paddingTop:20}} >\n                      <img width={60} height={60} src={logo}/>\n                  </div>\n                  <div style={{width:220, height:60, paddingTop:20, paddingRight:20}} >\n                    <img src={logo_2}/>\n                  </div>\n              </HStack>\n\n                {Menus.map((m:any, idx: number) => {\n                    return(<NavItem idx={idx} style={activeMenu==idx?{fontWeight:'900', backgroundColor:ColorPalette.secondaryColor}:{}}\n                                    setActiveMenu={setActiveMenu}\n                                    navSize={navSize}\n                                    title={m.title}\n                                    route={m.route}\n                                    icon={m.icon}\n\n                                    status = {m.status}/>)\n                })}\n            </Flex>\n\n            <Flex\n                p=\"5%\"\n                flexDir=\"column\"\n                w=\"100%\"\n                alignItems=\"flex-start\"\n                mb={4}\n            >\n                <Divider display={navSize=='small'? \"none\":\"flex\"}/>\n                <Flex mt={4} align=\"center\">\n                    <Flex flexDir=\"column\" ml={4} display={navSize=='small'? \"none\":\"flex\"}>\n                        <Text color=\"gray\" cursor={'pointer'} onClick={()=>console.log(\"Team...\")}>Team</Text>\n                    </Flex>\n                </Flex>\n\n            </Flex>\n\n        </Flex>\n    )\n\n}","import React from 'react';\nimport './BarRaceChart.css';\n\nfunction BarRaceChart() {\n\n\treturn (\n\t\t<div className='barRaceChart'>\n\t\t<iframe id='iframeId' src='https://flo.uri.sh/visualisation/8380876/embed' title='Interactive or visual content' className='flourish-embed-iframe' frameBorder='0' scrolling='no' sandbox='allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation'></iframe>\n\t\t<div id='divId'>\n\t\t\t{/*<a id='aId' className='flourish-credit' href='https://public.flourish.studio/visualisation/8380876/?utm_source=embed&utm_campaign=visualisation/8380876' target='_top'>*/}\n\t\t\t{/*\t<img alt='Made with Flourish' src='https://public.flourish.studio/resources/made_with_flourish.svg' /> */}\n\t\t\t{/*</a>*/}\n\t\t</div>\n\t\t</div>\n\n\t)\n}\n\nexport default BarRaceChart;\n","import * as d3 from \"d3\";\nimport {useEffect, useState} from \"react\";\nimport './corr.css';\nimport {ColorPalette} from \"../../styles/color_palette\";\n\nconst CorrelationChartV2 = (props) => {\n\n\n    const {data, corrData} = props;\n\n\n    useEffect(()=>{\n\n        if(d3.selectAll(\"svg\")) {\n            d3.selectAll(\"svg\").remove();\n            d3.selectAll(\".tooltip\").remove();\n        }\n\n\n        buildCorrelationChart();\n    },[corrData])\n\n\n\n    const buildCorrelationChart = () => {\n\n            var data = [];\n            corrData.forEach(function(d) {\n                let x = Object.keys(d).find(key => d[key] === 1);\n                // delete d[x];\n                for (let prop in d) {\n                    var y = prop,\n                        value = d[prop];\n                    data.push({\n                        x: x,\n                        y: y,\n                        value: +value\n                    });\n                }\n            });\n\n            var margin = {\n                    top: 60,\n                    right: 100,\n                    bottom: 25,\n                    left: 50\n                },\n                width = 1000 - margin.left - margin.right,\n                height = 650 - margin.top - margin.bottom,\n                domain = Array.from(new Set(data.map(function (d) {\n                    return d.x\n                }))),\n                num = Math.sqrt(data.length),\n                color = d3.scaleLinear()\n                    .domain([-1, 0, 1])\n                    .range([ColorPalette.secondaryColor, ColorPalette.gray  ,ColorPalette.mainColor]);\n\n            var x = d3.scalePoint()\n                    .range([0, width])\n                    .domain(domain),\n\n                y = d3.scalePoint()\n                    .range([0, height])\n                    .domain(domain),\n                xSpace = x.range()[1] - x.range()[0],\n                ySpace = y.range()[1] - y.range()[0];\n            ySpace = y.range()[1] - y.range()[0];\n\n            var svg = d3.select(\"#corr2\")\n                .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right + 20)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"display\", \"flex\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var cor = svg.selectAll(\".cor\")\n                .data(data)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"cor\")\n                .attr(\"transform\", function(d) {\n                    return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\";\n                });\n\n            // it fits with v3\n            // cor.append(\"rect\")\n            //   .attr(\"width\", xSpace)\n            //   .attr(\"height\", ySpace)\n            //   .attr(\"x\", -xSpace / 2)\n            //   .attr(\"y\", -ySpace / 2)\n\n            //edited to fit with v4 update  2/5/18\n            cor.append(\"rect\")\n                .attr(\"width\", xSpace/10)\n                .attr(\"height\", ySpace/10)\n                .attr(\"x\", -xSpace / 20 )\n                .attr(\"y\", -ySpace / 20)\n\n            cor.filter(function(d){\n                var ypos = domain.indexOf(d.y);\n                var xpos = domain.indexOf(d.x);\n                for (var i = (ypos + 1); i < num; i++){\n                    if (i === xpos) return false;\n                }\n                return true;\n            })\n                .append(\"text\")\n                .attr(\"y\", 5)\n                .text(function(d) {\n                    if (d.x === d.y) {\n                        return d.x;\n                    } else {\n                        return d.value.toFixed(2);\n                    }\n                })\n                .style(\"fill\", function(d){\n                    if (d.value === 1) {\n                        return \"#000\";\n                    } else {\n                        return color(d.value);\n                    }\n                });\n\n            cor.filter(function(d){\n                var ypos = domain.indexOf(d.y);\n                var xpos = domain.indexOf(d.x);\n                for (var i = (ypos + 1); i < num; i++){\n                    if (i === xpos) return true;\n                }\n                return false;\n            })\n                .append(\"circle\")\n                .attr(\"r\", function(d){\n                    return (width  / (num * 3)) * (Math.abs(d.value) + 0.1);\n                })\n                .style(\"fill\", function(d){\n                    if (d.value === 1) {\n                        return \"#000\";\n                    } else {\n                        return color(d.value);\n                    }\n                });\n\n            var aS = d3.scaleLinear()\n                .range([-margin.top + 5, height + margin.bottom - 5])\n                .domain([1, -1]);\n\n            var yA = d3.axisRight()\n                .scale(aS)\n                .tickPadding(7);\n\n            var aG = svg.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .call(yA)\n                .attr(\"transform\", \"translate(\" + (width + 80) + \" ,0)\")\n\n            var iR = d3.range(-1, 1.01, 0.01);\n            var h = height / iR.length + 3;\n            iR.forEach(function(d){\n                aG.append('rect')\n                    .style('fill',color(d))\n                    .style('stroke-width', 0)\n                    .style('stoke', 'none')\n                    .attr('height', h)\n                    .attr('width', 10)\n                    .attr('x', 0)\n                    .attr('y', aS(d))\n            });\n\n\n\n\n    }\n\n    return (<div id=\"corr2\"></div>)\n\n}\n\nexport default CorrelationChartV2;","import {CorrelationChart} from \"./correlationChart/CorrelationChart\";\nimport React, {useEffect, useState} from \"react\";\nimport {getCorrelations} from \"../../services/tokenService\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport {Checkbox, HStack} from \"@chakra-ui/react\";\nimport CorrelationChartV2 from \"./correlationChart/CorrelationChartV2\";\n\n\nconst CorrelationChartWrapper = (props: any) => {\n\n    const {tokenList} = props;\n\n    const [data, setData] = useState([]);\n\n\n    const [activeTokens, setActiveTokens] = useState<any>([\"WBTC.e\", \"WETH.e\", \"WAVAX.e\", \"LINK.e\", \"TIME\", \"JOE\", \"AAVE.e\"]);\n\n\n    useEffect(() => {\n        getCorrelations(activeTokens)\n            .then((d: any) => {\n\n                setData(d);\n            })\n    }, [])\n\n    const handleCheckBoxChange = (e: any, idx: number) => {\n        const toAdd = e.target.checked;\n        if (toAdd) {\n            activeTokens.push(tokenList[idx].symbol);\n            getCorrelations(activeTokens)\n                .then((d: any) => {\n                    setData(d);\n                })\n            // setIsLoading(true);\n            // fetchPctChanges();\n        } else {\n            const idxToRemove = activeTokens.indexOf(tokenList[idx].symbol);\n            activeTokens.splice(idxToRemove, 1);\n            // const currentPrices = tokenPrices;\n            // setTokenPrices(currentPrices.filter((tp) => tp.symbol != tokenList[idx].symbol));\n            getCorrelations(activeTokens)\n                .then((d: any) => {\n                    setData(d);\n                })\n\n            // tokenPrices;\n        }\n    }\n\n\n    const checkActiveTokens = (t: any) => {\n        return activeTokens.includes(t.symbol)\n    }\n\n\n    return (<>{data.length && <div style={{width:'100%', display:'flex'}}>\n        <HStack spacing='20px' style={{height: '100%'}}>\n<div style={{marginRight:160}}>\n        <div style={{fontSize: '1.4em'}}>Tokens</div>\n        <div style={{\n            height: 600,\n\n            overflowY: 'scroll',\n            width: 300,\n            borderColor: ColorPalette.thirdColor,\n            borderWidth: 1,\n            borderRadius: 20,\n            padding: 20\n        }}>\n\n            <ul style={{listStyleType: 'none'}}>\n                {tokenList.map((t: any, idx: number) => <li style={{marginBottom: 5}}>\n                    <Checkbox size='lg' iconColor='red'\n                              style={{margin: 15}}\n                              colorScheme='red'\n                              defaultChecked={checkActiveTokens(t)}\n                              onChange={(e) => handleCheckBoxChange(e, idx)}>\n                        <HStack style={{marginLeft:20}}>\n                            <img width={30} src={t.logoUrl}/>\n                            <div>{t.symbol}</div>\n                        </HStack>\n                    </Checkbox></li>)}\n            </ul>\n            {/*<Checkbox style={{margin: 5}} defaultChecked={false}*/}\n            {/*          onChange={(e) => handleSelectAll(e)}>Select All</Checkbox>*/}\n\n\n        </div>\n</div>\n\n            {/*<CorrelationChart corrData={data}/>*/}\n            <div style={{borderColor: 'gray.400', borderWidth:1, borderRadius:20, padding:20}}>\n            <CorrelationChartV2 corrData={data}/>\n            </div>\n            </HStack>\n\n    </div>}\n    </>)\n\n}\n\nexport default CorrelationChartWrapper;","import * as d3 from \"d3\";\nimport {useEffect, useState} from \"react\";\nimport {Checkbox, HStack, Stack} from \"@chakra-ui/react\";\nimport {dateFromTimeStamp} from \"../../../utils/dateUtils\";\nimport {ColorPalette} from \"../../styles/color_palette\";\nimport {transition} from \"d3-transition\";\nimport {select} from \"d3-selection\";\n\n\nexport function HeatMap(props) {\n\n    const {data, tokensList} = props;\n\n\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const [svg, setSvg] = useState();\n\n    // useEffect(()=>{\n    //     buildHeatMap();\n    // },[])\n\n\n    useEffect(()=>{\n        console.log(\"Updating with data points: \", data.length);\n\n        if(d3.selectAll(\"svg\")) {\n            d3.selectAll(\"svg\").remove();\n            d3.selectAll(\".tooltip\").remove();\n        }\n\n        const s = buildHeatMap();\n        setSvg(s);\n\n    },[data])\n\n\n    const buildHeatMap = () => {\n        const margin = {top: 20, right: 60, bottom: 20, left: 40},\n            width = 1000 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n        const svg = d3.select(\"#my_dataviz\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n//Read the data\n\n\n        // Labels of row and columns -> unique identifier of the column called 'group' and 'variable'\n        const myGroups = Array.from(new Set(data.map(d => d.timestamp)))\n        const myVars = Array.from(new Set(data.map(d => d.symbol)))\n\n        // Build X scales and axis:\n        const x = d3.scaleBand()\n            .range([ 0, width ])\n            .domain(myGroups)\n            .padding(0.05);\n\n        // Build Y scales and axis:\n        const y = d3.scaleBand()\n            .range([ height, 0 ])\n            .domain(myVars)\n            .padding(0.05);\n\n        svg.append(\"g\")\n            .style(\"font-size\", 15)\n            .call(d3.axisLeft(y).tickSize(0))\n            .select(\".domain\").remove()\n\n        // Build color scale\n        const pctgColor = d3.scaleSequential()\n            .interpolator(d3.interpolate(ColorPalette.red,ColorPalette.green))\n            .domain([-0.1,0.1])\n\n        // create a tooltip\n        const tooltip = d3.select(\"#my_dataviz\")\n            .append(\"div\")\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            .style(\"background-color\", \"white\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"2px\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"5px\")\n\n\n        var aS = d3.scaleLinear()\n            .range([-margin.top + 5, height + margin.bottom - 5])\n            .domain([30, -30]);\n\n        var yA = d3.axisRight()\n            .scale(aS)\n            .tickPadding(7)\n            .tickFormat((d=>d + '%'));\n\n        var aG = svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yA)\n            .attr(\"transform\", \"translate(\" + (width + 20) + \" ,0)\")\n\n\n        let color = d3.scaleLinear()\n            .domain([-30, 30])\n            .range([ColorPalette.red, ColorPalette.green]);\n\n\n        var iR = d3.range(-30.1, 30.1, 3);\n        var h = height / iR.length + 3;\n        iR.forEach(function(d){\n            aG.append('rect')\n                .style('fill',color(d))\n                .style('stroke-width', 0)\n                .style('stoke', 'none')\n                .attr('height', h)\n                .attr('width', 10)\n                .attr('x', 0)\n                .attr('y', aS(d))\n        });\n\n\n\n\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        const mouseover = function(event,d) {\n            tooltip\n                .style(\"opacity\", 1)\n            d3.select(this)\n                .style(\"stroke\", \"black\")\n                .style(\"opacity\", 1)\n        }\n        const mousemove = function(event,d) {\n            tooltip\n                .html(d.symbol + ' changed ' +(d.pctChange * 100).toFixed(2)  + '% @ ' + dateFromTimeStamp(d.timestamp))\n                .style(\"position\", \"absolute\")\n                .style(\"left\", (event.clientX + 10) + \"px\")\n                .style(\"top\", (event.clientY - 60) + \"px\")\n\n        }\n        const mouseleave = function(event,d) {\n\n            tooltip\n                .style(\"opacity\", 0)\n            d3.select(this)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8)\n        }\n\n        // add the squares\n        svg.selectAll()\n            .data(data, function(d) {return d.timestamp+':'+d.symbol;})\n            .join(\"rect\")\n            .attr(\"x\", function(d) { return x(d.timestamp) })\n            .attr(\"y\", function(d) { return y(d.symbol) })\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n            .attr(\"width\", x.bandwidth() )\n            .attr(\"height\", y.bandwidth() )\n            .style(\"fill\", function(d) {\n                return pctgColor(d.pctChange);\n            })\n\n            .style(\"stroke-width\", 4)\n            .style(\"stroke\", \"none\")\n            .style(\"opacity\", 0.8)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n\n        return svg;\n\n    }\n\n\n\n\n\n    return (<>\n\n        <div id=\"my_dataviz\" style={{width: 1000, height: 800}}/>\n\n    </>)\n\n\n}","import {\n    Checkbox,\n    HStack,\n    RangeSlider,\n    RangeSliderFilledTrack,\n    RangeSliderThumb,\n    RangeSliderTrack\n} from \"@chakra-ui/react\";\nimport {ColorPalette} from \"../styles/color_palette\";\nimport AvadaSpinner from \"../genericComponents/AvadaSpinner\";\nimport {HeatMap} from \"./heatmap/HeatMap\";\nimport React, {useEffect, useState} from \"react\";\nimport {dateFromTimeStamp} from \"../../utils/dateUtils\";\nimport {fetchTokensForHeatMap, getTokenList} from \"../../services/tokenService\";\nimport AvalyticsSpinner from \"../genericComponents/AvalyticsSpinner\";\n\n\nconst HeatMapWrapper = () => {\n\n\n    const [tokenList, setTokenList] = useState<any[]>([]);\n    const [sliderStep, setSliderStep] = useState<number>(24 * 60 * 60);\n\n    const [tokenPrices, setTokenPrices] = useState<any[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 30 * 24 * 60 * 60 * 1000) / 1000); // 30 days in the past in seconds\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState<any>(dateFromTimeStamp(Date.now() / 1000));\n    const [endOffset, setEndOffset] = useState(Math.round(Date.now() / 1000));\n\n    const [activeTokens, setActiveTokens] = useState<any>([\"WBTC.e\", \"WETH.e\", \"WAVAX.e\", \"LINK.e\", \"TIME\", \"JOE\", \"AAVE.e\"]);\n\n    const [correlationValues, setCorrelationValues] = useState([]);\n\n\n    const fetchPctChanges = () => {\n        setIsLoading(true);\n        fetchTokensForHeatMap(\"Token1Day\", initialOffset, endOffset, activeTokens)\n            .then((tp) => {\n                setTokenPrices(tp.filter((t) => t.symbol != \"SUSHI.e\").sort((a, b) => {\n                    return (a.symbol > b.symbol ? -1 : 1)\n                }))\n                setIsLoading(false);\n                console.log(\"Token prices: \", tokenPrices);\n            });\n    }\n\n\n    useEffect(() => {\n        getTokenList()\n            .then(tl => setTokenList(tl))\n        setIsLoading(true);\n        fetchPctChanges();\n    }, [])\n\n\n    const handleCheckBoxChange = (e: any, idx: number) => {\n        const toAdd = e.target.checked;\n        if (toAdd) {\n            activeTokens.push(tokenList[idx].symbol);\n            setIsLoading(true);\n            fetchPctChanges();\n        } else {\n            const idxToRemove = activeTokens.indexOf(tokenList[idx].symbol);\n            activeTokens.splice(idxToRemove, 1);\n            const currentPrices = tokenPrices;\n            setTokenPrices(currentPrices.filter((tp) => tp.symbol != tokenList[idx].symbol));\n            // tokenPrices;\n        }\n    }\n\n    const handleSelectAll = (e: any) => {\n        console.log(\"After handleSelect: \", e.target.checked);\n        if (e.target.checked) {\n            setActiveTokens(tokenList.map((t) => t.symbol));\n            fetchPctChanges();\n        } else {\n            setActiveTokens([\"WBTC.e\", \"WETH.e\", \"WAVAX.e\", \"LINK.e\", \"TIME\", \"JOE\", \"AAVE.e\"])\n            fetchPctChanges();\n        }\n    }\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date: any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n        console.log(\"Fetch data again\");\n\n    }\n\n    useEffect(() => {\n        fetchPctChanges();\n    }, [initialOffset, endOffset])\n\n\n    const checkActiveTokens = (t: any) => {\n        return activeTokens.includes(t.symbol)\n    }\n\n\n\n    return ( <>\n\n        {tokenPrices.length && (<div><HStack style={{height: '100%'}}>\n\n            {tokenList && <div style={{\n                marginTop: -200,\n            }}>\n                <div style={{fontSize: '1.4em'}}>Tokens</div>\n                <div style={{\n                    height: 550,\n                    marginRight:100,\n                    overflowY: 'scroll',\n                    width: 300,\n                    borderColor: ColorPalette.thirdColor,\n                    borderWidth: 1,\n                    borderRadius: 20,\n                    padding: 20\n                }}>\n\n                    <ul style={{listStyleType: 'none'}}>\n                        {tokenList.map((t: any, idx: number) => <li style={{marginBottom: 5}}>\n                            <Checkbox size='lg' iconColor='red'\n                                      style={{margin: 15}}\n                                      colorScheme='red'\n                                      defaultChecked={checkActiveTokens(t)}\n                                      onChange={(e) => handleCheckBoxChange(e, idx)}>\n                                <HStack style={{marginLeft:20}}>\n                                    <img width={30} src={t.logoUrl}/>\n                                    <div>{t.symbol}</div>\n                                </HStack>\n                            </Checkbox></li>)}\n                    </ul>\n\n                </div>\n            </div>}\n\n            {tokenList.length > 0 && (<div style={{marginLeft: 60}}>\n                {isLoading && (<div style={{position: 'absolute', marginLeft: 550, marginTop: 300}}>\n                    <AvalyticsSpinner style={{width:80, height: 80}}/></div>)}\n\n                <HeatMap tokensList={tokenList} data={tokenPrices}/>\n\n            </div>)}\n\n        </HStack>\n            <HStack>\n                <div style={{\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    marginTop: -180,\n                    borderRadius: 20,\n                    padding: 20,\n                    width: '80%'\n                }}>\n                    <HStack>\n                        <div>\n                            <span>Start date: </span>\n                            <span>{startDate}</span>\n                        </div>\n                        <div> /</div>\n                        <div>\n                            <span>End date: </span>\n                            <span>{endDate}</span>\n                        </div>\n                    </HStack>\n                    <RangeSlider onChange={(e) => onDateDrag(e)}\n                                 onChangeEnd={(e) => onChangeDate(e)}\n                                 defaultValue={[initialOffset, endOffset]}\n                                 min={1629504000} max={Math.round(Date.now() / 1000)}\n                                 step={sliderStep} minStepsBetweenThumbs={10}\n                    >\n                        <RangeSliderTrack bg={ColorPalette.thirdColor}>\n                            <RangeSliderFilledTrack bg={ColorPalette.thirdColor}/>\n                        </RangeSliderTrack>\n                        <RangeSliderThumb boxSize={6} index={0}/>\n                        <RangeSliderThumb boxSize={6} index={1}/>\n                    </RangeSlider>\n                </div>\n\n            </HStack>\n\n        </div>)}\n\n        {isLoading &&\n        <AvalyticsSpinner style={{width:80, height: 80}}/>}</>)\n\n\n}\n\nexport default HeatMapWrapper;","import {HeatMap} from \"./charts/heatmap/HeatMap\";\nimport React, {useEffect, useState} from \"react\";\nimport {fetchTokensForHeatMap, getTokenList, getTokenPriceHistoryDB} from \"../services/tokenService\";\nimport {\n    Avatar,\n    Flex,\n    HStack,\n    RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack,\n    Select,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    VStack\n} from \"@chakra-ui/react\";\nimport AvadaSpinner from \"./genericComponents/AvadaSpinner\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport Title from \"./genericComponents/Title\";\nimport {Checkbox, CheckboxGroup} from '@chakra-ui/react'\nimport BarRaceChart from \"./charts/barRaceChart/BarRaceChart\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\nimport {CorrelationChart} from \"./charts/correlationChart/CorrelationChart\";\nimport CorrelationChartWrapper from \"./charts/CorrelationChartWrapper\";\nimport HeatMapWrapper from \"./charts/HeatMapWrapper\";\n\nexport function MultipleTokens(props: any) {\n\n    const [tokenList, setTokenList] = useState<any[]>([]);\n\n\n    useEffect(() => {\n        getTokenList()\n            .then(tl => setTokenList(tl))\n\n    }, [])\n\n\n    return (\n        <div>\n\n            <div style={{...props.style}}>\n                <Title title=\"Multiple Tokens on Avalanche C-Chain\" extraInfo={\"Comparative analysis between several tokens. Switch between tabs to access different metrics\"}/>\n\n                <Tabs variant='soft-rounded' onChange={(index) => console.log(\"Changed to tab: \", index)} isLazy>\n                    <TabList>\n                        <Tab>Percentage Change History</Tab>\n                        <Tab>Correlation Analysis</Tab>\n                        <Tab>Market Cap History</Tab>\n                    </TabList>\n\n\n                    <TabPanels>\n\n                        <TabPanel style={{height: '100%'}}>\n                            <HeatMapWrapper/>\n                        </TabPanel>\n\n                        <TabPanel style={{height: '100%'}}>\n                            <CorrelationChartWrapper tokenList={tokenList}/>\n                        </TabPanel>\n\n                        <TabPanel>\n                            <BarRaceChart/>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n\n            </div>\n        </div>\n\n    )\n}","import * as d3 from \"d3\";\nimport {useEffect, useState} from \"react\";\nimport {ColorPalette} from \"../../styles/color_palette\";\n\n\nexport default function SteamGraph(props) {\n\n    const [data, setData] = useState([]);\n    const [maxKey, setMaxKey] = useState(null);\n\n\n    const getMax = (d, keys) => {\n        const maxArray = [];\n        const maxKey = []\n\n        keys.forEach((key, idx) => {\n            const arr = d.map((a) => a[key]);\n            console.log(\"MAximu array: \", arr);\n            maxArray.push(Math.max(...arr));\n            maxKey.push(key);\n        })\n        const absMax = Math.max(...maxArray);\n        const index = maxArray.indexOf(absMax);\n        setMaxKey(maxKey[index]);\n        console.log(\"Max array is: \", maxArray);\n        return absMax;\n    }\n\n\n    useEffect(() => {\n\n        if (d3.selectAll(\"svg\")) {\n            d3.selectAll(\"svg\").remove();\n            d3.selectAll(\".tooltip\").remove();\n        }\n        setData(props.data);\n        buildChart(props.data);\n\n    }, [props.data])\n\n\n    const buildChart = (chartData) => {\n        var margin = {top: 20, right: 30, bottom: 0, left: 100},\n            width = 1300 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\"#steam_graph\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        // List of groups = header of the csv files\n        var keys = props.keys;\n\n        // Add X axis\n        var xScale = d3.scaleTime()\n            .domain(d3.extent(chartData, function (d) {\n                return new Date(d.timestamp * 1000);\n            }))\n            .range([0, width]);\n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height * 0.95 + \")\")\n            .call(d3.axisBottom(xScale).tickSize(-height * 0.95).ticks(5))\n            .select(\".domain\").remove()\n        // Customization\n        svg.selectAll(\".tick line\").attr(\"stroke\", \"#b8b8b8\")\n\n\n        const max = getMax(props.data, props.keys);\n\n\n        // Add Y axis\n        var y = d3.scaleLinear()\n            .domain([-max, max])\n            .range([height, 0]);\n\n        svg.append(\"g\")\n            // .attr(\"transform\", \"translate(0,\" + width*0.1 + \")\")\n            .call(d3.axisLeft(y).tickSize(-width).ticks(5))\n            .select(\".domain\").remove()\n\n        // color palette\n        var color = d3.scaleOrdinal()\n            .domain(keys)\n            .range(d3.schemeDark2);\n\n        //stack the data?\n        var stackedData = d3.stack()\n            .offset(d3.stackOffsetSilhouette)\n            .keys(keys)\n            (chartData)\n\n        // create a tooltip\n        var Tooltip = svg\n            .append(\"text\")\n            .attr(\"x\", width - 300)\n            .attr(\"y\", 50)\n            .style(\"opacity\", 0)\n            .attr(\"margin\", 100)\n            .attr(\"font-size\", 26)\n\n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr('color', ColorPalette.mainColor)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"y\", -50 - 10)\n            .attr(\"x\", -height / 2 + 10)\n            .attr(\"dy\", \".75em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text('TVL (USD)');\n\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        var mouseover = function (d) {\n            Tooltip.style(\"opacity\", 1)\n            d3.selectAll(\".myArea\").style(\"opacity\", .2)\n            d3.select(this)\n                .style(\"stroke\", \"black\")\n                .style(\"opacity\", 1)\n        }\n\n        var mousemove = function (d, i) {\n            let grp = d.target.__data__.key\n            Tooltip.text(grp.split(\"-\").join(\" / \"))\n\n        }\n        var mouseleave = function (d) {\n            Tooltip.style(\"opacity\", 0)\n            d3.selectAll(\".myArea\").style(\"opacity\", 1).style(\"stroke\", \"none\")\n        }\n\n        // Area generator\n        var area = d3.area()\n            .x(function (d) {\n                return xScale(new Date(d.data.timestamp * 1000));\n            })\n            .y0(function (d) {\n                return y(d[0]);\n            })\n            .y1(function (d) {\n                return y(d[1]);\n            })\n\n        // Show the areas\n        svg\n            .selectAll(\"steam_graph\")\n            .data(stackedData)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"myArea\")\n            .style(\"fill\", function (d) {\n                return color(d.key);\n            })\n            .attr(\"d\", area)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n    }\n\n\n\n\n\n    return (<>\n        <div id=\"steam_graph\"/>\n    </>)\n\n}","import Moralis from \"moralis\";\n\n\nexport const getDexList = async () : Promise<any[]> => {\n\n        const DEX = Moralis.Object.extend(\"Dex\")\n        const query = new Moralis.Query(DEX);\n        query.select(\"name\", \"id\");\n        const results = await query.find();\n        const dexList = results.map((r)=>{\n            // const dex = r;\n            return {label:r.get(\"name\"),address: r.get(\"address\"),erc20: r.get(\"erc20address\")}\n        });\n        console.log(\"Got results: \", dexList);\n\n        // console.log(\"Name is: \", dexes[0].get(\"name\"))\n        return dexList;\n    }\n\n\nexport const getPoolList = async () : Promise<any[]> => {\n    const POOL = Moralis.Object.extend(\"DexTokenPairControl\")\n    const query = new Moralis.Query(POOL);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"pairAddress\");\n    const results = await query.find();\n    const poolList = results.map((r)=>{\n        // const dex = r;\n        return {name:r.get(\"dexName\"),token0: r.get(\"symbol0\"),token1: r.get(\"symbol1\"), pairAddress: r.get('pairAddress')}\n    });\n    console.log(\"Got results: \", poolList);\n\n    // console.log(\"Name is: \", dexes[0].get(\"name\"))\n    return poolList;\n\n}\n\n\nexport const getInfoForPools = async (date?: any) => {\n\n    const PoolInfo = Moralis.Object.extend(\"DexTokenPairLiquidity\");\n    const query = new Moralis.Query(PoolInfo);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"reserve0\",\"reserve1\",\"tvl0\",\"tvl1\",\"timeStamp\");\n    if(date) {\n        query.greaterThan(\"timeStamp\", date);\n    }\n    query.limit(5000);\n    query.ascending(\"timeStamp\");\n    const results = await query.find();\n    const processedData = [];\n    const poolInfo = results.map((r:any)=>{\n        return {dexName: r.get(\"dexName\"), symbol0: r.get(\"symbol0\"), symbol1: r.get(\"symbol1\"), reserve0: r.get(\"reserve0\"), reserve1: r.get(\"reserve1\"), tvl0: r.get(\"tvl0\"), tvl1: r.get(\"tvl1\")}\n    })\n\n    return poolInfo;\n}\n\n\nexport const getInfoForPoolsForPair = async (address?: any, initialDate?: any, finalDate?: any) => {\n\n    const PoolInfo = Moralis.Object.extend(\"DexTokenPairLiquidity\");\n    const query = new Moralis.Query(PoolInfo);\n    query.select(\"dexName\", \"symbol0\",\"symbol1\",\"reserve0\",\"reserve1\",\"tvl0\",\"tvl1\",\"timeStamp\");\n    if(initialDate) {\n        query.greaterThan(\"timeStamp\", initialDate);\n    }\n    if(finalDate) {\n        query.lessThan(\"timeStamp\", finalDate);\n    }\n    query.limit(5000);\n    query.equalTo(\"pairAddress\", address);\n    query.ascending(\"timeStamp\");\n    const results = await query.find();\n    const poolInfo = results.map((r:any)=>{\n        return {dexName: r.get(\"dexName\"), symbol0: r.get(\"symbol0\"), symbol1: r.get(\"symbol1\"),\n            reserve0: Math.round(r.get(\"reserve0\")), reserve1: Math.round(r.get(\"reserve1\")), tvl0: Math.round(r.get(\"tvl0\")), tvl1: Math.round(r.get(\"tvl1\")), timestamp: r.get(\"timeStamp\")}\n    })\n\n    return poolInfo;\n}\n\n","import SteamGraph from \"./charts/steamChart/SteamGraph\";\nimport React, {useEffect, useState} from \"react\";\nimport {getInfoForPools, getInfoForPoolsForPair, getPoolList} from \"../services/dexService\";\nimport {Checkbox, HStack} from \"@chakra-ui/react\";\nimport Title from \"./genericComponents/Title\";\nimport {ColorPalette} from \"./styles/color_palette\";\nimport DateSlider from \"./genericComponents/DateSlider\";\nimport {dateFromTimeStamp} from \"../utils/dateUtils\";\nimport ExportIcon from \"./genericComponents/ExportIcon\";\n\nconst addressesToInclude = [\"0x72c3438cf1c915ecf5d9f17a6ed346b273d5bf71\",\"0x3daf1c6268362214ebb064647555438c6f365f96\",\"0x454e67025631c065d3cfad6d71e6892f74487a15\"\n    ,\"0xfe15c2695f1f920da45c30aae47d11de51007af9\",\"0x1643de2efb8e35374d796297a9f95f64c082a8ce\",\"0x87dee1cc9ffd464b79e058ba20387c1984aed86a\",\"0xa6908c7e3be8f4cd2eb704b5cb73583ebf56ee62\"\n    ,\"0x6f3a0c89f611ef5dc9d96650324ac633d02265d3\",\"0xd5a37dc5c9a396a03dd1136fc76a1a02b1c88ffa\",\"0xb5c9e891af3063004a441ba4fab4ca3d6deb5626\",\"0xed8cbd9f0ce3c6986b22002f03c6475ceb7a6256\",\n    \"0x2774516897ac629ad3ed9dcac7e375dda78412b9\",\"0x67926d973cd8ee876ad210faaf7dffa99e414acf\",\"0x63abe32d0ee76c05a11838722a63e012008416e6\",\"0xa389f9430876455c36478deea9769b7ca4e3ddb1\",\n    \"0x781655d802670bba3c89aebaaea59d3182fd755d\",\"0x2e02539203256c83c7a9f6fa6f8608a32a2b1ca2\",\"0xf64e1c5b6e17031f5504481ac8145f4c3eab4917\",\"0xb9f425bc9af072a91c423e31e9eb7e04f226b39d\",\n    \"0x62475f52add016a06b398aa3b2c2f2e540d36859\",\"0x140cac5f0e05cbec857e65353839fddd0d8482c1\",\"0xc2ea99c031b05ae03044c857c78afb5671dee96b\",\"0xc3e6d9f7a3a5e3e223356383c7c055ee3f26a34f\",\n    \"0x113f413371fc4cc4c9d6416cf1de9dfd7bf747df\",\"0x361221991b3b6282ff3a62bc874d018bfaf1f8c8\",\"0x199fb78019a08af2cb6a078409d0c8233eba8a0c\",\"0x7b7617c7b2236d7871741783cae8bcc222c2e05d\",\n    \"0xbe4b31fce1885fcd0e3351aa8b392fbcc4ef6036\",\"0x50141c21e4e861d4b2cbeb825b9a2b5e5e09a186\"]\n\n\n\nconst PoolView = (props:any) => {\n\n    const [data, setData] = useState<any>([]);\n    const [poolList, setPoolList] = useState<any[]>([]);\n    const [activePools,setActivePools] = useState<any>([]);\n    const [keys, setKeys] = useState<string[]>([]);\n    const [lastRequestLength, setLastRequestLength] = useState<any>(0);\n    const [initialOffset, setInitialOffset] = useState((Date.now() - 60 * 24 * 60 * 60 * 1000) / 1000); // 30 days in the past in seconds\n    const [startDate, setStartDate] = useState<any>(dateFromTimeStamp(initialOffset));\n    const [endDate, setEndDate] = useState(dateFromTimeStamp(Date.now() / 1000));\n    const [endOffset, setEndOffset] = useState(Math.round(Date.now() / 1000));\n\n    useEffect(()=> {\n        getPoolList()\n            .then((p)=>{\n                console.log(\"Pools: \", p);\n                const pools = p.filter(r=>addressesToInclude.includes(r.pairAddress));\n                setPoolList(pools);\n            });\n    }, [])\n\n    useEffect(()=> {\n        if(poolList.length > 0) {\n            console.log(\"Will activate: \", poolList[0]);\n            setActivePools([poolList[0]]);\n            console.log(\"Active pool is: \", activePools);\n        }\n    },[poolList])\n\n\n\n    // useEffect(() => {\n    //     console.log(\"Fetching new data!!!!\");\n    //     if(activePools.length > 0 ) {\n    //         getInfoForPoolsForPair(activePools[activePools.length -1].pairAddress, initialOffset, endOffset)\n    //             .then((d)=>{\n    //                 const newArr : any[] = [];\n    //                 const exis\n    //\n    //                 const newKey = 'tvl'+d[0].symbol0+'-'+d[0].symbol1;\n    //                 console.log(\"Current data : \", data);\n    //                 if(data.length >0) {\n    //                     d.map((nd:any, idx:number) => {\n    //                         const obj : any = {};\n    //                         obj[newKey] = nd.tvl0 + nd.tvl1;\n    //                         Object.assign(data[idx],{...obj})\n    //                         // newArr.push(obj);\n    //                     })\n    //                     setData(()=>[...data]);\n    //\n    //                 } else {\n    //                     d.map((nd:any, idx:number) => {\n    //                         const obj : any = {};\n    //                         obj[newKey] = nd.tvl0 + nd.tvl1;\n    //                         obj[\"timestamp\"] = nd.timestamp;\n    //                         newArr.push(obj);\n    //                     })\n    //                     setData(()=>[...newArr]);\n    //                 }\n    //                 keys.push(newKey)\n    //                 setKeys(keys);\n    //             })\n    //     }\n    // }, [initialOffset, endOffset])\n\n    const onDateDrag = (date: any) => {\n        setStartDate(dateFromTimeStamp(date[0]))\n        setEndDate(dateFromTimeStamp(date[1]))\n    }\n\n    const onChangeDate = (date: any) => {\n        setInitialOffset(date[0]);\n        setEndOffset(date[1]);\n\n    }\n\n    const handleCheckBoxChange = (e:any,idx:number) => {\n        console.log(\"CheckBoxChanged to: \", e.target.checked);\n        console.log(\"With value: \", e.target.value);\n\n        if(e.target.checked) {\n            // Add new token to active pool list\n            setActivePools([...activePools, poolList[idx]]);\n        } else {\n            // Remove using value...\n            console.log(\"Filtering: \", e.target.value);\n            setActivePools(activePools.filter((ap:any)=>ap.pairAddress != e.target.value));\n        }\n\n        //Chec\n\n    }\n\n    useEffect(()=>{\n        console.log(\"Current list is: \", activePools);\n        console.log(\"Last request length: \", lastRequestLength);\n\n        if(activePools.length > 0){\n\n            if(activePools.length > lastRequestLength) {\n                getInfoForPoolsForPair(activePools[activePools.length -1].pairAddress, initialOffset, endOffset)\n                    .then((d)=>{\n                        const newArr : any[] = [];\n                        const newKey = 'tvl'+d[0].symbol0+'-'+d[0].symbol1;\n\n                        if(data.length >0) {\n                            d.map((nd:any, idx:number) => {\n                                const obj : any = {};\n                                obj[newKey] = nd.tvl0 + nd.tvl1;\n                                Object.assign(data[idx],{...obj})\n                                // newArr.push(obj);\n                            })\n                            setData(()=>[...data]);\n\n                        } else {\n                            d.map((nd:any, idx:number) => {\n                                const obj : any = {};\n                                obj[newKey] = nd.tvl0 + nd.tvl1;\n                                obj[\"timestamp\"] = nd.timestamp;\n                                newArr.push(obj);\n                            })\n                            setData(()=>[...newArr]);\n                        }\n                        keys.push(newKey)\n                        setKeys(keys);\n                    })\n            } else {\n                // Remove from current array\n                const addressArray = activePools.map((ap:any)=>`tvl${ap.token0}-${ap.token1}`);\n                console.log(\"Address array is: \", addressArray);\n                const keys = Object.keys(data[0]).filter(k=>k!=\"timestamp\");\n                console.log(\"Keys is: \", keys);\n                const addressToRemove = keys.filter((a:any)=>!addressArray.includes(a))[0];\n                console.log(\"Address to remove: \", addressToRemove);\n                const newArr = data.map((d:any)=>{\n                    delete d[addressToRemove];\n                    return d;\n                });\n                console.log(\"New data arr: \", data);\n                const keyIndex = keys.indexOf(addressToRemove);\n                const newKeys = keys.filter((k)=>k!=addressToRemove);\n                setKeys(newKeys);\n                setData(newArr)\n            }\n\n        }\n        setLastRequestLength(activePools.length);\n\n    },[activePools])\n\n\n    useEffect(()=>{\n        console.log(\"Keys changed to: \", keys);\n    },[keys])\n\n\n    const checkIsActive = (idx:number, t:any) : boolean => {\n        return `${t.token0}/${t.token1}` == `${activePools[idx]?.token0}/${activePools[idx]?.token1}`\n    }\n\n\n    return (<div style={{...props.style}}>\n        <Title title=\"Pool Liquidity (Total Value Locked - TVL) on TraderJoe\" extraInfo={\"Steam charts provide a visual comparison of\" +\n        \" total value locked for different liquidity pools. All pools listed belong to the Trader JOE DEX from Avalanche C-chain\"}/>\n\n        <HStack>\n            {activePools.length>0 && (<div style={{\n                height: 600,\n                overflowY: 'scroll',\n                width: 250,\n                borderColor: ColorPalette.thirdColor,\n                borderWidth: 1,\n                borderRadius: 20,\n                padding: 20\n            }}>\n\n                <ul style={{ listStyleType: 'none'}}>\n                    {poolList.map((t: any, idx: number) => <li style={{marginBottom:5}}><Checkbox size='lg' style={{margin: 5}}\n                                                                                                  defaultChecked={checkIsActive(idx,t)}\n                                                                                                  value={t.pairAddress}\n                                                                                                  onChange={(e) => handleCheckBoxChange(e, idx)}>{t.token0}/{t.token1}</Checkbox></li>)}\n                </ul>\n            </div>)}\n\n\n            <div style={{height:600, borderWidth:1, borderRadius:20, marginLeft: 60,marginBottom:20}}>\n                {data.length > 0 && <SteamGraph data={data} keys={keys}/>}\n            </div>\n\n        </HStack>\n        <HStack>\n    {/*    <DateSlider style={{marginTop: 50}} on startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate} onChangeDate={onChangeDate} onDateDrag={onDateDrag}*/}\n    {/*initialOffset={initialOffset} setInitialOffset={setInitialOffset} endOffset={endOffset} setEndOffset={setEndOffset} sliderStep={24 * 60 * 60}/>*/}\n        <ExportIcon/>\n        </HStack>\n        {/*{poolList.map((t:any, idx: number) =>*/}\n        {/*    <Checkbox style={{margin:5}} defaultChecked={false} value={t.pairAddress} onChange={(e)=>handleCheckBoxChange(e, idx)}>{t.token0}/{t.token1}</Checkbox>)}*/}\n\n\n\n\n    </div>)\n\n\n}\n\n\nexport default PoolView;","import React, {useEffect, useState} from \"react\";\nimport {HStack} from \"@chakra-ui/react\";\n\nconst UnderConstruction = ({icon,name} : any) => {\n\n    return (\n        <div style={{fontSize:40}}>\n            <div style={{ position: 'absolute' ,left: '50%', top: '40%',   transform: 'translate(-50%, -50%)'}}>\n                <HStack spacing={'24px'}>\n                    <div style={{marginBottom: 50}}>\n                        <img style={{width:120, height:120}} src={icon}/>\n                    </div>\n                        <div style={{fontSize: 80}}>{name}</div>\n                </HStack>\n                <h1>Work in progress...</h1>\n            </div>\n        </div>\n    )\n\n}\n\nexport default UnderConstruction;","export default __webpack_public_path__ + \"static/media/whales_bl.3ab928e7.png\";","export default __webpack_public_path__ + \"static/media/mempools_bl.d6fe8483.png\";","export default __webpack_public_path__ + \"static/media/bridges_bl.1e2e791e.png\";","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport Moralis from \"moralis\";\nimport {useMoralis} from \"react-moralis\";\nimport Tokens from \"./components/Tokens\";\nimport {BrowserRouter, HashRouter, Route, Routes} from \"react-router-dom\";\nimport TokenView from \"./components/TokenView\";\nimport CandleStickTemplate from \"./components/charts/candlestick/CandleStickTemplate\";\nimport {appId, serverUrl} from \"./index\";\nimport {Dashboard} from \"./components/dashboard/Dashboard\";\nimport {Sidebar} from \"./components/sidebar/Sidebar\";\nimport {\n    Button, DrawerBody,\n    DrawerCloseButton,\n    DrawerContent, DrawerFooter,\n    DrawerHeader,\n    DrawerOverlay,\n    Grid, Drawer,\n    GridItem, Input,\n    useDisclosure, Flex\n} from \"@chakra-ui/react\";\nimport {MultipleTokens} from \"./components/MultipleTokens\";\nimport PoolView from \"./components/PoolView\";\nimport {ColorPalette} from \"./components/styles/color_palette\";\nimport UnderConstruction from \"./components/genericComponents/UnderConstruction\";\nimport whales_bl from './images/whales_bl.png';\nimport mempools_bl from './images/mempools_bl.png';\nimport bridges_bl from './images/bridges_bl.png';\n\nfunction App() {\n    Moralis.initialize(appId);\n    Moralis.serverURL = serverUrl;\n\n    const {authenticate, isAuthenticating, isAuthenticated, logout, authError} =\n        useMoralis();\n\n    const authVars = {authenticate, isAuthenticating, isAuthenticated, logout, authError}\n    const [user, setUser] = useState();\n    const [navSize, setNavSize] = useState('large');\n\n    useEffect(() => console.log(\"User now is: \", user), [user])\n\n    // const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n\n    // const [dexList, setDexList] = useState<any[]>([]);\n\n    return (\n        <Flex style={{backgroundColor: ColorPalette.backgroundColor, height: '100vh', fontStyle: 'nunito'}}>\n\n            <HashRouter>\n\n                <Grid h=\"95vh\" w='99vw' templateColumns='repeat(10, 1fr)'>\n\n\n                    <GridItem clsSpan={2} style={{height: \"100vh\"}}>\n                        <Sidebar navSize={navSize} setNavSize={setNavSize}/>\n                    </GridItem>\n\n                    <GridItem colSpan={9} style={{marginLeft: 20, width: '100%', overflow: 'auto'}}>\n                        <Routes>\n                            <Route path=\"/\" element={<Dashboard style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/tokens\" element={<Tokens style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/multiTokens\" element={<MultipleTokens style={{marginLeft: 30}}/>}/>\n                            <Route path=\"/token/:address\" element={<TokenView style={{marginLeft: 30}}/>}/>\n\n                            <Route path=\"/pools\" element={<PoolView style={{marginLeft: 30}} />}/>\n                            <Route path=\"/whales\" element={<UnderConstruction icon={whales_bl} name={'Whales'}/>}/>\n                            <Route path=\"/memPools\" element={<UnderConstruction icon={mempools_bl} name={'MemPools'}/>}/>\n                            <Route path=\"/bridges\" element={<UnderConstruction icon={bridges_bl} name={'Bridges'}/>}/>\n                            <Route path=\"/statistics\" element={<CandleStickTemplate/>}/>\n\n                        </Routes>\n                    </GridItem>\n                </Grid>\n                {/*</div>*/}\n            </HashRouter>\n        </Flex>\n    )\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ChakraProvider, extendTheme} from \"@chakra-ui/react\";\nimport {MoralisProvider} from \"react-moralis\";\n// import WithSubnavigation from \"./components/Navbar\";\n\n\nconst theme = extendTheme({\n    'config': {\n        initialColorMode:'light'\n    }\n});\n\n// export const appId = \"3zMC9oNElQZ4Ew0pzpmSwzve9r7JTj1tajiJwQx6\";\n// export const serverUrl = \"https://1tm9bltzoknp.usemoralis.com:2053/server\";\nexport const serverUrl = \"https://dwphjko0r4hx.usemoralis.com:2053/server\";\nexport const appId = \"Mgs7zi861Gx6HwE30jwiGuVBsP7LXybNW0x4UscU\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MoralisProvider appId={appId} serverUrl={serverUrl}>\n          <ChakraProvider theme={theme}>\n              <App />\n          </ChakraProvider>\n      </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}